Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 27.62      0.29     0.29     5000     0.06     0.20  Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&)
 12.86      0.43     0.14 51292673     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::at(unsigned long)
 11.91      0.55     0.13 51312896     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long)
 10.95      0.67     0.12 51312896     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator[](unsigned long)
 10.00      0.77     0.11 51332979     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const
  7.14      0.85     0.08 51292673     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::_M_range_check(unsigned long) const
  6.67      0.92     0.07 51292673     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::operator[](unsigned long)
  5.72      0.98     0.06 51318272     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::size() const
  4.76      1.03     0.05 51312896     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_range_check(unsigned long) const
  1.91      1.05     0.02        5     4.00     4.00  void std::vector<Faction, std::allocator<Faction> >::emplace_back<>()
  0.48      1.05     0.01     6741     0.00     0.00  std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop()
  0.00      1.05     0.00   307668     0.00     0.00  __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move* const&)
  0.00      1.05     0.00   297377     0.00     0.00  __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const
  0.00      1.05     0.00   268639     0.00     0.00  __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator+(long) const
  0.00      1.05     0.00   135830     0.00     0.00  std::remove_reference<Move&>::type&& std::move<Move&>(Move&)
  0.00      1.05     0.00    74788     0.00     0.00  compareMove::operator()(Move, Move)
  0.00      1.05     0.00    59495     0.00     0.00  bool __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >)
  0.00      1.05     0.00    57956     0.00     0.00  operator new(unsigned long, void*)
  0.00      1.05     0.00    53928     0.00     0.00  Cell::Cell()
  0.00      1.05     0.00    43996     0.00     0.00  __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::base() const
  0.00      1.05     0.00    41984     0.00     0.00  Cell const& std::forward<Cell const&>(std::remove_reference<Cell const&>::type&)
  0.00      1.05     0.00    41472     0.00     0.00  __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::base() const
  0.00      1.05     0.00    36736     0.00     0.00  Cell* std::__addressof<Cell>(Cell&)
  0.00      1.05     0.00    34560     0.00     0.00  std::move_iterator<Cell*>::base() const
  0.00      1.05     0.00    27604     0.00     0.00  Move&& std::forward<Move>(std::remove_reference<Move>::type&)
  0.00      1.05     0.00    21998     0.00     0.00  __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&)
  0.00      1.05     0.00    20736     0.00     0.00  bool __gnu_cxx::operator!=<Cell const*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&)
  0.00      1.05     0.00    20480     0.00     0.00  __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator++()
  0.00      1.05     0.00    20480     0.00     0.00  __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator*() const
  0.00      1.05     0.00    20480     0.00     0.00  void std::_Construct<Cell, Cell const&>(Cell*, Cell const&)
  0.00      1.05     0.00    17280     0.00     0.00  bool std::operator==<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&)
  0.00      1.05     0.00    17280     0.00     0.00  bool std::operator!=<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&)
  0.00      1.05     0.00    16256     0.00     0.00  std::move_iterator<Cell*>::operator*() const
  0.00      1.05     0.00    16256     0.00     0.00  std::move_iterator<Cell*>::operator++()
  0.00      1.05     0.00    16256     0.00     0.00  void std::_Construct<Cell, Cell>(Cell*, Cell&&)
  0.00      1.05     0.00    16256     0.00     0.00  Cell&& std::forward<Cell>(std::remove_reference<Cell>::type&)
  0.00      1.05     0.00    15638     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::size() const
  0.00      1.05     0.00    15293     0.00     0.00  bool __gnu_cxx::__ops::_Iter_comp_val<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move&)
  0.00      1.05     0.00    15257     0.00     0.00  std::vector<Move, std::allocator<Move> >::end()
  0.00      1.05     0.00    15257     0.00     0.00  std::vector<Move, std::allocator<Move> >::begin()
  0.00      1.05     0.00    15256     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_val<compareMove>::_Iter_comp_val(compareMove)
  0.00      1.05     0.00    15256     0.00     0.00  void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>)
  0.00      1.05     0.00    13837     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::_M_range_check(unsigned long) const
  0.00      1.05     0.00    13837     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::at(unsigned long)
  0.00      1.05     0.00    13837     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::operator[](unsigned long)
  0.00      1.05     0.00    12014     0.00     0.00  Cell::init(int)
  0.00      1.05     0.00    10240     0.00     0.00  Cell::Cell(int, int)
  0.00      1.05     0.00    10240     0.00     0.00  void __gnu_cxx::new_allocator<Cell>::construct<Cell, Cell const&>(Cell*, Cell const&)
  0.00      1.05     0.00    10240     0.00     0.00  void std::allocator_traits<std::allocator<Cell> >::construct<Cell, Cell const&>(std::allocator<Cell>&, Cell*, Cell const&)
  0.00      1.05     0.00    10240     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::push_back(Cell const&)
  0.00      1.05     0.00     8515     0.00     0.00  Move::Move(int, int, int, int)
  0.00      1.05     0.00     8515     0.00     0.00  Faction::getSpeed()
  0.00      1.05     0.00     8515     0.00     0.00  void __gnu_cxx::new_allocator<Move>::construct<Move, Move>(Move*, Move&&)
  0.00      1.05     0.00     8515     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(compareMove)
  0.00      1.05     0.00     8515     0.00     0.00  __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator-(long) const
  0.00      1.05     0.00     8515     0.00     0.00  std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&)
  0.00      1.05     0.00     8515     0.00     0.00  void std::allocator_traits<std::allocator<Move> >::construct<Move, Move>(std::allocator<Move>&, Move*, Move&&)
  0.00      1.05     0.00     8515     0.00     0.00  void std::vector<Move, std::allocator<Move> >::emplace_back<Move>(Move&&)
  0.00      1.05     0.00     8515     0.00     0.00  std::vector<Move, std::allocator<Move> >::push_back(Move&&)
  0.00      1.05     0.00     8515     0.00     0.00  void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove)
  0.00      1.05     0.00     6829     0.00     0.00  std::vector<Move, std::allocator<Move> >::size() const
  0.00      1.05     0.00     6769     0.00     0.00  Board::step(int)
  0.00      1.05     0.00     6769     0.00     0.00  __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move const* const&)
  0.00      1.05     0.00     6769     0.00     0.00  __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::operator*() const
  0.00      1.05     0.00     6769     0.00     0.00  std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::top() const
  0.00      1.05     0.00     6769     0.00     0.00  std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::size() const
  0.00      1.05     0.00     6769     0.00     0.00  std::vector<Move, std::allocator<Move> >::begin() const
  0.00      1.05     0.00     6769     0.00     0.00  std::vector<Move, std::allocator<Move> >::front() const
  0.00      1.05     0.00     6742     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::_Iter_comp_iter(compareMove)
  0.00      1.05     0.00     6742     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<compareMove> __gnu_cxx::__ops::__iter_comp_iter<compareMove>(compareMove)
  0.00      1.05     0.00     6741     0.00     0.00  void __gnu_cxx::new_allocator<Move>::destroy<Move>(Move*)
  0.00      1.05     0.00     6741     0.00     0.00  __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator--()
  0.00      1.05     0.00     6741     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(__gnu_cxx::__ops::_Iter_comp_iter<compareMove>)
  0.00      1.05     0.00     6741     0.00     0.00  void std::allocator_traits<std::allocator<Move> >::destroy<Move>(std::allocator<Move>&, Move*)
  0.00      1.05     0.00     6741     0.00     0.00  std::vector<Move, std::allocator<Move> >::pop_back()
  0.00      1.05     0.00     6741     0.00     0.00  void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>)
  0.00      1.05     0.00     6741     0.00     0.00  void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>)
  0.00      1.05     0.00     6741     0.00     0.00  void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove)
  0.00      1.05     0.00     4118     0.00     0.00  std::move_iterator<Move*>::base() const
  0.00      1.05     0.00     3328     0.00     0.00  __gnu_cxx::new_allocator<Cell>::max_size() const
  0.00      1.05     0.00     2942     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator()
  0.00      1.05     0.00     2304     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() const
  0.00      1.05     0.00     2059     0.00     0.00  bool std::operator==<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&)
  0.00      1.05     0.00     2059     0.00     0.00  bool std::operator!=<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&)
  0.00      1.05     0.00     2048     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::max_size() const
  0.00      1.05     0.00     2048     0.00     0.00  std::move_iterator<Cell*>::move_iterator(Cell*)
  0.00      1.05     0.00     2048     0.00     0.00  std::allocator_traits<std::allocator<Cell> >::max_size(std::allocator<Cell> const&)
  0.00      1.05     0.00     2048     0.00     0.00  std::move_iterator<Cell*> std::__make_move_if_noexcept_iterator<Cell, std::move_iterator<Cell*> >(Cell*)
  0.00      1.05     0.00     2047     0.00     0.00  std::move_iterator<Move*>::operator*() const
  0.00      1.05     0.00     2047     0.00     0.00  std::move_iterator<Move*>::operator++()
  0.00      1.05     0.00     2047     0.00     0.00  void std::_Construct<Move, Move>(Move*, Move&&)
  0.00      1.05     0.00     2047     0.00     0.00  Move* std::__addressof<Move>(Move&)
  0.00      1.05     0.00     1774     0.00     0.00  Board::setCell(int, int, int, int)
  0.00      1.05     0.00     1774     0.00     0.00  Faction::getHealth()
  0.00      1.05     0.00     1769     0.00     0.00  Faction::getAccuracy()
  0.00      1.05     0.00     1769     0.00     0.00  Faction::getStrength()
  0.00      1.05     0.00     1535     0.00     0.00  void std::_Destroy_aux<true>::__destroy<Cell*>(Cell*, Cell*)
  0.00      1.05     0.00     1535     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_M_deallocate(Cell*, unsigned long)
  0.00      1.05     0.00     1535     0.00     0.00  void std::_Destroy<Cell*>(Cell*, Cell*)
  0.00      1.05     0.00     1535     0.00     0.00  void std::_Destroy<Cell*, Cell>(Cell*, Cell*, std::allocator<Cell>&)
  0.00      1.05     0.00     1280     0.00     0.00  __gnu_cxx::new_allocator<Cell>::deallocate(Cell*, unsigned long)
  0.00      1.05     0.00     1280     0.00     0.00  __gnu_cxx::new_allocator<Cell>::allocate(unsigned long, void const*)
  0.00      1.05     0.00     1280     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_M_allocate(unsigned long)
  0.00      1.05     0.00     1280     0.00     0.00  std::allocator_traits<std::allocator<Cell> >::deallocate(std::allocator<Cell>&, Cell*, unsigned long)
  0.00      1.05     0.00     1280     0.00     0.00  std::allocator_traits<std::allocator<Cell> >::allocate(std::allocator<Cell>&, unsigned long)
  0.00      1.05     0.00     1143     0.00     0.00  std::remove_reference<Cell*&>::type&& std::move<Cell*&>(Cell*&)
  0.00      1.05     0.00     1068     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      1.05     0.00     1024     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::_M_check_len(unsigned long, char const*) const
  0.00      1.05     0.00     1024     0.00     0.00  Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*)
  0.00      1.05     0.00     1024     0.00     0.00  void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&)
  0.00      1.05     0.00     1024     0.00     0.00  Cell* std::uninitialized_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*)
  0.00      1.05     0.00     1024     0.00     0.00  Cell* std::__uninitialized_copy_a<std::move_iterator<Cell*>, Cell*, Cell>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*, std::allocator<Cell>&)
  0.00      1.05     0.00     1024     0.00     0.00  Cell* std::__uninitialized_move_if_noexcept_a<Cell*, Cell*, std::allocator<Cell> >(Cell*, Cell*, Cell*, std::allocator<Cell>&)
  0.00      1.05     0.00      767     0.00     0.00  __gnu_cxx::new_allocator<Cell>::~new_allocator()
  0.00      1.05     0.00      767     0.00     0.00  std::allocator<Cell>::~allocator()
  0.00      1.05     0.00      639     0.00     0.00  __gnu_cxx::new_allocator<Cell>::new_allocator(__gnu_cxx::new_allocator<Cell> const&)
  0.00      1.05     0.00      639     0.00     0.00  std::allocator<Cell>::allocator(std::allocator<Cell> const&)
  0.00      1.05     0.00      638     0.00     0.00  std::vector<Cell, std::allocator<Cell> >* std::__addressof<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >&)
  0.00      1.05     0.00      512     0.00     0.00  __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::__normal_iterator(Cell const* const&)
  0.00      1.05     0.00      511     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::~_Vector_impl()
  0.00      1.05     0.00      511     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::~_Vector_base()
  0.00      1.05     0.00      511     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::~vector()
  0.00      1.05     0.00      392     0.00     0.00  std::vector<Cell, std::allocator<Cell> > const& std::forward<std::vector<Cell, std::allocator<Cell> > const&>(std::remove_reference<std::vector<Cell, std::allocator<Cell> > const&>::type&)
  0.00      1.05     0.00      383     0.00     0.00  void std::_Destroy<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*)
  0.00      1.05     0.00      381     0.00     0.00  std::enable_if<std::__and_<std::is_move_constructible<Cell*>, std::is_move_assignable<Cell*> >::value, void>::type std::swap<Cell*>(Cell*&, Cell*&)
  0.00      1.05     0.00      270     0.00     0.00  std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::base() const
  0.00      1.05     0.00      258     0.00     0.00  __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::base() const
  0.00      1.05     0.00      256     0.00     0.00  __gnu_cxx::__alloc_traits<std::allocator<Cell> >::_S_select_on_copy(std::allocator<Cell> const&)
  0.00      1.05     0.00      256     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::end() const
  0.00      1.05     0.00      256     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::begin() const
  0.00      1.05     0.00      256     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell> const&)
  0.00      1.05     0.00      256     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_M_create_storage(unsigned long)
  0.00      1.05     0.00      256     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(unsigned long, std::allocator<Cell> const&)
  0.00      1.05     0.00      256     0.00     0.00  std::allocator_traits<std::allocator<Cell> >::select_on_container_copy_construction(std::allocator<Cell> const&)
  0.00      1.05     0.00      256     0.00     0.00  Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*)
  0.00      1.05     0.00      256     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&)
  0.00      1.05     0.00      256     0.00     0.00  Cell* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*)
  0.00      1.05     0.00      256     0.00     0.00  Cell* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, Cell>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, std::allocator<Cell>&)
  0.00      1.05     0.00      254     0.00     0.00  std::remove_reference<std::allocator<Cell>&>::type&& std::move<std::allocator<Cell>&>(std::allocator<Cell>&)
  0.00      1.05     0.00      180     0.00     0.00  std::vector<int, std::allocator<int> >::size() const
  0.00      1.05     0.00      137     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
  0.00      1.05     0.00      135     0.00     0.00  bool std::operator==<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&)
  0.00      1.05     0.00      135     0.00     0.00  bool std::operator!=<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&)
  0.00      1.05     0.00      131     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const
  0.00      1.05     0.00      129     0.00     0.00  bool __gnu_cxx::operator!=<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&)
  0.00      1.05     0.00      128     0.00     0.00  __gnu_cxx::new_allocator<Cell>::new_allocator()
  0.00      1.05     0.00      128     0.00     0.00  void __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&)
  0.00      1.05     0.00      128     0.00     0.00  __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator++()
  0.00      1.05     0.00      128     0.00     0.00  __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator*() const
  0.00      1.05     0.00      128     0.00     0.00  std::allocator<Cell>::allocator()
  0.00      1.05     0.00      128     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl()
  0.00      1.05     0.00      128     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base()
  0.00      1.05     0.00      128     0.00     0.00  void std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&)
  0.00      1.05     0.00      128     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::vector()
  0.00      1.05     0.00      128     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::push_back(std::vector<Cell, std::allocator<Cell> > const&)
  0.00      1.05     0.00      128     0.00     0.00  void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&)
  0.00      1.05     0.00      127     0.00     0.00  std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator*() const
  0.00      1.05     0.00      127     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_M_swap_data(std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl&)
  0.00      1.05     0.00      127     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell>&&)
  0.00      1.05     0.00      127     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&)
  0.00      1.05     0.00      127     0.00     0.00  std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator++()
  0.00      1.05     0.00      127     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> >&&)
  0.00      1.05     0.00      127     0.00     0.00  void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >&&)
  0.00      1.05     0.00      127     0.00     0.00  std::remove_reference<std::vector<Cell, std::allocator<Cell> >&>::type&& std::move<std::vector<Cell, std::allocator<Cell> >&>(std::vector<Cell, std::allocator<Cell> >&)
  0.00      1.05     0.00      127     0.00     0.00  std::vector<Cell, std::allocator<Cell> >&& std::forward<std::vector<Cell, std::allocator<Cell> > >(std::remove_reference<std::vector<Cell, std::allocator<Cell> > >::type&)
  0.00      1.05     0.00      110     0.00     0.00  int&& std::forward<int>(std::remove_reference<int>::type&)
  0.00      1.05     0.00       85     0.00     0.00  std::remove_reference<int&>::type&& std::move<int&>(int&)
  0.00      1.05     0.00       60     0.00     0.00  __gnu_cxx::new_allocator<int>::max_size() const
  0.00      1.05     0.00       60     0.00     0.00  int* std::__niter_base<int*>(int*)
  0.00      1.05     0.00       50     0.00     0.00  std::vector<int, std::allocator<int> >::_M_range_check(unsigned long) const
  0.00      1.05     0.00       50     0.00     0.00  std::vector<int, std::allocator<int> >::at(unsigned long)
  0.00      1.05     0.00       50     0.00     0.00  std::vector<int, std::allocator<int> >::operator[](unsigned long)
  0.00      1.05     0.00       45     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
  0.00      1.05     0.00       40     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
  0.00      1.05     0.00       40     0.00     0.00  std::move_iterator<int*>::base() const
  0.00      1.05     0.00       40     0.00     0.00  std::vector<int, std::allocator<int> >::max_size() const
  0.00      1.05     0.00       40     0.00     0.00  std::move_iterator<int*>::move_iterator(int*)
  0.00      1.05     0.00       40     0.00     0.00  std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
  0.00      1.05     0.00       40     0.00     0.00  decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>)
  0.00      1.05     0.00       40     0.00     0.00  int* std::__miter_base<int*>(int*)
  0.00      1.05     0.00       40     0.00     0.00  std::move_iterator<int*> std::__make_move_if_noexcept_iterator<int, std::move_iterator<int*> >(int*)
  0.00      1.05     0.00       36     0.00     0.00  __gnu_cxx::new_allocator<Move>::max_size() const
  0.00      1.05     0.00       35     0.00     0.00  bool __gnu_cxx::operator!=<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
  0.00      1.05     0.00       33     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
  0.00      1.05     0.00       30     0.00     0.00  void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&)
  0.00      1.05     0.00       30     0.00     0.00  void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&)
  0.00      1.05     0.00       30     0.00     0.00  void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&)
  0.00      1.05     0.00       30     0.00     0.00  std::vector<int, std::allocator<int> >::push_back(int&&)
  0.00      1.05     0.00       27     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator()
  0.00      1.05     0.00       27     0.00     0.00  int* std::__niter_base<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  0.00      1.05     0.00       25     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator++()
  0.00      1.05     0.00       25     0.00     0.00  __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::max_size() const
  0.00      1.05     0.00       25     0.00     0.00  bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const
  0.00      1.05     0.00       25     0.00     0.00  void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
  0.00      1.05     0.00       25     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
  0.00      1.05     0.00       25     0.00     0.00  void std::_Destroy<int*>(int*, int*)
  0.00      1.05     0.00       25     0.00     0.00  void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
  0.00      1.05     0.00       24     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() const
  0.00      1.05     0.00       24     0.00     0.00  std::vector<Move, std::allocator<Move> >::max_size() const
  0.00      1.05     0.00       24     0.00     0.00  std::move_iterator<Move*>::move_iterator(Move*)
  0.00      1.05     0.00       24     0.00     0.00  std::allocator_traits<std::allocator<Move> >::max_size(std::allocator<Move> const&)
  0.00      1.05     0.00       24     0.00     0.00  std::move_iterator<Move*> std::__make_move_if_noexcept_iterator<Move, std::move_iterator<Move*> >(Move*)
  0.00      1.05     0.00       21     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator--()
  0.00      1.05     0.00       21     0.00     0.00  bool __gnu_cxx::__ops::_Val_less_iter::operator()<int, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(int&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const
  0.00      1.05     0.00       20     0.00     0.00  __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
  0.00      1.05     0.00       20     0.00     0.00  __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
  0.00      1.05     0.00       20     0.00     0.00  std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
  0.00      1.05     0.00       20     0.00     0.00  int* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
  0.00      1.05     0.00       20     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator()
  0.00      1.05     0.00       20     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
  0.00      1.05     0.00       20     0.00     0.00  std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long)
  0.00      1.05     0.00       20     0.00     0.00  std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long)
  0.00      1.05     0.00       20     0.00     0.00  int* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)
  0.00      1.05     0.00       20     0.00     0.00  void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&)
  0.00      1.05     0.00       20     0.00     0.00  int* std::__copy_move_a<true, int*, int*>(int*, int*, int*)
  0.00      1.05     0.00       20     0.00     0.00  int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*)
  0.00      1.05     0.00       20     0.00     0.00  int* std::uninitialized_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)
  0.00      1.05     0.00       20     0.00     0.00  int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&)
  0.00      1.05     0.00       20     0.00     0.00  int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
  0.00      1.05     0.00       20     0.00     0.00  int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)
  0.00      1.05     0.00       18     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__miter_base<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  0.00      1.05     0.00       16     0.00     0.00  __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter)
  0.00      1.05     0.00       16     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() const
  0.00      1.05     0.00       16     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size() const
  0.00      1.05     0.00       16     0.00     0.00  std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::move_iterator(std::vector<Cell, std::allocator<Cell> >*)
  0.00      1.05     0.00       16     0.00     0.00  std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size(std::allocator<std::vector<Cell, std::allocator<Cell> > > const&)
  0.00      1.05     0.00       16     0.00     0.00  void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter)
  0.00      1.05     0.00       16     0.00     0.00  std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> std::__make_move_if_noexcept_iterator<std::vector<Cell, std::allocator<Cell> >, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> >(std::vector<Cell, std::allocator<Cell> >*)
  0.00      1.05     0.00       15     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
  0.00      1.05     0.00       14     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator+(long) const
  0.00      1.05     0.00       14     0.00     0.00  void std::_Destroy_aux<true>::__destroy<Move*>(Move*, Move*)
  0.00      1.05     0.00       14     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_M_deallocate(Move*, unsigned long)
  0.00      1.05     0.00       14     0.00     0.00  void std::_Destroy<Move*>(Move*, Move*)
  0.00      1.05     0.00       14     0.00     0.00  void std::_Destroy<Move*, Move>(Move*, Move*, std::allocator<Move>&)
  0.00      1.05     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<Move>::deallocate(Move*, unsigned long)
  0.00      1.05     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<Move>::allocate(unsigned long, void const*)
  0.00      1.05     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<Faction>::max_size() const
  0.00      1.05     0.00       12     0.00     0.00  std::vector<Move, std::allocator<Move> >::_M_check_len(unsigned long, char const*) const
  0.00      1.05     0.00       12     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_M_allocate(unsigned long)
  0.00      1.05     0.00       12     0.00     0.00  std::allocator_traits<std::allocator<Move> >::deallocate(std::allocator<Move>&, Move*, unsigned long)
  0.00      1.05     0.00       12     0.00     0.00  std::allocator_traits<std::allocator<Move> >::allocate(std::allocator<Move>&, unsigned long)
  0.00      1.05     0.00       12     0.00     0.00  Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*)
  0.00      1.05     0.00       12     0.00     0.00  void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&)
  0.00      1.05     0.00       12     0.00     0.00  Faction* std::__niter_base<Faction*>(Faction*)
  0.00      1.05     0.00       12     0.00     0.00  Move* std::uninitialized_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*)
  0.00      1.05     0.00       12     0.00     0.00  Move* std::__uninitialized_copy_a<std::move_iterator<Move*>, Move*, Move>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*, std::allocator<Move>&)
  0.00      1.05     0.00       12     0.00     0.00  Move* std::__uninitialized_move_if_noexcept_a<Move*, Move*, std::allocator<Move> >(Move*, Move*, Move*, std::allocator<Move>&)
  0.00      1.05     0.00       11     0.00     0.00  void std::_Destroy_aux<false>::__destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*)
  0.00      1.05     0.00       11     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long)
  0.00      1.05     0.00       11     0.00     0.00  void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*)
  0.00      1.05     0.00       11     0.00     0.00  void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
  0.00      1.05     0.00        9     0.00     0.00  __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long)
  0.00      1.05     0.00        9     0.00     0.00  __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::allocate(unsigned long, void const*)
  0.00      1.05     0.00        9     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator()
  0.00      1.05     0.00        9     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate(unsigned long)
  0.00      1.05     0.00        9     0.00     0.00  std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::deallocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, unsigned long)
  0.00      1.05     0.00        9     0.00     0.00  std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::allocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, unsigned long)
  0.00      1.05     0.00        9     0.00     0.00  int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*)
  0.00      1.05     0.00        9     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::move_backward<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  0.00      1.05     0.00        9     0.00     0.00  int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*)
  0.00      1.05     0.00        9     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  0.00      1.05     0.00        9     0.00     0.00  std::remove_reference<Move*&>::type&& std::move<Move*&>(Move*&)
  0.00      1.05     0.00        8     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() const
  0.00      1.05     0.00        8     0.00     0.00  std::move_iterator<Faction*>::base() const
  0.00      1.05     0.00        8     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::max_size() const
  0.00      1.05     0.00        8     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_check_len(unsigned long, char const*) const
  0.00      1.05     0.00        8     0.00     0.00  std::move_iterator<Faction*>::move_iterator(Faction*)
  0.00      1.05     0.00        8     0.00     0.00  std::allocator_traits<std::allocator<Faction> >::max_size(std::allocator<Faction> const&)
  0.00      1.05     0.00        8     0.00     0.00  std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*)
  0.00      1.05     0.00        8     0.00     0.00  void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&)
  0.00      1.05     0.00        8     0.00     0.00  decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Faction*>(std::move_iterator<Faction*>)
  0.00      1.05     0.00        8     0.00     0.00  Faction* std::__miter_base<Faction*>(Faction*)
  0.00      1.05     0.00        8     0.00     0.00  std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*)
  0.00      1.05     0.00        8     0.00     0.00  std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
  0.00      1.05     0.00        8     0.00     0.00  std::move_iterator<Faction*> std::__make_move_if_noexcept_iterator<Faction, std::move_iterator<Faction*> >(Faction*)
  0.00      1.05     0.00        8     0.00     0.00  std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_move_if_noexcept_a<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
  0.00      1.05     0.00        5     0.00     0.00  Faction::init(int)
  0.00      1.05     0.00        5     0.00     0.00  void __gnu_cxx::new_allocator<Faction>::construct<Faction>(Faction*)
  0.00      1.05     0.00        5     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator()
  0.00      1.05     0.00        5     0.00     0.00  __gnu_cxx::new_allocator<int>::~new_allocator()
  0.00      1.05     0.00        5     0.00     0.00  __gnu_cxx::__ops::__iter_less_iter()
  0.00      1.05     0.00        5     0.00     0.00  bool __gnu_cxx::operator==<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
  0.00      1.05     0.00        5     0.00     0.00  std::allocator<int>::allocator()
  0.00      1.05     0.00        5     0.00     0.00  std::allocator<int>::~allocator()
  0.00      1.05     0.00        5     0.00     0.00  void std::_Destroy_aux<true>::__destroy<Faction*>(Faction*, Faction*)
  0.00      1.05     0.00        5     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::_M_deallocate(Faction*, unsigned long)
  0.00      1.05     0.00        5     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl()
  0.00      1.05     0.00        5     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
  0.00      1.05     0.00        5     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_base()
  0.00      1.05     0.00        5     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
  0.00      1.05     0.00        5     0.00     0.00  void std::allocator_traits<std::allocator<Faction> >::construct<Faction>(std::allocator<Faction>&, Faction*)
  0.00      1.05     0.00        5     0.00     0.00  std::vector<int, std::allocator<int> >::end()
  0.00      1.05     0.00        5     0.00     0.00  std::vector<int, std::allocator<int> >::begin()
  0.00      1.05     0.00        5     0.00     0.00  std::vector<int, std::allocator<int> >::vector()
  0.00      1.05     0.00        5     0.00     0.00  std::vector<int, std::allocator<int> >::~vector()
  0.00      1.05     0.00        5     0.00     0.00  void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      1.05     0.00        5     0.00     0.00  void std::__introsort_loop<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      1.05     0.00        5     0.00     0.00  void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      1.05     0.00        5     0.00     0.00  std::__lg(long)
  0.00      1.05     0.00        5     0.00     0.00  void std::sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  0.00      1.05     0.00        5     0.00     0.00  void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      1.05     0.00        5     0.00     0.00  void std::_Destroy<Faction*>(Faction*, Faction*)
  0.00      1.05     0.00        5     0.00     0.00  void std::_Destroy<Faction*, Faction>(Faction*, Faction*, std::allocator<Faction>&)
  0.00      1.05     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<Faction>::deallocate(Faction*, unsigned long)
  0.00      1.05     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<Faction>::allocate(unsigned long, void const*)
  0.00      1.05     0.00        4     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::_M_check_len(unsigned long, char const*) const
  0.00      1.05     0.00        4     0.00     0.00  Faction* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Faction>(Faction const*, Faction const*, Faction*)
  0.00      1.05     0.00        4     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::_M_allocate(unsigned long)
  0.00      1.05     0.00        4     0.00     0.00  std::allocator_traits<std::allocator<Faction> >::deallocate(std::allocator<Faction>&, Faction*, unsigned long)
  0.00      1.05     0.00        4     0.00     0.00  std::allocator_traits<std::allocator<Faction> >::allocate(std::allocator<Faction>&, unsigned long)
  0.00      1.05     0.00        4     0.00     0.00  Faction* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*)
  0.00      1.05     0.00        4     0.00     0.00  void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>()
  0.00      1.05     0.00        4     0.00     0.00  Faction* std::__copy_move_a<true, Faction*, Faction*>(Faction*, Faction*, Faction*)
  0.00      1.05     0.00        4     0.00     0.00  Faction* std::__copy_move_a2<true, Faction*, Faction*>(Faction*, Faction*, Faction*)
  0.00      1.05     0.00        4     0.00     0.00  Faction* std::uninitialized_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*)
  0.00      1.05     0.00        4     0.00     0.00  Faction* std::__uninitialized_copy_a<std::move_iterator<Faction*>, Faction*, Faction>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*, std::allocator<Faction>&)
  0.00      1.05     0.00        4     0.00     0.00  Faction* std::__uninitialized_move_if_noexcept_a<Faction*, Faction*, std::allocator<Faction> >(Faction*, Faction*, Faction*, std::allocator<Faction>&)
  0.00      1.05     0.00        4     0.00     0.00  Faction* std::copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*)
  0.00      1.05     0.00        3     0.00     0.00  std::enable_if<std::__and_<std::is_move_constructible<Move*>, std::is_move_assignable<Move*> >::value, void>::type std::swap<Move*>(Move*&, Move*&)
  0.00      1.05     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<Move>::~new_allocator()
  0.00      1.05     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::new_allocator()
  0.00      1.05     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::~new_allocator()
  0.00      1.05     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::__normal_iterator(std::vector<Cell, std::allocator<Cell> > const* const&)
  0.00      1.05     0.00        2     0.00     0.00  std::allocator<Move>::~allocator()
  0.00      1.05     0.00        2     0.00     0.00  std::allocator<std::vector<Cell, std::allocator<Cell> > >::allocator()
  0.00      1.05     0.00        2     0.00     0.00  std::allocator<std::vector<Cell, std::allocator<Cell> > >::~allocator()
  0.00      1.05     0.00        2     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::~_Vector_impl()
  0.00      1.05     0.00        2     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::~_Vector_base()
  0.00      1.05     0.00        2     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::_Vector_impl()
  0.00      1.05     0.00        2     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::~_Vector_impl()
  0.00      1.05     0.00        2     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_base()
  0.00      1.05     0.00        2     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~_Vector_base()
  0.00      1.05     0.00        2     0.00     0.00  std::vector<Move, std::allocator<Move> >::~vector()
  0.00      1.05     0.00        2     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::vector()
  0.00      1.05     0.00        2     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector()
  0.00      1.05     0.00        2     0.00     0.00  std::remove_reference<std::allocator<Move>&>::type&& std::move<std::allocator<Move>&>(std::allocator<Move>&)
  0.00      1.05     0.00        2     0.00     0.00  std::remove_reference<std::vector<Move, std::allocator<Move> >&>::type&& std::move<std::vector<Move, std::allocator<Move> >&>(std::vector<Move, std::allocator<Move> >&)
  0.00      1.05     0.00        1     0.00     0.00  VirtualRootWindowOfScreen(Screen*)
  0.00      1.05     0.00        1     0.00     0.15  Board::init()
  0.00      1.05     0.00        1     0.00    20.01  Board::Board(int, int, int, int, int, XColor*)
  0.00      1.05     0.00        1     0.00     0.00  Board::~Board()
  0.00      1.05     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Move>::new_allocator()
  0.00      1.05     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Move>::new_allocator(__gnu_cxx::new_allocator<Move> const&)
  0.00      1.05     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Faction>::new_allocator()
  0.00      1.05     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Faction>::~new_allocator()
  0.00      1.05     0.00        1     0.00     0.00  __gnu_cxx::__alloc_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_S_propagate_on_copy_assign()
  0.00      1.05     0.00        1     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::end() const
  0.00      1.05     0.00        1     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::begin() const
  0.00      1.05     0.00        1     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::capacity() const
  0.00      1.05     0.00        1     0.00     0.00  std::allocator<Move>::allocator(std::allocator<Move> const&)
  0.00      1.05     0.00        1     0.00     0.00  std::allocator<Move>::allocator()
  0.00      1.05     0.00        1     0.00     0.00  std::allocator<Faction>::allocator()
  0.00      1.05     0.00        1     0.00     0.00  std::allocator<Faction>::~allocator()
  0.00      1.05     0.00        1     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_M_swap_data(std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl&)
  0.00      1.05     0.00        1     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl()
  0.00      1.05     0.00        1     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl(std::allocator<Move>&&)
  0.00      1.05     0.00        1     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&)
  0.00      1.05     0.00        1     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_Vector_base()
  0.00      1.05     0.00        1     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::_Vector_impl()
  0.00      1.05     0.00        1     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::~_Vector_impl()
  0.00      1.05     0.00        1     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_base()
  0.00      1.05     0.00        1     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::~_Vector_base()
  0.00      1.05     0.00        1     0.00     0.00  std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&)
  0.00      1.05     0.00        1     0.00     0.00  std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::~priority_queue()
  0.00      1.05     0.00        1     0.00     0.00  std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*)
  0.00      1.05     0.00        1     0.00     0.00  std::vector<Move, std::allocator<Move> >::vector()
  0.00      1.05     0.00        1     0.00     0.00  std::vector<Move, std::allocator<Move> >::vector(std::vector<Move, std::allocator<Move> >&&)
  0.00      1.05     0.00        1     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::vector()
  0.00      1.05     0.00        1     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::~vector()
  0.00      1.05     0.00        1     0.00     0.00  std::vector<Cell, std::allocator<Cell> >* std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > >(unsigned long, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >)
  0.00      1.05     0.00        1     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&)
  0.00      1.05     0.00        1     0.00     0.00  void std::__make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>)
  0.00      1.05     0.00        1     0.00     0.00  std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*)
  0.00      1.05     0.00        1     0.00     0.00  std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
  0.00      1.05     0.00        1     0.00     0.00  void std::make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2017 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.95% of 1.05 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.00    1.05                 main [1]
                0.29    0.73    5000/5000        Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&) [2]
                0.00    0.02       1/1           Board::Board(int, int, int, int, int, XColor*) [11]
                0.00    0.01    6769/6769        Board::step(int) [13]
                0.00    0.00       1/1           Board::init() [15]
                0.00    0.00       1/1           VirtualRootWindowOfScreen(Screen*) [352]
                0.00    0.00       1/1           Board::~Board() [353]
-----------------------------------------------
                0.29    0.73    5000/5000        main [1]
[2]     97.5    0.29    0.73    5000         Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&) [2]
                0.12    0.27 51200000/51312896     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long) [3]
                0.13    0.20 51200000/51292673     std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [4]
-----------------------------------------------
                0.00    0.00    5322/51312896     Board::setCell(int, int, int, int) [16]
                0.00    0.00   10240/51312896     Board::init() [15]
                0.00    0.00   97334/51312896     Board::step(int) [13]
                0.12    0.27 51200000/51312896     Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&) [2]
[3]     37.6    0.13    0.27 51312896         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long) [3]
                0.05    0.10 51312896/51312896     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_range_check(unsigned long) const [5]
                0.12    0.00 51312896/51312896     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator[](unsigned long) [7]
-----------------------------------------------
                0.00    0.00    5322/51292673     Board::setCell(int, int, int, int) [16]
                0.00    0.00   10240/51292673     Board::init() [15]
                0.00    0.00   77111/51292673     Board::step(int) [13]
                0.13    0.20 51200000/51292673     Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&) [2]
[4]     32.4    0.14    0.21 51292673         std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [4]
                0.08    0.06 51292673/51292673     std::vector<Cell, std::allocator<Cell> >::_M_range_check(unsigned long) const [6]
                0.07    0.00 51292673/51292673     std::vector<Cell, std::allocator<Cell> >::operator[](unsigned long) [9]
-----------------------------------------------
                0.05    0.10 51312896/51312896     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long) [3]
[5]     14.8    0.05    0.10 51312896         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_range_check(unsigned long) const [5]
                0.10    0.00 51312896/51332979     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const [8]
-----------------------------------------------
                0.08    0.06 51292673/51292673     std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [4]
[6]     12.9    0.08    0.06 51292673         std::vector<Cell, std::allocator<Cell> >::_M_range_check(unsigned long) const [6]
                0.06    0.00 51292673/51318272     std::vector<Cell, std::allocator<Cell> >::size() const [10]
-----------------------------------------------
                0.12    0.00 51312896/51312896     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long) [3]
[7]     11.0    0.12    0.00 51312896         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator[](unsigned long) [7]
-----------------------------------------------
                0.00    0.00       1/51332979     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [22]
                0.00    0.00       8/51332979     void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [30]
                0.00    0.00      32/51332979     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_check_len(unsigned long, char const*) const [31]
                0.00    0.00   20042/51332979     Board::step(int) [13]
                0.10    0.00 51312896/51332979     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_range_check(unsigned long) const [5]
[8]     10.0    0.11    0.00 51332979         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const [8]
-----------------------------------------------
                0.07    0.00 51292673/51292673     std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [4]
[9]      6.7    0.07    0.00 51292673         std::vector<Cell, std::allocator<Cell> >::operator[](unsigned long) [9]
-----------------------------------------------
                0.00    0.00     256/51318272     std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [20]
                0.00    0.00    1024/51318272     void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [18]
                0.00    0.00    4096/51318272     std::vector<Cell, std::allocator<Cell> >::_M_check_len(unsigned long, char const*) const [19]
                0.00    0.00   20223/51318272     Board::step(int) [13]
                0.06    0.00 51292673/51318272     std::vector<Cell, std::allocator<Cell> >::_M_range_check(unsigned long) const [6]
[10]     5.7    0.06    0.00 51318272         std::vector<Cell, std::allocator<Cell> >::size() const [10]
-----------------------------------------------
                0.00    0.02       1/1           main [1]
[11]     1.9    0.00    0.02       1         Board::Board(int, int, int, int, int, XColor*) [11]
                0.02    0.00       5/5           void std::vector<Faction, std::allocator<Faction> >::emplace_back<>() [12]
                0.00    0.00   10240/10240       std::vector<Cell, std::allocator<Cell> >::push_back(Cell const&) [17]
                0.00    0.00     128/128         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::push_back(std::vector<Cell, std::allocator<Cell> > const&) [21]
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [22]
                0.00    0.00   10240/10240       Cell::Cell(int, int) [73]
                0.00    0.00     128/128         std::vector<Cell, std::allocator<Cell> >::vector() [172]
                0.00    0.00     128/511         std::vector<Cell, std::allocator<Cell> >::~vector() [143]
                0.00    0.00       2/2           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::vector() [348]
                0.00    0.00       1/1           std::vector<Move, std::allocator<Move> >::vector() [377]
                0.00    0.00       1/1           std::vector<Faction, std::allocator<Faction> >::vector() [379]
                0.00    0.00       1/1           std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [375]
                0.00    0.00       1/2           std::vector<Move, std::allocator<Move> >::~vector() [347]
                0.00    0.00       1/2           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector() [349]
-----------------------------------------------
                0.02    0.00       5/5           Board::Board(int, int, int, int, int, XColor*) [11]
[12]     1.9    0.02    0.00       5         void std::vector<Faction, std::allocator<Faction> >::emplace_back<>() [12]
                0.00    0.00       4/4           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [326]
                0.00    0.00       1/5           void std::allocator_traits<std::allocator<Faction> >::construct<Faction>(std::allocator<Faction>&, Faction*) [305]
-----------------------------------------------
                0.00    0.01    6769/6769        main [1]
[13]     0.6    0.00    0.01    6769         Board::step(int) [13]
                0.01    0.00    6741/6741        std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop() [14]
                0.00    0.00   97334/51312896     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long) [3]
                0.00    0.00   77111/51292673     std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [4]
                0.00    0.00    1769/1774        Board::setCell(int, int, int, int) [16]
                0.00    0.00   20042/51332979     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const [8]
                0.00    0.00   20223/51318272     std::vector<Cell, std::allocator<Cell> >::size() const [10]
                0.00    0.00   53928/53928       Cell::Cell() [45]
                0.00    0.00   10279/13837       std::vector<Faction, std::allocator<Faction> >::at(unsigned long) [70]
                0.00    0.00    6769/6769        std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::size() const [90]
                0.00    0.00    6769/6769        std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::top() const [89]
                0.00    0.00    6741/8515        Faction::getSpeed() [77]
                0.00    0.00    6741/8515        Move::Move(int, int, int, int) [76]
                0.00    0.00    6741/8515        std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [81]
                0.00    0.00    1769/1769        Faction::getStrength() [119]
                0.00    0.00    1769/1769        Faction::getAccuracy() [118]
-----------------------------------------------
                0.01    0.00    6741/6741        Board::step(int) [13]
[14]     0.5    0.01    0.00    6741         std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop() [14]
                0.00    0.00    6741/15257       std::vector<Move, std::allocator<Move> >::end() [65]
                0.00    0.00    6741/15257       std::vector<Move, std::allocator<Move> >::begin() [66]
                0.00    0.00    6741/6741        void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [102]
                0.00    0.00    6741/6741        std::vector<Move, std::allocator<Move> >::pop_back() [99]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[15]     0.0    0.00    0.00       1         Board::init() [15]
                0.00    0.00   10240/51312896     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long) [3]
                0.00    0.00   10240/51292673     std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [4]
                0.00    0.00       5/1774        Board::setCell(int, int, int, int) [16]
                0.00    0.00   10240/12014       Cell::init(int) [72]
                0.00    0.00      10/13837       std::vector<Faction, std::allocator<Faction> >::at(unsigned long) [70]
                0.00    0.00       7/15638       std::vector<Faction, std::allocator<Faction> >::size() const [63]
                0.00    0.00       5/5           Faction::init(int) [291]
-----------------------------------------------
                0.00    0.00       5/1774        Board::init() [15]
                0.00    0.00    1769/1774        Board::step(int) [13]
[16]     0.0    0.00    0.00    1774         Board::setCell(int, int, int, int) [16]
                0.00    0.00    5322/51312896     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long) [3]
                0.00    0.00    5322/51292673     std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [4]
                0.00    0.00    3548/13837       std::vector<Faction, std::allocator<Faction> >::at(unsigned long) [70]
                0.00    0.00    1774/15638       std::vector<Faction, std::allocator<Faction> >::size() const [63]
                0.00    0.00    1774/12014       Cell::init(int) [72]
                0.00    0.00    1774/1774        Faction::getHealth() [117]
                0.00    0.00    1774/8515        Faction::getSpeed() [77]
                0.00    0.00    1774/8515        Move::Move(int, int, int, int) [76]
                0.00    0.00    1774/8515        std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [81]
-----------------------------------------------
                0.00    0.00   10240/10240       Board::Board(int, int, int, int, int, XColor*) [11]
[17]     0.0    0.00    0.00   10240         std::vector<Cell, std::allocator<Cell> >::push_back(Cell const&) [17]
                0.00    0.00    1024/1024        void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [18]
                0.00    0.00    9216/10240       void std::allocator_traits<std::allocator<Cell> >::construct<Cell, Cell const&>(std::allocator<Cell>&, Cell*, Cell const&) [75]
-----------------------------------------------
                0.00    0.00    1024/1024        std::vector<Cell, std::allocator<Cell> >::push_back(Cell const&) [17]
[18]     0.0    0.00    0.00    1024         void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [18]
                0.00    0.00    1024/1024        std::vector<Cell, std::allocator<Cell> >::_M_check_len(unsigned long, char const*) const [19]
                0.00    0.00    1024/51318272     std::vector<Cell, std::allocator<Cell> >::size() const [10]
                0.00    0.00    2048/2942        std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() [105]
                0.00    0.00    1024/1280        std::_Vector_base<Cell, std::allocator<Cell> >::_M_allocate(unsigned long) [126]
                0.00    0.00    1024/41984       Cell const& std::forward<Cell const&>(std::remove_reference<Cell const&>::type&) [47]
                0.00    0.00    1024/10240       void std::allocator_traits<std::allocator<Cell> >::construct<Cell, Cell const&>(std::allocator<Cell>&, Cell*, Cell const&) [75]
                0.00    0.00    1024/1024        Cell* std::__uninitialized_move_if_noexcept_a<Cell*, Cell*, std::allocator<Cell> >(Cell*, Cell*, Cell*, std::allocator<Cell>&) [134]
                0.00    0.00    1024/1535        void std::_Destroy<Cell*, Cell>(Cell*, Cell*, std::allocator<Cell>&) [123]
                0.00    0.00    1024/1535        std::_Vector_base<Cell, std::allocator<Cell> >::_M_deallocate(Cell*, unsigned long) [121]
-----------------------------------------------
                0.00    0.00    1024/1024        void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [18]
[19]     0.0    0.00    0.00    1024         std::vector<Cell, std::allocator<Cell> >::_M_check_len(unsigned long, char const*) const [19]
                0.00    0.00    4096/51318272     std::vector<Cell, std::allocator<Cell> >::size() const [10]
                0.00    0.00    2048/2048        std::vector<Cell, std::allocator<Cell> >::max_size() const [109]
                0.00    0.00    1024/1068        unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [130]
-----------------------------------------------
                0.00    0.00     128/256         void __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [23]
                0.00    0.00     128/256         void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [25]
[20]     0.0    0.00    0.00     256         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [20]
                0.00    0.00     256/51318272     std::vector<Cell, std::allocator<Cell> >::size() const [10]
                0.00    0.00     256/2304        std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() const [106]
                0.00    0.00     256/256         __gnu_cxx::__alloc_traits<std::allocator<Cell> >::_S_select_on_copy(std::allocator<Cell> const&) [149]
                0.00    0.00     256/767         std::allocator<Cell>::~allocator() [136]
                0.00    0.00     256/256         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(unsigned long, std::allocator<Cell> const&) [154]
                0.00    0.00     256/2942        std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() [105]
                0.00    0.00     256/256         std::vector<Cell, std::allocator<Cell> >::end() const [150]
                0.00    0.00     256/256         std::vector<Cell, std::allocator<Cell> >::begin() const [151]
                0.00    0.00     256/256         Cell* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, Cell>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, std::allocator<Cell>&) [158]
-----------------------------------------------
                0.00    0.00     128/128         Board::Board(int, int, int, int, int, XColor*) [11]
[21]     0.0    0.00    0.00     128         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::push_back(std::vector<Cell, std::allocator<Cell> > const&) [21]
                0.00    0.00     120/128         void std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [24]
                0.00    0.00       8/8           void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [30]
-----------------------------------------------
                0.00    0.00       1/1           Board::Board(int, int, int, int, int, XColor*) [11]
[22]     0.0    0.00    0.00       1         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [22]
                0.00    0.00       1/1           std::vector<Cell, std::allocator<Cell> >* std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > >(unsigned long, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >) [27]
                0.00    0.00       1/51332979     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const [8]
                0.00    0.00       1/1           __gnu_cxx::__alloc_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_S_propagate_on_copy_assign() [358]
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::capacity() const [361]
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::begin() const [360]
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::end() const [359]
                0.00    0.00       1/20          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() [225]
                0.00    0.00       1/11          void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [267]
                0.00    0.00       1/11          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [265]
-----------------------------------------------
                0.00    0.00     128/128         void std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [24]
[23]     0.0    0.00    0.00     128         void __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [23]
                0.00    0.00     128/256         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [20]
                0.00    0.00     128/392         std::vector<Cell, std::allocator<Cell> > const& std::forward<std::vector<Cell, std::allocator<Cell> > const&>(std::remove_reference<std::vector<Cell, std::allocator<Cell> > const&>::type&) [144]
                0.00    0.00     128/57956       operator new(unsigned long, void*) [44]
-----------------------------------------------
                0.00    0.00       8/128         void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [30]
                0.00    0.00     120/128         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::push_back(std::vector<Cell, std::allocator<Cell> > const&) [21]
[24]     0.0    0.00    0.00     128         void std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [24]
                0.00    0.00     128/128         void __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [23]
                0.00    0.00     128/392         std::vector<Cell, std::allocator<Cell> > const& std::forward<std::vector<Cell, std::allocator<Cell> > const&>(std::remove_reference<std::vector<Cell, std::allocator<Cell> > const&>::type&) [144]
-----------------------------------------------
                0.00    0.00     128/128         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [26]
[25]     0.0    0.00    0.00     128         void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [25]
                0.00    0.00     128/256         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [20]
                0.00    0.00     128/392         std::vector<Cell, std::allocator<Cell> > const& std::forward<std::vector<Cell, std::allocator<Cell> > const&>(std::remove_reference<std::vector<Cell, std::allocator<Cell> > const&>::type&) [144]
                0.00    0.00     128/57956       operator new(unsigned long, void*) [44]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [28]
[26]     0.0    0.00    0.00       1         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [26]
                0.00    0.00     128/128         void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [25]
                0.00    0.00     129/129         bool __gnu_cxx::operator!=<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&) [165]
                0.00    0.00     128/128         __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator*() const [168]
                0.00    0.00     128/638         std::vector<Cell, std::allocator<Cell> >* std::__addressof<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >&) [139]
                0.00    0.00     128/128         __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator++() [167]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [22]
[27]     0.0    0.00    0.00       1         std::vector<Cell, std::allocator<Cell> >* std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > >(unsigned long, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >) [27]
                0.00    0.00       1/1           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [29]
                0.00    0.00       1/9           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate(unsigned long) [271]
                0.00    0.00       1/20          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() [225]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [29]
[28]     0.0    0.00    0.00       1         std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [28]
                0.00    0.00       1/1           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [26]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Cell, std::allocator<Cell> >* std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > >(unsigned long, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >) [27]
[29]     0.0    0.00    0.00       1         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [29]
                0.00    0.00       1/1           std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [28]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::push_back(std::vector<Cell, std::allocator<Cell> > const&) [21]
[30]     0.0    0.00    0.00       8         void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [30]
                0.00    0.00       8/8           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_check_len(unsigned long, char const*) const [31]
                0.00    0.00       8/51332979     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const [8]
                0.00    0.00       8/128         void std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [24]
                0.00    0.00      16/20          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() [225]
                0.00    0.00       8/9           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate(unsigned long) [271]
                0.00    0.00       8/392         std::vector<Cell, std::allocator<Cell> > const& std::forward<std::vector<Cell, std::allocator<Cell> > const&>(std::remove_reference<std::vector<Cell, std::allocator<Cell> > const&>::type&) [144]
                0.00    0.00       8/8           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_move_if_noexcept_a<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [290]
                0.00    0.00       8/11          void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [267]
                0.00    0.00       8/11          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [265]
-----------------------------------------------
                0.00    0.00       8/8           void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [30]
[31]     0.0    0.00    0.00       8         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_check_len(unsigned long, char const*) const [31]
                0.00    0.00      32/51332979     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const [8]
                0.00    0.00      16/16          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size() const [240]
                0.00    0.00       8/1068        unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [130]
-----------------------------------------------
                0.00    0.00    8515/307668      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator-(long) const [80]
                0.00    0.00   15257/307668      std::vector<Move, std::allocator<Move> >::begin() [66]
                0.00    0.00   15257/307668      std::vector<Move, std::allocator<Move> >::end() [65]
                0.00    0.00  268639/307668      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator+(long) const [40]
[38]     0.0    0.00    0.00  307668         __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move* const&) [38]
-----------------------------------------------
                0.00    0.00    8515/297377      void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [85]
                0.00    0.00   15293/297377      bool __gnu_cxx::__ops::_Iter_comp_val<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move&) [64]
                0.00    0.00   15338/297377      void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>) [68]
                0.00    0.00   20223/297377      void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [100]
                0.00    0.00  118990/297377      bool __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >) [43]
                0.00    0.00  119018/297377      void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [101]
[39]     0.0    0.00    0.00  297377         __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [39]
-----------------------------------------------
                0.00    0.00   30631/268639      void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>) [68]
                0.00    0.00  238008/268639      void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [101]
[40]     0.0    0.00    0.00  268639         __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator+(long) const [40]
                0.00    0.00  268639/307668      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move* const&) [38]
-----------------------------------------------
                0.00    0.00    8515/135830      std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [81]
                0.00    0.00    8515/135830      std::vector<Move, std::allocator<Move> >::push_back(Move&&) [84]
                0.00    0.00   15297/135830      void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>) [68]
                0.00    0.00   17030/135830      void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [85]
                0.00    0.00   20223/135830      void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [100]
                0.00    0.00   66250/135830      void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [101]
[41]     0.0    0.00    0.00  135830         std::remove_reference<Move&>::type&& std::move<Move&>(Move&) [41]
-----------------------------------------------
                0.00    0.00   15293/74788       bool __gnu_cxx::__ops::_Iter_comp_val<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move&) [64]
                0.00    0.00   59495/74788       bool __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >) [43]
[42]     0.0    0.00    0.00   74788         compareMove::operator()(Move, Move) [42]
-----------------------------------------------
                0.00    0.00   59495/59495       void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [101]
[43]     0.0    0.00    0.00   59495         bool __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >) [43]
                0.00    0.00  118990/297377      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [39]
                0.00    0.00   59495/74788       compareMove::operator()(Move, Move) [42]
-----------------------------------------------
                0.00    0.00       5/57956       void __gnu_cxx::new_allocator<Faction>::construct<Faction>(Faction*) [292]
                0.00    0.00      30/57956       void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [201]
                0.00    0.00     127/57956       void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >&&) [179]
                0.00    0.00     128/57956       void __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [23]
                0.00    0.00     128/57956       void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [25]
                0.00    0.00    2047/57956       void std::_Construct<Move, Move>(Move*, Move&&) [115]
                0.00    0.00    8515/57956       void __gnu_cxx::new_allocator<Move>::construct<Move, Move>(Move*, Move&&) [78]
                0.00    0.00   10240/57956       void __gnu_cxx::new_allocator<Cell>::construct<Cell, Cell const&>(Cell*, Cell const&) [74]
                0.00    0.00   16256/57956       void std::_Construct<Cell, Cell>(Cell*, Cell&&) [61]
                0.00    0.00   20480/57956       void std::_Construct<Cell, Cell const&>(Cell*, Cell const&) [56]
[44]     0.0    0.00    0.00   57956         operator new(unsigned long, void*) [44]
-----------------------------------------------
                0.00    0.00   53928/53928       Board::step(int) [13]
[45]     0.0    0.00    0.00   53928         Cell::Cell() [45]
-----------------------------------------------
                0.00    0.00   43996/43996       __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&) [52]
[46]     0.0    0.00    0.00   43996         __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::base() const [46]
-----------------------------------------------
                0.00    0.00    1024/41984       void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [18]
                0.00    0.00   10240/41984       void std::allocator_traits<std::allocator<Cell> >::construct<Cell, Cell const&>(std::allocator<Cell>&, Cell*, Cell const&) [75]
                0.00    0.00   10240/41984       void __gnu_cxx::new_allocator<Cell>::construct<Cell, Cell const&>(Cell*, Cell const&) [74]
                0.00    0.00   20480/41984       void std::_Construct<Cell, Cell const&>(Cell*, Cell const&) [56]
[47]     0.0    0.00    0.00   41984         Cell const& std::forward<Cell const&>(std::remove_reference<Cell const&>::type&) [47]
-----------------------------------------------
                0.00    0.00   41472/41472       bool __gnu_cxx::operator!=<Cell const*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&) [53]
[48]     0.0    0.00    0.00   41472         __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::base() const [48]
-----------------------------------------------
                0.00    0.00   16256/36736       Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [131]
                0.00    0.00   20480/36736       Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [156]
[49]     0.0    0.00    0.00   36736         Cell* std::__addressof<Cell>(Cell&) [49]
-----------------------------------------------
                0.00    0.00   34560/34560       bool std::operator==<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&) [57]
[50]     0.0    0.00    0.00   34560         std::move_iterator<Cell*>::base() const [50]
-----------------------------------------------
                0.00    0.00      12/27604       void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [259]
                0.00    0.00    2047/27604       void std::_Construct<Move, Move>(Move*, Move&&) [115]
                0.00    0.00    8515/27604       void std::vector<Move, std::allocator<Move> >::emplace_back<Move>(Move&&) [83]
                0.00    0.00    8515/27604       void std::allocator_traits<std::allocator<Move> >::construct<Move, Move>(std::allocator<Move>&, Move*, Move&&) [82]
                0.00    0.00    8515/27604       void __gnu_cxx::new_allocator<Move>::construct<Move, Move>(Move*, Move&&) [78]
[51]     0.0    0.00    0.00   27604         Move&& std::forward<Move>(std::remove_reference<Move>::type&) [51]
-----------------------------------------------
                0.00    0.00       1/21998       void std::__make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [381]
                0.00    0.00    6741/21998       void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [102]
                0.00    0.00    6741/21998       void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [100]
                0.00    0.00    8515/21998       void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [85]
[52]     0.0    0.00    0.00   21998         __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&) [52]
                0.00    0.00   43996/43996       __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::base() const [46]
-----------------------------------------------
                0.00    0.00   20736/20736       Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [156]
[53]     0.0    0.00    0.00   20736         bool __gnu_cxx::operator!=<Cell const*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&) [53]
                0.00    0.00   41472/41472       __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::base() const [48]
-----------------------------------------------
                0.00    0.00   20480/20480       Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [156]
[54]     0.0    0.00    0.00   20480         __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator++() [54]
-----------------------------------------------
                0.00    0.00   20480/20480       Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [156]
[55]     0.0    0.00    0.00   20480         __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator*() const [55]
-----------------------------------------------
                0.00    0.00   20480/20480       Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [156]
[56]     0.0    0.00    0.00   20480         void std::_Construct<Cell, Cell const&>(Cell*, Cell const&) [56]
                0.00    0.00   20480/41984       Cell const& std::forward<Cell const&>(std::remove_reference<Cell const&>::type&) [47]
                0.00    0.00   20480/57956       operator new(unsigned long, void*) [44]
-----------------------------------------------
                0.00    0.00   17280/17280       bool std::operator!=<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&) [58]
[57]     0.0    0.00    0.00   17280         bool std::operator==<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&) [57]
                0.00    0.00   34560/34560       std::move_iterator<Cell*>::base() const [50]
-----------------------------------------------
                0.00    0.00   17280/17280       Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [131]
[58]     0.0    0.00    0.00   17280         bool std::operator!=<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&) [58]
                0.00    0.00   17280/17280       bool std::operator==<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&) [57]
-----------------------------------------------
                0.00    0.00   16256/16256       Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [131]
[59]     0.0    0.00    0.00   16256         std::move_iterator<Cell*>::operator*() const [59]
-----------------------------------------------
                0.00    0.00   16256/16256       Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [131]
[60]     0.0    0.00    0.00   16256         std::move_iterator<Cell*>::operator++() [60]
-----------------------------------------------
                0.00    0.00   16256/16256       Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [131]
[61]     0.0    0.00    0.00   16256         void std::_Construct<Cell, Cell>(Cell*, Cell&&) [61]
                0.00    0.00   16256/16256       Cell&& std::forward<Cell>(std::remove_reference<Cell>::type&) [62]
                0.00    0.00   16256/57956       operator new(unsigned long, void*) [44]
-----------------------------------------------
                0.00    0.00   16256/16256       void std::_Construct<Cell, Cell>(Cell*, Cell&&) [61]
[62]     0.0    0.00    0.00   16256         Cell&& std::forward<Cell>(std::remove_reference<Cell>::type&) [62]
-----------------------------------------------
                0.00    0.00       4/15638       void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [326]
                0.00    0.00       7/15638       Board::init() [15]
                0.00    0.00      16/15638       std::vector<Faction, std::allocator<Faction> >::_M_check_len(unsigned long, char const*) const [320]
                0.00    0.00    1774/15638       Board::setCell(int, int, int, int) [16]
                0.00    0.00   13837/15638       std::vector<Faction, std::allocator<Faction> >::_M_range_check(unsigned long) const [69]
[63]     0.0    0.00    0.00   15638         std::vector<Faction, std::allocator<Faction> >::size() const [63]
-----------------------------------------------
                0.00    0.00   15293/15293       void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>) [68]
[64]     0.0    0.00    0.00   15293         bool __gnu_cxx::__ops::_Iter_comp_val<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move&) [64]
                0.00    0.00   15293/297377      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [39]
                0.00    0.00   15293/74788       compareMove::operator()(Move, Move) [42]
-----------------------------------------------
                0.00    0.00       1/15257       std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [375]
                0.00    0.00    6741/15257       std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop() [14]
                0.00    0.00    8515/15257       std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [81]
[65]     0.0    0.00    0.00   15257         std::vector<Move, std::allocator<Move> >::end() [65]
                0.00    0.00   15257/307668      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move* const&) [38]
-----------------------------------------------
                0.00    0.00       1/15257       std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [375]
                0.00    0.00    6741/15257       std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop() [14]
                0.00    0.00    8515/15257       std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [81]
[66]     0.0    0.00    0.00   15257         std::vector<Move, std::allocator<Move> >::begin() [66]
                0.00    0.00   15257/307668      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move* const&) [38]
-----------------------------------------------
                0.00    0.00    6741/15256       __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(__gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [97]
                0.00    0.00    8515/15256       __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(compareMove) [79]
[67]     0.0    0.00    0.00   15256         __gnu_cxx::__ops::_Iter_comp_val<compareMove>::_Iter_comp_val(compareMove) [67]
-----------------------------------------------
                0.00    0.00    6741/15256       void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [101]
                0.00    0.00    8515/15256       void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [85]
[68]     0.0    0.00    0.00   15256         void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>) [68]
                0.00    0.00   30631/268639      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator+(long) const [40]
                0.00    0.00   15338/297377      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [39]
                0.00    0.00   15297/135830      std::remove_reference<Move&>::type&& std::move<Move&>(Move&) [41]
                0.00    0.00   15293/15293       bool __gnu_cxx::__ops::_Iter_comp_val<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move&) [64]
-----------------------------------------------
                0.00    0.00   13837/13837       std::vector<Faction, std::allocator<Faction> >::at(unsigned long) [70]
[69]     0.0    0.00    0.00   13837         std::vector<Faction, std::allocator<Faction> >::_M_range_check(unsigned long) const [69]
                0.00    0.00   13837/15638       std::vector<Faction, std::allocator<Faction> >::size() const [63]
-----------------------------------------------
                0.00    0.00      10/13837       Board::init() [15]
                0.00    0.00    3548/13837       Board::setCell(int, int, int, int) [16]
                0.00    0.00   10279/13837       Board::step(int) [13]
[70]     0.0    0.00    0.00   13837         std::vector<Faction, std::allocator<Faction> >::at(unsigned long) [70]
                0.00    0.00   13837/13837       std::vector<Faction, std::allocator<Faction> >::_M_range_check(unsigned long) const [69]
                0.00    0.00   13837/13837       std::vector<Faction, std::allocator<Faction> >::operator[](unsigned long) [71]
-----------------------------------------------
                0.00    0.00   13837/13837       std::vector<Faction, std::allocator<Faction> >::at(unsigned long) [70]
[71]     0.0    0.00    0.00   13837         std::vector<Faction, std::allocator<Faction> >::operator[](unsigned long) [71]
-----------------------------------------------
                0.00    0.00    1774/12014       Board::setCell(int, int, int, int) [16]
                0.00    0.00   10240/12014       Board::init() [15]
[72]     0.0    0.00    0.00   12014         Cell::init(int) [72]
-----------------------------------------------
                0.00    0.00   10240/10240       Board::Board(int, int, int, int, int, XColor*) [11]
[73]     0.0    0.00    0.00   10240         Cell::Cell(int, int) [73]
-----------------------------------------------
                0.00    0.00   10240/10240       void std::allocator_traits<std::allocator<Cell> >::construct<Cell, Cell const&>(std::allocator<Cell>&, Cell*, Cell const&) [75]
[74]     0.0    0.00    0.00   10240         void __gnu_cxx::new_allocator<Cell>::construct<Cell, Cell const&>(Cell*, Cell const&) [74]
                0.00    0.00   10240/41984       Cell const& std::forward<Cell const&>(std::remove_reference<Cell const&>::type&) [47]
                0.00    0.00   10240/57956       operator new(unsigned long, void*) [44]
-----------------------------------------------
                0.00    0.00    1024/10240       void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [18]
                0.00    0.00    9216/10240       std::vector<Cell, std::allocator<Cell> >::push_back(Cell const&) [17]
[75]     0.0    0.00    0.00   10240         void std::allocator_traits<std::allocator<Cell> >::construct<Cell, Cell const&>(std::allocator<Cell>&, Cell*, Cell const&) [75]
                0.00    0.00   10240/41984       Cell const& std::forward<Cell const&>(std::remove_reference<Cell const&>::type&) [47]
                0.00    0.00   10240/10240       void __gnu_cxx::new_allocator<Cell>::construct<Cell, Cell const&>(Cell*, Cell const&) [74]
-----------------------------------------------
                0.00    0.00    1774/8515        Board::setCell(int, int, int, int) [16]
                0.00    0.00    6741/8515        Board::step(int) [13]
[76]     0.0    0.00    0.00    8515         Move::Move(int, int, int, int) [76]
-----------------------------------------------
                0.00    0.00    1774/8515        Board::setCell(int, int, int, int) [16]
                0.00    0.00    6741/8515        Board::step(int) [13]
[77]     0.0    0.00    0.00    8515         Faction::getSpeed() [77]
-----------------------------------------------
                0.00    0.00    8515/8515        void std::allocator_traits<std::allocator<Move> >::construct<Move, Move>(std::allocator<Move>&, Move*, Move&&) [82]
[78]     0.0    0.00    0.00    8515         void __gnu_cxx::new_allocator<Move>::construct<Move, Move>(Move*, Move&&) [78]
                0.00    0.00    8515/27604       Move&& std::forward<Move>(std::remove_reference<Move>::type&) [51]
                0.00    0.00    8515/57956       operator new(unsigned long, void*) [44]
-----------------------------------------------
                0.00    0.00    8515/8515        void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [85]
[79]     0.0    0.00    0.00    8515         __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(compareMove) [79]
                0.00    0.00    8515/15256       __gnu_cxx::__ops::_Iter_comp_val<compareMove>::_Iter_comp_val(compareMove) [67]
-----------------------------------------------
                0.00    0.00    8515/8515        void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [85]
[80]     0.0    0.00    0.00    8515         __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator-(long) const [80]
                0.00    0.00    8515/307668      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move* const&) [38]
-----------------------------------------------
                0.00    0.00    1774/8515        Board::setCell(int, int, int, int) [16]
                0.00    0.00    6741/8515        Board::step(int) [13]
[81]     0.0    0.00    0.00    8515         std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [81]
                0.00    0.00    8515/135830      std::remove_reference<Move&>::type&& std::move<Move&>(Move&) [41]
                0.00    0.00    8515/8515        std::vector<Move, std::allocator<Move> >::push_back(Move&&) [84]
                0.00    0.00    8515/15257       std::vector<Move, std::allocator<Move> >::end() [65]
                0.00    0.00    8515/15257       std::vector<Move, std::allocator<Move> >::begin() [66]
                0.00    0.00    8515/8515        void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [85]
-----------------------------------------------
                0.00    0.00      12/8515        void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [259]
                0.00    0.00    8503/8515        void std::vector<Move, std::allocator<Move> >::emplace_back<Move>(Move&&) [83]
[82]     0.0    0.00    0.00    8515         void std::allocator_traits<std::allocator<Move> >::construct<Move, Move>(std::allocator<Move>&, Move*, Move&&) [82]
                0.00    0.00    8515/27604       Move&& std::forward<Move>(std::remove_reference<Move>::type&) [51]
                0.00    0.00    8515/8515        void __gnu_cxx::new_allocator<Move>::construct<Move, Move>(Move*, Move&&) [78]
-----------------------------------------------
                0.00    0.00    8515/8515        std::vector<Move, std::allocator<Move> >::push_back(Move&&) [84]
[83]     0.0    0.00    0.00    8515         void std::vector<Move, std::allocator<Move> >::emplace_back<Move>(Move&&) [83]
                0.00    0.00    8515/27604       Move&& std::forward<Move>(std::remove_reference<Move>::type&) [51]
                0.00    0.00    8503/8515        void std::allocator_traits<std::allocator<Move> >::construct<Move, Move>(std::allocator<Move>&, Move*, Move&&) [82]
                0.00    0.00      12/12          void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [259]
-----------------------------------------------
                0.00    0.00    8515/8515        std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [81]
[84]     0.0    0.00    0.00    8515         std::vector<Move, std::allocator<Move> >::push_back(Move&&) [84]
                0.00    0.00    8515/135830      std::remove_reference<Move&>::type&& std::move<Move&>(Move&) [41]
                0.00    0.00    8515/8515        void std::vector<Move, std::allocator<Move> >::emplace_back<Move>(Move&&) [83]
-----------------------------------------------
                0.00    0.00    8515/8515        std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [81]
[85]     0.0    0.00    0.00    8515         void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [85]
                0.00    0.00   17030/135830      std::remove_reference<Move&>::type&& std::move<Move&>(Move&) [41]
                0.00    0.00    8515/8515        __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator-(long) const [80]
                0.00    0.00    8515/297377      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [39]
                0.00    0.00    8515/8515        __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(compareMove) [79]
                0.00    0.00    8515/21998       __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&) [52]
                0.00    0.00    8515/15256       void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>) [68]
-----------------------------------------------
                0.00    0.00      12/6829        void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [259]
                0.00    0.00      48/6829        std::vector<Move, std::allocator<Move> >::_M_check_len(unsigned long, char const*) const [254]
                0.00    0.00    6769/6829        std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::size() const [90]
[86]     0.0    0.00    0.00    6829         std::vector<Move, std::allocator<Move> >::size() const [86]
-----------------------------------------------
                0.00    0.00    6769/6769        std::vector<Move, std::allocator<Move> >::begin() const [91]
[87]     0.0    0.00    0.00    6769         __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move const* const&) [87]
-----------------------------------------------
                0.00    0.00    6769/6769        std::vector<Move, std::allocator<Move> >::front() const [92]
[88]     0.0    0.00    0.00    6769         __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::operator*() const [88]
-----------------------------------------------
                0.00    0.00    6769/6769        Board::step(int) [13]
[89]     0.0    0.00    0.00    6769         std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::top() const [89]
                0.00    0.00    6769/6769        std::vector<Move, std::allocator<Move> >::front() const [92]
-----------------------------------------------
                0.00    0.00    6769/6769        Board::step(int) [13]
[90]     0.0    0.00    0.00    6769         std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::size() const [90]
                0.00    0.00    6769/6829        std::vector<Move, std::allocator<Move> >::size() const [86]
-----------------------------------------------
                0.00    0.00    6769/6769        std::vector<Move, std::allocator<Move> >::front() const [92]
[91]     0.0    0.00    0.00    6769         std::vector<Move, std::allocator<Move> >::begin() const [91]
                0.00    0.00    6769/6769        __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move const* const&) [87]
-----------------------------------------------
                0.00    0.00    6769/6769        std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::top() const [89]
[92]     0.0    0.00    0.00    6769         std::vector<Move, std::allocator<Move> >::front() const [92]
                0.00    0.00    6769/6769        std::vector<Move, std::allocator<Move> >::begin() const [91]
                0.00    0.00    6769/6769        __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::operator*() const [88]
-----------------------------------------------
                0.00    0.00    6742/6742        __gnu_cxx::__ops::_Iter_comp_iter<compareMove> __gnu_cxx::__ops::__iter_comp_iter<compareMove>(compareMove) [94]
[93]     0.0    0.00    0.00    6742         __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::_Iter_comp_iter(compareMove) [93]
-----------------------------------------------
                0.00    0.00       1/6742        void std::make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [382]
                0.00    0.00    6741/6742        void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [102]
[94]     0.0    0.00    0.00    6742         __gnu_cxx::__ops::_Iter_comp_iter<compareMove> __gnu_cxx::__ops::__iter_comp_iter<compareMove>(compareMove) [94]
                0.00    0.00    6742/6742        __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::_Iter_comp_iter(compareMove) [93]
-----------------------------------------------
                0.00    0.00    6741/6741        void std::allocator_traits<std::allocator<Move> >::destroy<Move>(std::allocator<Move>&, Move*) [98]
[95]     0.0    0.00    0.00    6741         void __gnu_cxx::new_allocator<Move>::destroy<Move>(Move*) [95]
-----------------------------------------------
                0.00    0.00    6741/6741        void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [102]
[96]     0.0    0.00    0.00    6741         __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator--() [96]
-----------------------------------------------
                0.00    0.00    6741/6741        void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [101]
[97]     0.0    0.00    0.00    6741         __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(__gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [97]
                0.00    0.00    6741/15256       __gnu_cxx::__ops::_Iter_comp_val<compareMove>::_Iter_comp_val(compareMove) [67]
-----------------------------------------------
                0.00    0.00    6741/6741        std::vector<Move, std::allocator<Move> >::pop_back() [99]
[98]     0.0    0.00    0.00    6741         void std::allocator_traits<std::allocator<Move> >::destroy<Move>(std::allocator<Move>&, Move*) [98]
                0.00    0.00    6741/6741        void __gnu_cxx::new_allocator<Move>::destroy<Move>(Move*) [95]
-----------------------------------------------
                0.00    0.00    6741/6741        std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop() [14]
[99]     0.0    0.00    0.00    6741         std::vector<Move, std::allocator<Move> >::pop_back() [99]
                0.00    0.00    6741/6741        void std::allocator_traits<std::allocator<Move> >::destroy<Move>(std::allocator<Move>&, Move*) [98]
-----------------------------------------------
                0.00    0.00    6741/6741        void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [102]
[100]    0.0    0.00    0.00    6741         void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [100]
                0.00    0.00   20223/297377      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [39]
                0.00    0.00   20223/135830      std::remove_reference<Move&>::type&& std::move<Move&>(Move&) [41]
                0.00    0.00    6741/21998       __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&) [52]
                0.00    0.00    6741/6741        void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [101]
-----------------------------------------------
                0.00    0.00    6741/6741        void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [100]
[101]    0.0    0.00    0.00    6741         void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [101]
                0.00    0.00  238008/268639      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator+(long) const [40]
                0.00    0.00  119018/297377      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [39]
                0.00    0.00   66250/135830      std::remove_reference<Move&>::type&& std::move<Move&>(Move&) [41]
                0.00    0.00   59495/59495       bool __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >) [43]
                0.00    0.00    6741/6741        __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(__gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [97]
                0.00    0.00    6741/15256       void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>) [68]
-----------------------------------------------
                0.00    0.00    6741/6741        std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop() [14]
[102]    0.0    0.00    0.00    6741         void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [102]
                0.00    0.00    6741/21998       __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&) [52]
                0.00    0.00    6741/6741        __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator--() [96]
                0.00    0.00    6741/6742        __gnu_cxx::__ops::_Iter_comp_iter<compareMove> __gnu_cxx::__ops::__iter_comp_iter<compareMove>(compareMove) [94]
                0.00    0.00    6741/6741        void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [100]
-----------------------------------------------
                0.00    0.00    4118/4118        bool std::operator==<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&) [107]
[103]    0.0    0.00    0.00    4118         std::move_iterator<Move*>::base() const [103]
-----------------------------------------------
                0.00    0.00    1280/3328        __gnu_cxx::new_allocator<Cell>::allocate(unsigned long, void const*) [125]
                0.00    0.00    2048/3328        std::allocator_traits<std::allocator<Cell> >::max_size(std::allocator<Cell> const&) [111]
[104]    0.0    0.00    0.00    3328         __gnu_cxx::new_allocator<Cell>::max_size() const [104]
-----------------------------------------------
                0.00    0.00     127/2942        std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&) [176]
                0.00    0.00     256/2942        std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [20]
                0.00    0.00     511/2942        std::vector<Cell, std::allocator<Cell> >::~vector() [143]
                0.00    0.00    2048/2942        void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [18]
[105]    0.0    0.00    0.00    2942         std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() [105]
-----------------------------------------------
                0.00    0.00     256/2304        std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [20]
                0.00    0.00    2048/2304        std::vector<Cell, std::allocator<Cell> >::max_size() const [109]
[106]    0.0    0.00    0.00    2304         std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() const [106]
-----------------------------------------------
                0.00    0.00    2059/2059        bool std::operator!=<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&) [108]
[107]    0.0    0.00    0.00    2059         bool std::operator==<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&) [107]
                0.00    0.00    4118/4118        std::move_iterator<Move*>::base() const [103]
-----------------------------------------------
                0.00    0.00    2059/2059        Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [258]
[108]    0.0    0.00    0.00    2059         bool std::operator!=<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&) [108]
                0.00    0.00    2059/2059        bool std::operator==<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&) [107]
-----------------------------------------------
                0.00    0.00    2048/2048        std::vector<Cell, std::allocator<Cell> >::_M_check_len(unsigned long, char const*) const [19]
[109]    0.0    0.00    0.00    2048         std::vector<Cell, std::allocator<Cell> >::max_size() const [109]
                0.00    0.00    2048/2048        std::allocator_traits<std::allocator<Cell> >::max_size(std::allocator<Cell> const&) [111]
                0.00    0.00    2048/2304        std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() const [106]
-----------------------------------------------
                0.00    0.00    2048/2048        std::move_iterator<Cell*> std::__make_move_if_noexcept_iterator<Cell, std::move_iterator<Cell*> >(Cell*) [112]
[110]    0.0    0.00    0.00    2048         std::move_iterator<Cell*>::move_iterator(Cell*) [110]
-----------------------------------------------
                0.00    0.00    2048/2048        std::vector<Cell, std::allocator<Cell> >::max_size() const [109]
[111]    0.0    0.00    0.00    2048         std::allocator_traits<std::allocator<Cell> >::max_size(std::allocator<Cell> const&) [111]
                0.00    0.00    2048/3328        __gnu_cxx::new_allocator<Cell>::max_size() const [104]
-----------------------------------------------
                0.00    0.00    2048/2048        Cell* std::__uninitialized_move_if_noexcept_a<Cell*, Cell*, std::allocator<Cell> >(Cell*, Cell*, Cell*, std::allocator<Cell>&) [134]
[112]    0.0    0.00    0.00    2048         std::move_iterator<Cell*> std::__make_move_if_noexcept_iterator<Cell, std::move_iterator<Cell*> >(Cell*) [112]
                0.00    0.00    2048/2048        std::move_iterator<Cell*>::move_iterator(Cell*) [110]
-----------------------------------------------
                0.00    0.00    2047/2047        Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [258]
[113]    0.0    0.00    0.00    2047         std::move_iterator<Move*>::operator*() const [113]
-----------------------------------------------
                0.00    0.00    2047/2047        Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [258]
[114]    0.0    0.00    0.00    2047         std::move_iterator<Move*>::operator++() [114]
-----------------------------------------------
                0.00    0.00    2047/2047        Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [258]
[115]    0.0    0.00    0.00    2047         void std::_Construct<Move, Move>(Move*, Move&&) [115]
                0.00    0.00    2047/27604       Move&& std::forward<Move>(std::remove_reference<Move>::type&) [51]
                0.00    0.00    2047/57956       operator new(unsigned long, void*) [44]
-----------------------------------------------
                0.00    0.00    2047/2047        Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [258]
[116]    0.0    0.00    0.00    2047         Move* std::__addressof<Move>(Move&) [116]
-----------------------------------------------
                0.00    0.00    1774/1774        Board::setCell(int, int, int, int) [16]
[117]    0.0    0.00    0.00    1774         Faction::getHealth() [117]
-----------------------------------------------
                0.00    0.00    1769/1769        Board::step(int) [13]
[118]    0.0    0.00    0.00    1769         Faction::getAccuracy() [118]
-----------------------------------------------
                0.00    0.00    1769/1769        Board::step(int) [13]
[119]    0.0    0.00    0.00    1769         Faction::getStrength() [119]
-----------------------------------------------
                0.00    0.00    1535/1535        void std::_Destroy<Cell*>(Cell*, Cell*) [122]
[120]    0.0    0.00    0.00    1535         void std::_Destroy_aux<true>::__destroy<Cell*>(Cell*, Cell*) [120]
-----------------------------------------------
                0.00    0.00     511/1535        std::_Vector_base<Cell, std::allocator<Cell> >::~_Vector_base() [142]
                0.00    0.00    1024/1535        void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [18]
[121]    0.0    0.00    0.00    1535         std::_Vector_base<Cell, std::allocator<Cell> >::_M_deallocate(Cell*, unsigned long) [121]
                0.00    0.00    1280/1280        std::allocator_traits<std::allocator<Cell> >::deallocate(std::allocator<Cell>&, Cell*, unsigned long) [127]
-----------------------------------------------
                0.00    0.00    1535/1535        void std::_Destroy<Cell*, Cell>(Cell*, Cell*, std::allocator<Cell>&) [123]
[122]    0.0    0.00    0.00    1535         void std::_Destroy<Cell*>(Cell*, Cell*) [122]
                0.00    0.00    1535/1535        void std::_Destroy_aux<true>::__destroy<Cell*>(Cell*, Cell*) [120]
-----------------------------------------------
                0.00    0.00     511/1535        std::vector<Cell, std::allocator<Cell> >::~vector() [143]
                0.00    0.00    1024/1535        void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [18]
[123]    0.0    0.00    0.00    1535         void std::_Destroy<Cell*, Cell>(Cell*, Cell*, std::allocator<Cell>&) [123]
                0.00    0.00    1535/1535        void std::_Destroy<Cell*>(Cell*, Cell*) [122]
-----------------------------------------------
                0.00    0.00    1280/1280        std::allocator_traits<std::allocator<Cell> >::deallocate(std::allocator<Cell>&, Cell*, unsigned long) [127]
[124]    0.0    0.00    0.00    1280         __gnu_cxx::new_allocator<Cell>::deallocate(Cell*, unsigned long) [124]
-----------------------------------------------
                0.00    0.00    1280/1280        std::allocator_traits<std::allocator<Cell> >::allocate(std::allocator<Cell>&, unsigned long) [128]
[125]    0.0    0.00    0.00    1280         __gnu_cxx::new_allocator<Cell>::allocate(unsigned long, void const*) [125]
                0.00    0.00    1280/3328        __gnu_cxx::new_allocator<Cell>::max_size() const [104]
-----------------------------------------------
                0.00    0.00     256/1280        std::_Vector_base<Cell, std::allocator<Cell> >::_M_create_storage(unsigned long) [153]
                0.00    0.00    1024/1280        void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [18]
[126]    0.0    0.00    0.00    1280         std::_Vector_base<Cell, std::allocator<Cell> >::_M_allocate(unsigned long) [126]
                0.00    0.00    1280/1280        std::allocator_traits<std::allocator<Cell> >::allocate(std::allocator<Cell>&, unsigned long) [128]
-----------------------------------------------
                0.00    0.00    1280/1280        std::_Vector_base<Cell, std::allocator<Cell> >::_M_deallocate(Cell*, unsigned long) [121]
[127]    0.0    0.00    0.00    1280         std::allocator_traits<std::allocator<Cell> >::deallocate(std::allocator<Cell>&, Cell*, unsigned long) [127]
                0.00    0.00    1280/1280        __gnu_cxx::new_allocator<Cell>::deallocate(Cell*, unsigned long) [124]
-----------------------------------------------
                0.00    0.00    1280/1280        std::_Vector_base<Cell, std::allocator<Cell> >::_M_allocate(unsigned long) [126]
[128]    0.0    0.00    0.00    1280         std::allocator_traits<std::allocator<Cell> >::allocate(std::allocator<Cell>&, unsigned long) [128]
                0.00    0.00    1280/1280        __gnu_cxx::new_allocator<Cell>::allocate(unsigned long, void const*) [125]
-----------------------------------------------
                0.00    0.00    1143/1143        std::enable_if<std::__and_<std::is_move_constructible<Cell*>, std::is_move_assignable<Cell*> >::value, void>::type std::swap<Cell*>(Cell*&, Cell*&) [146]
[129]    0.0    0.00    0.00    1143         std::remove_reference<Cell*&>::type&& std::move<Cell*&>(Cell*&) [129]
-----------------------------------------------
                0.00    0.00       4/1068        std::vector<Faction, std::allocator<Faction> >::_M_check_len(unsigned long, char const*) const [320]
                0.00    0.00       8/1068        std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_check_len(unsigned long, char const*) const [31]
                0.00    0.00      12/1068        std::vector<Move, std::allocator<Move> >::_M_check_len(unsigned long, char const*) const [254]
                0.00    0.00      20/1068        std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [223]
                0.00    0.00    1024/1068        std::vector<Cell, std::allocator<Cell> >::_M_check_len(unsigned long, char const*) const [19]
[130]    0.0    0.00    0.00    1068         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [130]
-----------------------------------------------
                0.00    0.00    1024/1024        Cell* std::uninitialized_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [132]
[131]    0.0    0.00    0.00    1024         Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [131]
                0.00    0.00   17280/17280       bool std::operator!=<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&) [58]
                0.00    0.00   16256/16256       std::move_iterator<Cell*>::operator*() const [59]
                0.00    0.00   16256/16256       void std::_Construct<Cell, Cell>(Cell*, Cell&&) [61]
                0.00    0.00   16256/36736       Cell* std::__addressof<Cell>(Cell&) [49]
                0.00    0.00   16256/16256       std::move_iterator<Cell*>::operator++() [60]
-----------------------------------------------
                0.00    0.00    1024/1024        Cell* std::__uninitialized_copy_a<std::move_iterator<Cell*>, Cell*, Cell>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*, std::allocator<Cell>&) [133]
[132]    0.0    0.00    0.00    1024         Cell* std::uninitialized_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [132]
                0.00    0.00    1024/1024        Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [131]
-----------------------------------------------
                0.00    0.00    1024/1024        Cell* std::__uninitialized_move_if_noexcept_a<Cell*, Cell*, std::allocator<Cell> >(Cell*, Cell*, Cell*, std::allocator<Cell>&) [134]
[133]    0.0    0.00    0.00    1024         Cell* std::__uninitialized_copy_a<std::move_iterator<Cell*>, Cell*, Cell>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*, std::allocator<Cell>&) [133]
                0.00    0.00    1024/1024        Cell* std::uninitialized_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [132]
-----------------------------------------------
                0.00    0.00    1024/1024        void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [18]
[134]    0.0    0.00    0.00    1024         Cell* std::__uninitialized_move_if_noexcept_a<Cell*, Cell*, std::allocator<Cell> >(Cell*, Cell*, Cell*, std::allocator<Cell>&) [134]
                0.00    0.00    2048/2048        std::move_iterator<Cell*> std::__make_move_if_noexcept_iterator<Cell, std::move_iterator<Cell*> >(Cell*) [112]
                0.00    0.00    1024/1024        Cell* std::__uninitialized_copy_a<std::move_iterator<Cell*>, Cell*, Cell>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*, std::allocator<Cell>&) [133]
-----------------------------------------------
                0.00    0.00     767/767         std::allocator<Cell>::~allocator() [136]
[135]    0.0    0.00    0.00     767         __gnu_cxx::new_allocator<Cell>::~new_allocator() [135]
-----------------------------------------------
                0.00    0.00     256/767         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [20]
                0.00    0.00     511/767         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::~_Vector_impl() [141]
[136]    0.0    0.00    0.00     767         std::allocator<Cell>::~allocator() [136]
                0.00    0.00     767/767         __gnu_cxx::new_allocator<Cell>::~new_allocator() [135]
-----------------------------------------------
                0.00    0.00     639/639         std::allocator<Cell>::allocator(std::allocator<Cell> const&) [138]
[137]    0.0    0.00    0.00     639         __gnu_cxx::new_allocator<Cell>::new_allocator(__gnu_cxx::new_allocator<Cell> const&) [137]
-----------------------------------------------
                0.00    0.00     127/639         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell>&&) [175]
                0.00    0.00     256/639         std::allocator_traits<std::allocator<Cell> >::select_on_container_copy_construction(std::allocator<Cell> const&) [155]
                0.00    0.00     256/639         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell> const&) [152]
[138]    0.0    0.00    0.00     639         std::allocator<Cell>::allocator(std::allocator<Cell> const&) [138]
                0.00    0.00     639/639         __gnu_cxx::new_allocator<Cell>::new_allocator(__gnu_cxx::new_allocator<Cell> const&) [137]
-----------------------------------------------
                0.00    0.00     127/638         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [284]
                0.00    0.00     128/638         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [26]
                0.00    0.00     383/638         void std::_Destroy_aux<false>::__destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [264]
[139]    0.0    0.00    0.00     638         std::vector<Cell, std::allocator<Cell> >* std::__addressof<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >&) [139]
-----------------------------------------------
                0.00    0.00     256/512         std::vector<Cell, std::allocator<Cell> >::begin() const [151]
                0.00    0.00     256/512         std::vector<Cell, std::allocator<Cell> >::end() const [150]
[140]    0.0    0.00    0.00     512         __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::__normal_iterator(Cell const* const&) [140]
-----------------------------------------------
                0.00    0.00     511/511         std::_Vector_base<Cell, std::allocator<Cell> >::~_Vector_base() [142]
[141]    0.0    0.00    0.00     511         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::~_Vector_impl() [141]
                0.00    0.00     511/767         std::allocator<Cell>::~allocator() [136]
-----------------------------------------------
                0.00    0.00     511/511         std::vector<Cell, std::allocator<Cell> >::~vector() [143]
[142]    0.0    0.00    0.00     511         std::_Vector_base<Cell, std::allocator<Cell> >::~_Vector_base() [142]
                0.00    0.00     511/1535        std::_Vector_base<Cell, std::allocator<Cell> >::_M_deallocate(Cell*, unsigned long) [121]
                0.00    0.00     511/511         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::~_Vector_impl() [141]
-----------------------------------------------
                0.00    0.00     128/511         Board::Board(int, int, int, int, int, XColor*) [11]
                0.00    0.00     383/511         void std::_Destroy<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*) [145]
[143]    0.0    0.00    0.00     511         std::vector<Cell, std::allocator<Cell> >::~vector() [143]
                0.00    0.00     511/2942        std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() [105]
                0.00    0.00     511/1535        void std::_Destroy<Cell*, Cell>(Cell*, Cell*, std::allocator<Cell>&) [123]
                0.00    0.00     511/511         std::_Vector_base<Cell, std::allocator<Cell> >::~_Vector_base() [142]
-----------------------------------------------
                0.00    0.00       8/392         void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [30]
                0.00    0.00     128/392         void std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [24]
                0.00    0.00     128/392         void __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [23]
                0.00    0.00     128/392         void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [25]
[144]    0.0    0.00    0.00     392         std::vector<Cell, std::allocator<Cell> > const& std::forward<std::vector<Cell, std::allocator<Cell> > const&>(std::remove_reference<std::vector<Cell, std::allocator<Cell> > const&>::type&) [144]
-----------------------------------------------
                0.00    0.00     383/383         void std::_Destroy_aux<false>::__destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [264]
[145]    0.0    0.00    0.00     383         void std::_Destroy<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*) [145]
                0.00    0.00     383/511         std::vector<Cell, std::allocator<Cell> >::~vector() [143]
-----------------------------------------------
                0.00    0.00     381/381         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_M_swap_data(std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl&) [174]
[146]    0.0    0.00    0.00     381         std::enable_if<std::__and_<std::is_move_constructible<Cell*>, std::is_move_assignable<Cell*> >::value, void>::type std::swap<Cell*>(Cell*&, Cell*&) [146]
                0.00    0.00    1143/1143        std::remove_reference<Cell*&>::type&& std::move<Cell*&>(Cell*&) [129]
-----------------------------------------------
                0.00    0.00     270/270         bool std::operator==<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&) [162]
[147]    0.0    0.00    0.00     270         std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::base() const [147]
-----------------------------------------------
                0.00    0.00     258/258         bool __gnu_cxx::operator!=<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&) [165]
[148]    0.0    0.00    0.00     258         __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::base() const [148]
-----------------------------------------------
                0.00    0.00     256/256         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [20]
[149]    0.0    0.00    0.00     256         __gnu_cxx::__alloc_traits<std::allocator<Cell> >::_S_select_on_copy(std::allocator<Cell> const&) [149]
                0.00    0.00     256/256         std::allocator_traits<std::allocator<Cell> >::select_on_container_copy_construction(std::allocator<Cell> const&) [155]
-----------------------------------------------
                0.00    0.00     256/256         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [20]
[150]    0.0    0.00    0.00     256         std::vector<Cell, std::allocator<Cell> >::end() const [150]
                0.00    0.00     256/512         __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::__normal_iterator(Cell const* const&) [140]
-----------------------------------------------
                0.00    0.00     256/256         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [20]
[151]    0.0    0.00    0.00     256         std::vector<Cell, std::allocator<Cell> >::begin() const [151]
                0.00    0.00     256/512         __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::__normal_iterator(Cell const* const&) [140]
-----------------------------------------------
                0.00    0.00     256/256         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(unsigned long, std::allocator<Cell> const&) [154]
[152]    0.0    0.00    0.00     256         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell> const&) [152]
                0.00    0.00     256/639         std::allocator<Cell>::allocator(std::allocator<Cell> const&) [138]
-----------------------------------------------
                0.00    0.00     256/256         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(unsigned long, std::allocator<Cell> const&) [154]
[153]    0.0    0.00    0.00     256         std::_Vector_base<Cell, std::allocator<Cell> >::_M_create_storage(unsigned long) [153]
                0.00    0.00     256/1280        std::_Vector_base<Cell, std::allocator<Cell> >::_M_allocate(unsigned long) [126]
-----------------------------------------------
                0.00    0.00     256/256         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [20]
[154]    0.0    0.00    0.00     256         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(unsigned long, std::allocator<Cell> const&) [154]
                0.00    0.00     256/256         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell> const&) [152]
                0.00    0.00     256/256         std::_Vector_base<Cell, std::allocator<Cell> >::_M_create_storage(unsigned long) [153]
-----------------------------------------------
                0.00    0.00     256/256         __gnu_cxx::__alloc_traits<std::allocator<Cell> >::_S_select_on_copy(std::allocator<Cell> const&) [149]
[155]    0.0    0.00    0.00     256         std::allocator_traits<std::allocator<Cell> >::select_on_container_copy_construction(std::allocator<Cell> const&) [155]
                0.00    0.00     256/639         std::allocator<Cell>::allocator(std::allocator<Cell> const&) [138]
-----------------------------------------------
                0.00    0.00     256/256         Cell* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [157]
[156]    0.0    0.00    0.00     256         Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [156]
                0.00    0.00   20736/20736       bool __gnu_cxx::operator!=<Cell const*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&) [53]
                0.00    0.00   20480/20480       __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator*() const [55]
                0.00    0.00   20480/36736       Cell* std::__addressof<Cell>(Cell&) [49]
                0.00    0.00   20480/20480       __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator++() [54]
                0.00    0.00   20480/20480       void std::_Construct<Cell, Cell const&>(Cell*, Cell const&) [56]
-----------------------------------------------
                0.00    0.00     256/256         Cell* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, Cell>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, std::allocator<Cell>&) [158]
[157]    0.0    0.00    0.00     256         Cell* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [157]
                0.00    0.00     256/256         Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [156]
-----------------------------------------------
                0.00    0.00     256/256         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [20]
[158]    0.0    0.00    0.00     256         Cell* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, Cell>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, std::allocator<Cell>&) [158]
                0.00    0.00     256/256         Cell* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [157]
-----------------------------------------------
                0.00    0.00     127/254         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&) [176]
                0.00    0.00     127/254         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell>&&) [175]
[159]    0.0    0.00    0.00     254         std::remove_reference<std::allocator<Cell>&>::type&& std::move<std::allocator<Cell>&>(std::allocator<Cell>&) [159]
-----------------------------------------------
                0.00    0.00      20/180         void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [230]
                0.00    0.00      30/180         Faction::init(int) [291]
                0.00    0.00      50/180         std::vector<int, std::allocator<int> >::_M_range_check(unsigned long) const [186]
                0.00    0.00      80/180         std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [223]
[160]    0.0    0.00    0.00     180         std::vector<int, std::allocator<int> >::size() const [160]
-----------------------------------------------
                0.00    0.00      10/137         bool __gnu_cxx::operator==<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [296]
                0.00    0.00      27/137         int* std::__niter_base<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [206]
                0.00    0.00      30/137         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [245]
                0.00    0.00      70/137         bool __gnu_cxx::operator!=<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [199]
[161]    0.0    0.00    0.00     137         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [161]
-----------------------------------------------
                0.00    0.00     135/135         bool std::operator!=<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&) [163]
[162]    0.0    0.00    0.00     135         bool std::operator==<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&) [162]
                0.00    0.00     270/270         std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::base() const [147]
-----------------------------------------------
                0.00    0.00     135/135         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [284]
[163]    0.0    0.00    0.00     135         bool std::operator!=<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&) [163]
                0.00    0.00     135/135         bool std::operator==<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&) [162]
-----------------------------------------------
                0.00    0.00      18/131         void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [310]
                0.00    0.00      21/131         bool __gnu_cxx::__ops::_Val_less_iter::operator()<int, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(int&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [220]
                0.00    0.00      42/131         void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter) [243]
                0.00    0.00      50/131         bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [209]
[164]    0.0    0.00    0.00     131         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [164]
-----------------------------------------------
                0.00    0.00     129/129         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [26]
[165]    0.0    0.00    0.00     129         bool __gnu_cxx::operator!=<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&) [165]
                0.00    0.00     258/258         __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::base() const [148]
-----------------------------------------------
                0.00    0.00     128/128         std::allocator<Cell>::allocator() [169]
[166]    0.0    0.00    0.00     128         __gnu_cxx::new_allocator<Cell>::new_allocator() [166]
-----------------------------------------------
                0.00    0.00     128/128         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [26]
[167]    0.0    0.00    0.00     128         __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator++() [167]
-----------------------------------------------
                0.00    0.00     128/128         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [26]
[168]    0.0    0.00    0.00     128         __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator*() const [168]
-----------------------------------------------
                0.00    0.00     128/128         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl() [170]
[169]    0.0    0.00    0.00     128         std::allocator<Cell>::allocator() [169]
                0.00    0.00     128/128         __gnu_cxx::new_allocator<Cell>::new_allocator() [166]
-----------------------------------------------
                0.00    0.00     128/128         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base() [171]
[170]    0.0    0.00    0.00     128         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl() [170]
                0.00    0.00     128/128         std::allocator<Cell>::allocator() [169]
-----------------------------------------------
                0.00    0.00     128/128         std::vector<Cell, std::allocator<Cell> >::vector() [172]
[171]    0.0    0.00    0.00     128         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base() [171]
                0.00    0.00     128/128         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl() [170]
-----------------------------------------------
                0.00    0.00     128/128         Board::Board(int, int, int, int, int, XColor*) [11]
[172]    0.0    0.00    0.00     128         std::vector<Cell, std::allocator<Cell> >::vector() [172]
                0.00    0.00     128/128         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base() [171]
-----------------------------------------------
                0.00    0.00     127/127         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [284]
[173]    0.0    0.00    0.00     127         std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator*() const [173]
-----------------------------------------------
                0.00    0.00     127/127         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&) [176]
[174]    0.0    0.00    0.00     127         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_M_swap_data(std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl&) [174]
                0.00    0.00     381/381         std::enable_if<std::__and_<std::is_move_constructible<Cell*>, std::is_move_assignable<Cell*> >::value, void>::type std::swap<Cell*>(Cell*&, Cell*&) [146]
-----------------------------------------------
                0.00    0.00     127/127         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&) [176]
[175]    0.0    0.00    0.00     127         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell>&&) [175]
                0.00    0.00     127/254         std::remove_reference<std::allocator<Cell>&>::type&& std::move<std::allocator<Cell>&>(std::allocator<Cell>&) [159]
                0.00    0.00     127/639         std::allocator<Cell>::allocator(std::allocator<Cell> const&) [138]
-----------------------------------------------
                0.00    0.00     127/127         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> >&&) [178]
[176]    0.0    0.00    0.00     127         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&) [176]
                0.00    0.00     127/254         std::remove_reference<std::allocator<Cell>&>::type&& std::move<std::allocator<Cell>&>(std::allocator<Cell>&) [159]
                0.00    0.00     127/2942        std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() [105]
                0.00    0.00     127/127         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell>&&) [175]
                0.00    0.00     127/127         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_M_swap_data(std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl&) [174]
-----------------------------------------------
                0.00    0.00     127/127         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [284]
[177]    0.0    0.00    0.00     127         std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator++() [177]
-----------------------------------------------
                0.00    0.00     127/127         void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >&&) [179]
[178]    0.0    0.00    0.00     127         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> >&&) [178]
                0.00    0.00     127/127         std::remove_reference<std::vector<Cell, std::allocator<Cell> >&>::type&& std::move<std::vector<Cell, std::allocator<Cell> >&>(std::vector<Cell, std::allocator<Cell> >&) [180]
                0.00    0.00     127/127         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&) [176]
-----------------------------------------------
                0.00    0.00     127/127         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [284]
[179]    0.0    0.00    0.00     127         void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >&&) [179]
                0.00    0.00     127/127         std::vector<Cell, std::allocator<Cell> >&& std::forward<std::vector<Cell, std::allocator<Cell> > >(std::remove_reference<std::vector<Cell, std::allocator<Cell> > >::type&) [181]
                0.00    0.00     127/57956       operator new(unsigned long, void*) [44]
                0.00    0.00     127/127         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> >&&) [178]
-----------------------------------------------
                0.00    0.00     127/127         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> >&&) [178]
[180]    0.0    0.00    0.00     127         std::remove_reference<std::vector<Cell, std::allocator<Cell> >&>::type&& std::move<std::vector<Cell, std::allocator<Cell> >&>(std::vector<Cell, std::allocator<Cell> >&) [180]
-----------------------------------------------
                0.00    0.00     127/127         void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >&&) [179]
[181]    0.0    0.00    0.00     127         std::vector<Cell, std::allocator<Cell> >&& std::forward<std::vector<Cell, std::allocator<Cell> > >(std::remove_reference<std::vector<Cell, std::allocator<Cell> > >::type&) [181]
-----------------------------------------------
                0.00    0.00      20/110         void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [230]
                0.00    0.00      30/110         void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [203]
                0.00    0.00      30/110         void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [202]
                0.00    0.00      30/110         void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [201]
[182]    0.0    0.00    0.00     110         int&& std::forward<int>(std::remove_reference<int>::type&) [182]
-----------------------------------------------
                0.00    0.00      18/85          void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [310]
                0.00    0.00      30/85          std::vector<int, std::allocator<int> >::push_back(int&&) [204]
                0.00    0.00      37/85          void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter) [243]
[183]    0.0    0.00    0.00      85         std::remove_reference<int&>::type&& std::move<int&>(int&) [183]
-----------------------------------------------
                0.00    0.00      20/60          __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [222]
                0.00    0.00      40/60          std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [194]
[184]    0.0    0.00    0.00      60         __gnu_cxx::new_allocator<int>::max_size() const [184]
-----------------------------------------------
                0.00    0.00      60/60          int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*) [232]
[185]    0.0    0.00    0.00      60         int* std::__niter_base<int*>(int*) [185]
-----------------------------------------------
                0.00    0.00      50/50          std::vector<int, std::allocator<int> >::at(unsigned long) [187]
[186]    0.0    0.00    0.00      50         std::vector<int, std::allocator<int> >::_M_range_check(unsigned long) const [186]
                0.00    0.00      50/180         std::vector<int, std::allocator<int> >::size() const [160]
-----------------------------------------------
                0.00    0.00      50/50          Faction::init(int) [291]
[187]    0.0    0.00    0.00      50         std::vector<int, std::allocator<int> >::at(unsigned long) [187]
                0.00    0.00      50/50          std::vector<int, std::allocator<int> >::_M_range_check(unsigned long) const [186]
                0.00    0.00      50/50          std::vector<int, std::allocator<int> >::operator[](unsigned long) [188]
-----------------------------------------------
                0.00    0.00      50/50          std::vector<int, std::allocator<int> >::at(unsigned long) [187]
[188]    0.0    0.00    0.00      50         std::vector<int, std::allocator<int> >::operator[](unsigned long) [188]
-----------------------------------------------
                0.00    0.00       5/45          std::vector<int, std::allocator<int> >::~vector() [309]
                0.00    0.00      40/45          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [230]
[189]    0.0    0.00    0.00      45         std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [189]
-----------------------------------------------
                0.00    0.00      40/40          std::vector<int, std::allocator<int> >::max_size() const [192]
[190]    0.0    0.00    0.00      40         std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [190]
-----------------------------------------------
                0.00    0.00      40/40          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>) [195]
[191]    0.0    0.00    0.00      40         std::move_iterator<int*>::base() const [191]
-----------------------------------------------
                0.00    0.00      40/40          std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [223]
[192]    0.0    0.00    0.00      40         std::vector<int, std::allocator<int> >::max_size() const [192]
                0.00    0.00      40/40          std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [194]
                0.00    0.00      40/40          std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [190]
-----------------------------------------------
                0.00    0.00      40/40          std::move_iterator<int*> std::__make_move_if_noexcept_iterator<int, std::move_iterator<int*> >(int*) [197]
[193]    0.0    0.00    0.00      40         std::move_iterator<int*>::move_iterator(int*) [193]
-----------------------------------------------
                0.00    0.00      40/40          std::vector<int, std::allocator<int> >::max_size() const [192]
[194]    0.0    0.00    0.00      40         std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [194]
                0.00    0.00      40/60          __gnu_cxx::new_allocator<int>::max_size() const [184]
-----------------------------------------------
                0.00    0.00      40/40          int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [236]
[195]    0.0    0.00    0.00      40         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>) [195]
                0.00    0.00      40/40          int* std::__miter_base<int*>(int*) [196]
                0.00    0.00      40/40          std::move_iterator<int*>::base() const [191]
-----------------------------------------------
                0.00    0.00      40/40          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>) [195]
[196]    0.0    0.00    0.00      40         int* std::__miter_base<int*>(int*) [196]
-----------------------------------------------
                0.00    0.00      40/40          int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [235]
[197]    0.0    0.00    0.00      40         std::move_iterator<int*> std::__make_move_if_noexcept_iterator<int, std::move_iterator<int*> >(int*) [197]
                0.00    0.00      40/40          std::move_iterator<int*>::move_iterator(int*) [193]
-----------------------------------------------
                0.00    0.00      12/36          __gnu_cxx::new_allocator<Move>::allocate(unsigned long, void const*) [252]
                0.00    0.00      24/36          std::allocator_traits<std::allocator<Move> >::max_size(std::allocator<Move> const&) [217]
[198]    0.0    0.00    0.00      36         __gnu_cxx::new_allocator<Move>::max_size() const [198]
-----------------------------------------------
                0.00    0.00       5/35          void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [315]
                0.00    0.00      30/35          void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [310]
[199]    0.0    0.00    0.00      35         bool __gnu_cxx::operator!=<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [199]
                0.00    0.00      70/137         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [161]
-----------------------------------------------
                0.00    0.00       5/33          std::vector<int, std::allocator<int> >::begin() [307]
                0.00    0.00       5/33          std::vector<int, std::allocator<int> >::end() [306]
                0.00    0.00       9/33          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [277]
                0.00    0.00      14/33          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator+(long) const [246]
[200]    0.0    0.00    0.00      33         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [200]
-----------------------------------------------
                0.00    0.00      30/30          void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [202]
[201]    0.0    0.00    0.00      30         void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [201]
                0.00    0.00      30/110         int&& std::forward<int>(std::remove_reference<int>::type&) [182]
                0.00    0.00      30/57956       operator new(unsigned long, void*) [44]
-----------------------------------------------
                0.00    0.00      10/30          void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [203]
                0.00    0.00      20/30          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [230]
[202]    0.0    0.00    0.00      30         void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [202]
                0.00    0.00      30/110         int&& std::forward<int>(std::remove_reference<int>::type&) [182]
                0.00    0.00      30/30          void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [201]
-----------------------------------------------
                0.00    0.00      30/30          std::vector<int, std::allocator<int> >::push_back(int&&) [204]
[203]    0.0    0.00    0.00      30         void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [203]
                0.00    0.00      30/110         int&& std::forward<int>(std::remove_reference<int>::type&) [182]
                0.00    0.00      20/20          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [230]
                0.00    0.00      10/30          void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [202]
-----------------------------------------------
                0.00    0.00      30/30          Faction::init(int) [291]
[204]    0.0    0.00    0.00      30         std::vector<int, std::allocator<int> >::push_back(int&&) [204]
                0.00    0.00      30/85          std::remove_reference<int&>::type&& std::move<int&>(int&) [183]
                0.00    0.00      30/30          void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [203]
-----------------------------------------------
                0.00    0.00       1/27          std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&) [369]
                0.00    0.00       2/27          std::vector<Move, std::allocator<Move> >::~vector() [347]
                0.00    0.00      24/27          void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [259]
[205]    0.0    0.00    0.00      27         std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() [205]
-----------------------------------------------
                0.00    0.00      27/27          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [277]
[206]    0.0    0.00    0.00      27         int* std::__niter_base<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [206]
                0.00    0.00      27/137         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [161]
-----------------------------------------------
                0.00    0.00      25/25          void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [310]
[207]    0.0    0.00    0.00      25         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator++() [207]
-----------------------------------------------
                0.00    0.00       9/25          __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::allocate(unsigned long, void const*) [269]
                0.00    0.00      16/25          std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size(std::allocator<std::vector<Cell, std::allocator<Cell> > > const&) [242]
[208]    0.0    0.00    0.00      25         __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::max_size() const [208]
-----------------------------------------------
                0.00    0.00      25/25          void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [310]
[209]    0.0    0.00    0.00      25         bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [209]
                0.00    0.00      50/131         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [164]
-----------------------------------------------
                0.00    0.00      25/25          void std::_Destroy<int*>(int*, int*) [212]
[210]    0.0    0.00    0.00      25         void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [210]
-----------------------------------------------
                0.00    0.00       5/25          std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [304]
                0.00    0.00      20/25          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [230]
[211]    0.0    0.00    0.00      25         std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [211]
                0.00    0.00      20/20          std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [227]
-----------------------------------------------
                0.00    0.00      25/25          void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [213]
[212]    0.0    0.00    0.00      25         void std::_Destroy<int*>(int*, int*) [212]
                0.00    0.00      25/25          void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [210]
-----------------------------------------------
                0.00    0.00       5/25          std::vector<int, std::allocator<int> >::~vector() [309]
                0.00    0.00      20/25          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [230]
[213]    0.0    0.00    0.00      25         void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [213]
                0.00    0.00      25/25          void std::_Destroy<int*>(int*, int*) [212]
-----------------------------------------------
                0.00    0.00      24/24          std::vector<Move, std::allocator<Move> >::max_size() const [215]
[214]    0.0    0.00    0.00      24         std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() const [214]
-----------------------------------------------
                0.00    0.00      24/24          std::vector<Move, std::allocator<Move> >::_M_check_len(unsigned long, char const*) const [254]
[215]    0.0    0.00    0.00      24         std::vector<Move, std::allocator<Move> >::max_size() const [215]
                0.00    0.00      24/24          std::allocator_traits<std::allocator<Move> >::max_size(std::allocator<Move> const&) [217]
                0.00    0.00      24/24          std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() const [214]
-----------------------------------------------
                0.00    0.00      24/24          std::move_iterator<Move*> std::__make_move_if_noexcept_iterator<Move, std::move_iterator<Move*> >(Move*) [218]
[216]    0.0    0.00    0.00      24         std::move_iterator<Move*>::move_iterator(Move*) [216]
-----------------------------------------------
                0.00    0.00      24/24          std::vector<Move, std::allocator<Move> >::max_size() const [215]
[217]    0.0    0.00    0.00      24         std::allocator_traits<std::allocator<Move> >::max_size(std::allocator<Move> const&) [217]
                0.00    0.00      24/36          __gnu_cxx::new_allocator<Move>::max_size() const [198]
-----------------------------------------------
                0.00    0.00      24/24          Move* std::__uninitialized_move_if_noexcept_a<Move*, Move*, std::allocator<Move> >(Move*, Move*, Move*, std::allocator<Move>&) [263]
[218]    0.0    0.00    0.00      24         std::move_iterator<Move*> std::__make_move_if_noexcept_iterator<Move, std::move_iterator<Move*> >(Move*) [218]
                0.00    0.00      24/24          std::move_iterator<Move*>::move_iterator(Move*) [216]
-----------------------------------------------
                0.00    0.00      21/21          void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter) [243]
[219]    0.0    0.00    0.00      21         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator--() [219]
-----------------------------------------------
                0.00    0.00      21/21          void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter) [243]
[220]    0.0    0.00    0.00      21         bool __gnu_cxx::__ops::_Val_less_iter::operator()<int, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(int&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [220]
                0.00    0.00      21/131         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [164]
-----------------------------------------------
                0.00    0.00      20/20          std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [227]
[221]    0.0    0.00    0.00      20         __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [221]
-----------------------------------------------
                0.00    0.00      20/20          std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [228]
[222]    0.0    0.00    0.00      20         __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [222]
                0.00    0.00      20/60          __gnu_cxx::new_allocator<int>::max_size() const [184]
-----------------------------------------------
                0.00    0.00      20/20          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [230]
[223]    0.0    0.00    0.00      20         std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [223]
                0.00    0.00      80/180         std::vector<int, std::allocator<int> >::size() const [160]
                0.00    0.00      40/40          std::vector<int, std::allocator<int> >::max_size() const [192]
                0.00    0.00      20/1068        unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [130]
-----------------------------------------------
                0.00    0.00      20/20          int* std::__copy_move_a<true, int*, int*>(int*, int*, int*) [231]
[224]    0.0    0.00    0.00      20         int* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) [224]
-----------------------------------------------
                0.00    0.00       1/20          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [22]
                0.00    0.00       1/20          std::vector<Cell, std::allocator<Cell> >* std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > >(unsigned long, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >) [27]
                0.00    0.00       2/20          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector() [349]
                0.00    0.00      16/20          void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [30]
[225]    0.0    0.00    0.00      20         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() [225]
-----------------------------------------------
                0.00    0.00      20/20          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [230]
[226]    0.0    0.00    0.00      20         std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [226]
                0.00    0.00      20/20          std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [228]
-----------------------------------------------
                0.00    0.00      20/20          std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [211]
[227]    0.0    0.00    0.00      20         std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [227]
                0.00    0.00      20/20          __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [221]
-----------------------------------------------
                0.00    0.00      20/20          std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [226]
[228]    0.0    0.00    0.00      20         std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [228]
                0.00    0.00      20/20          __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [222]
-----------------------------------------------
                0.00    0.00      20/20          int* std::uninitialized_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [233]
[229]    0.0    0.00    0.00      20         int* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [229]
                0.00    0.00      20/20          int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [236]
-----------------------------------------------
                0.00    0.00      20/20          void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [203]
[230]    0.0    0.00    0.00      20         void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [230]
                0.00    0.00      40/45          std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [189]
                0.00    0.00      20/20          std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [223]
                0.00    0.00      20/20          std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [226]
                0.00    0.00      20/110         int&& std::forward<int>(std::remove_reference<int>::type&) [182]
                0.00    0.00      20/180         std::vector<int, std::allocator<int> >::size() const [160]
                0.00    0.00      20/30          void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [202]
                0.00    0.00      20/20          int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [235]
                0.00    0.00      20/25          void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [213]
                0.00    0.00      20/25          std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [211]
-----------------------------------------------
                0.00    0.00      20/20          int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*) [232]
[231]    0.0    0.00    0.00      20         int* std::__copy_move_a<true, int*, int*>(int*, int*, int*) [231]
                0.00    0.00      20/20          int* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) [224]
-----------------------------------------------
                0.00    0.00      20/20          int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [236]
[232]    0.0    0.00    0.00      20         int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*) [232]
                0.00    0.00      60/60          int* std::__niter_base<int*>(int*) [185]
                0.00    0.00      20/20          int* std::__copy_move_a<true, int*, int*>(int*, int*, int*) [231]
-----------------------------------------------
                0.00    0.00      20/20          int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&) [234]
[233]    0.0    0.00    0.00      20         int* std::uninitialized_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [233]
                0.00    0.00      20/20          int* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [229]
-----------------------------------------------
                0.00    0.00      20/20          int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [235]
[234]    0.0    0.00    0.00      20         int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&) [234]
                0.00    0.00      20/20          int* std::uninitialized_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [233]
-----------------------------------------------
                0.00    0.00      20/20          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [230]
[235]    0.0    0.00    0.00      20         int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [235]
                0.00    0.00      40/40          std::move_iterator<int*> std::__make_move_if_noexcept_iterator<int, std::move_iterator<int*> >(int*) [197]
                0.00    0.00      20/20          int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&) [234]
-----------------------------------------------
                0.00    0.00      20/20          int* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [229]
[236]    0.0    0.00    0.00      20         int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [236]
                0.00    0.00      40/40          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>) [195]
                0.00    0.00      20/20          int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*) [232]
-----------------------------------------------
                0.00    0.00      18/18          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::move_backward<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [275]
[237]    0.0    0.00    0.00      18         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__miter_base<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [237]
-----------------------------------------------
                0.00    0.00      16/16          void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [310]
[238]    0.0    0.00    0.00      16         __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter) [238]
-----------------------------------------------
                0.00    0.00      16/16          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size() const [240]
[239]    0.0    0.00    0.00      16         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() const [239]
-----------------------------------------------
                0.00    0.00      16/16          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_check_len(unsigned long, char const*) const [31]
[240]    0.0    0.00    0.00      16         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size() const [240]
                0.00    0.00      16/16          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() const [239]
                0.00    0.00      16/16          std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size(std::allocator<std::vector<Cell, std::allocator<Cell> > > const&) [242]
-----------------------------------------------
                0.00    0.00      16/16          std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> std::__make_move_if_noexcept_iterator<std::vector<Cell, std::allocator<Cell> >, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> >(std::vector<Cell, std::allocator<Cell> >*) [244]
[241]    0.0    0.00    0.00      16         std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::move_iterator(std::vector<Cell, std::allocator<Cell> >*) [241]
-----------------------------------------------
                0.00    0.00      16/16          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size() const [240]
[242]    0.0    0.00    0.00      16         std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size(std::allocator<std::vector<Cell, std::allocator<Cell> > > const&) [242]
                0.00    0.00      16/25          __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::max_size() const [208]
-----------------------------------------------
                0.00    0.00      16/16          void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [310]
[243]    0.0    0.00    0.00      16         void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter) [243]
                0.00    0.00      42/131         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [164]
                0.00    0.00      37/85          std::remove_reference<int&>::type&& std::move<int&>(int&) [183]
                0.00    0.00      21/21          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator--() [219]
                0.00    0.00      21/21          bool __gnu_cxx::__ops::_Val_less_iter::operator()<int, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(int&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [220]
-----------------------------------------------
                0.00    0.00      16/16          std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_move_if_noexcept_a<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [290]
[244]    0.0    0.00    0.00      16         std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> std::__make_move_if_noexcept_iterator<std::vector<Cell, std::allocator<Cell> >, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> >(std::vector<Cell, std::allocator<Cell> >*) [244]
                0.00    0.00      16/16          std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::move_iterator(std::vector<Cell, std::allocator<Cell> >*) [241]
-----------------------------------------------
                0.00    0.00       5/15          void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [315]
                0.00    0.00       5/15          void std::__introsort_loop<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter) [311]
                0.00    0.00       5/15          void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [312]
[245]    0.0    0.00    0.00      15         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [245]
                0.00    0.00      30/137         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [161]
-----------------------------------------------
                0.00    0.00      14/14          void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [310]
[246]    0.0    0.00    0.00      14         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator+(long) const [246]
                0.00    0.00      14/33          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [200]
-----------------------------------------------
                0.00    0.00      14/14          void std::_Destroy<Move*>(Move*, Move*) [249]
[247]    0.0    0.00    0.00      14         void std::_Destroy_aux<true>::__destroy<Move*>(Move*, Move*) [247]
-----------------------------------------------
                0.00    0.00       2/14          std::_Vector_base<Move, std::allocator<Move> >::~_Vector_base() [342]
                0.00    0.00      12/14          void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [259]
[248]    0.0    0.00    0.00      14         std::_Vector_base<Move, std::allocator<Move> >::_M_deallocate(Move*, unsigned long) [248]
                0.00    0.00      12/12          std::allocator_traits<std::allocator<Move> >::deallocate(std::allocator<Move>&, Move*, unsigned long) [256]
-----------------------------------------------
                0.00    0.00      14/14          void std::_Destroy<Move*, Move>(Move*, Move*, std::allocator<Move>&) [250]
[249]    0.0    0.00    0.00      14         void std::_Destroy<Move*>(Move*, Move*) [249]
                0.00    0.00      14/14          void std::_Destroy_aux<true>::__destroy<Move*>(Move*, Move*) [247]
-----------------------------------------------
                0.00    0.00       2/14          std::vector<Move, std::allocator<Move> >::~vector() [347]
                0.00    0.00      12/14          void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [259]
[250]    0.0    0.00    0.00      14         void std::_Destroy<Move*, Move>(Move*, Move*, std::allocator<Move>&) [250]
                0.00    0.00      14/14          void std::_Destroy<Move*>(Move*, Move*) [249]
-----------------------------------------------
                0.00    0.00      12/12          std::allocator_traits<std::allocator<Move> >::deallocate(std::allocator<Move>&, Move*, unsigned long) [256]
[251]    0.0    0.00    0.00      12         __gnu_cxx::new_allocator<Move>::deallocate(Move*, unsigned long) [251]
-----------------------------------------------
                0.00    0.00      12/12          std::allocator_traits<std::allocator<Move> >::allocate(std::allocator<Move>&, unsigned long) [257]
[252]    0.0    0.00    0.00      12         __gnu_cxx::new_allocator<Move>::allocate(unsigned long, void const*) [252]
                0.00    0.00      12/36          __gnu_cxx::new_allocator<Move>::max_size() const [198]
-----------------------------------------------
                0.00    0.00       4/12          __gnu_cxx::new_allocator<Faction>::allocate(unsigned long, void const*) [319]
                0.00    0.00       8/12          std::allocator_traits<std::allocator<Faction> >::max_size(std::allocator<Faction> const&) [283]
[253]    0.0    0.00    0.00      12         __gnu_cxx::new_allocator<Faction>::max_size() const [253]
-----------------------------------------------
                0.00    0.00      12/12          void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [259]
[254]    0.0    0.00    0.00      12         std::vector<Move, std::allocator<Move> >::_M_check_len(unsigned long, char const*) const [254]
                0.00    0.00      48/6829        std::vector<Move, std::allocator<Move> >::size() const [86]
                0.00    0.00      24/24          std::vector<Move, std::allocator<Move> >::max_size() const [215]
                0.00    0.00      12/1068        unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [130]
-----------------------------------------------
                0.00    0.00      12/12          void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [259]
[255]    0.0    0.00    0.00      12         std::_Vector_base<Move, std::allocator<Move> >::_M_allocate(unsigned long) [255]
                0.00    0.00      12/12          std::allocator_traits<std::allocator<Move> >::allocate(std::allocator<Move>&, unsigned long) [257]
-----------------------------------------------
                0.00    0.00      12/12          std::_Vector_base<Move, std::allocator<Move> >::_M_deallocate(Move*, unsigned long) [248]
[256]    0.0    0.00    0.00      12         std::allocator_traits<std::allocator<Move> >::deallocate(std::allocator<Move>&, Move*, unsigned long) [256]
                0.00    0.00      12/12          __gnu_cxx::new_allocator<Move>::deallocate(Move*, unsigned long) [251]
-----------------------------------------------
                0.00    0.00      12/12          std::_Vector_base<Move, std::allocator<Move> >::_M_allocate(unsigned long) [255]
[257]    0.0    0.00    0.00      12         std::allocator_traits<std::allocator<Move> >::allocate(std::allocator<Move>&, unsigned long) [257]
                0.00    0.00      12/12          __gnu_cxx::new_allocator<Move>::allocate(unsigned long, void const*) [252]
-----------------------------------------------
                0.00    0.00      12/12          Move* std::uninitialized_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [261]
[258]    0.0    0.00    0.00      12         Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [258]
                0.00    0.00    2059/2059        bool std::operator!=<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&) [108]
                0.00    0.00    2047/2047        std::move_iterator<Move*>::operator*() const [113]
                0.00    0.00    2047/2047        Move* std::__addressof<Move>(Move&) [116]
                0.00    0.00    2047/2047        void std::_Construct<Move, Move>(Move*, Move&&) [115]
                0.00    0.00    2047/2047        std::move_iterator<Move*>::operator++() [114]
-----------------------------------------------
                0.00    0.00      12/12          void std::vector<Move, std::allocator<Move> >::emplace_back<Move>(Move&&) [83]
[259]    0.0    0.00    0.00      12         void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [259]
                0.00    0.00      24/27          std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() [205]
                0.00    0.00      12/12          std::vector<Move, std::allocator<Move> >::_M_check_len(unsigned long, char const*) const [254]
                0.00    0.00      12/12          std::_Vector_base<Move, std::allocator<Move> >::_M_allocate(unsigned long) [255]
                0.00    0.00      12/27604       Move&& std::forward<Move>(std::remove_reference<Move>::type&) [51]
                0.00    0.00      12/6829        std::vector<Move, std::allocator<Move> >::size() const [86]
                0.00    0.00      12/8515        void std::allocator_traits<std::allocator<Move> >::construct<Move, Move>(std::allocator<Move>&, Move*, Move&&) [82]
                0.00    0.00      12/12          Move* std::__uninitialized_move_if_noexcept_a<Move*, Move*, std::allocator<Move> >(Move*, Move*, Move*, std::allocator<Move>&) [263]
                0.00    0.00      12/14          void std::_Destroy<Move*, Move>(Move*, Move*, std::allocator<Move>&) [250]
                0.00    0.00      12/14          std::_Vector_base<Move, std::allocator<Move> >::_M_deallocate(Move*, unsigned long) [248]
-----------------------------------------------
                0.00    0.00      12/12          Faction* std::__copy_move_a2<true, Faction*, Faction*>(Faction*, Faction*, Faction*) [328]
[260]    0.0    0.00    0.00      12         Faction* std::__niter_base<Faction*>(Faction*) [260]
-----------------------------------------------
                0.00    0.00      12/12          Move* std::__uninitialized_copy_a<std::move_iterator<Move*>, Move*, Move>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*, std::allocator<Move>&) [262]
[261]    0.0    0.00    0.00      12         Move* std::uninitialized_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [261]
                0.00    0.00      12/12          Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [258]
-----------------------------------------------
                0.00    0.00      12/12          Move* std::__uninitialized_move_if_noexcept_a<Move*, Move*, std::allocator<Move> >(Move*, Move*, Move*, std::allocator<Move>&) [263]
[262]    0.0    0.00    0.00      12         Move* std::__uninitialized_copy_a<std::move_iterator<Move*>, Move*, Move>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*, std::allocator<Move>&) [262]
                0.00    0.00      12/12          Move* std::uninitialized_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [261]
-----------------------------------------------
                0.00    0.00      12/12          void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [259]
[263]    0.0    0.00    0.00      12         Move* std::__uninitialized_move_if_noexcept_a<Move*, Move*, std::allocator<Move> >(Move*, Move*, Move*, std::allocator<Move>&) [263]
                0.00    0.00      24/24          std::move_iterator<Move*> std::__make_move_if_noexcept_iterator<Move, std::move_iterator<Move*> >(Move*) [218]
                0.00    0.00      12/12          Move* std::__uninitialized_copy_a<std::move_iterator<Move*>, Move*, Move>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*, std::allocator<Move>&) [262]
-----------------------------------------------
                0.00    0.00      11/11          void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [266]
[264]    0.0    0.00    0.00      11         void std::_Destroy_aux<false>::__destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [264]
                0.00    0.00     383/638         std::vector<Cell, std::allocator<Cell> >* std::__addressof<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >&) [139]
                0.00    0.00     383/383         void std::_Destroy<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*) [145]
-----------------------------------------------
                0.00    0.00       1/11          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [22]
                0.00    0.00       2/11          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~_Vector_base() [346]
                0.00    0.00       8/11          void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [30]
[265]    0.0    0.00    0.00      11         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [265]
                0.00    0.00       9/9           std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::deallocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, unsigned long) [272]
-----------------------------------------------
                0.00    0.00      11/11          void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [267]
[266]    0.0    0.00    0.00      11         void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [266]
                0.00    0.00      11/11          void std::_Destroy_aux<false>::__destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [264]
-----------------------------------------------
                0.00    0.00       1/11          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [22]
                0.00    0.00       2/11          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector() [349]
                0.00    0.00       8/11          void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [30]
[267]    0.0    0.00    0.00      11         void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [267]
                0.00    0.00      11/11          void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [266]
-----------------------------------------------
                0.00    0.00       9/9           std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::deallocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, unsigned long) [272]
[268]    0.0    0.00    0.00       9         __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [268]
-----------------------------------------------
                0.00    0.00       9/9           std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::allocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, unsigned long) [273]
[269]    0.0    0.00    0.00       9         __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::allocate(unsigned long, void const*) [269]
                0.00    0.00       9/25          __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::max_size() const [208]
-----------------------------------------------
                0.00    0.00       1/9           std::vector<Faction, std::allocator<Faction> >::~vector() [380]
                0.00    0.00       8/9           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [326]
[270]    0.0    0.00    0.00       9         std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() [270]
-----------------------------------------------
                0.00    0.00       1/9           std::vector<Cell, std::allocator<Cell> >* std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > >(unsigned long, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >) [27]
                0.00    0.00       8/9           void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [30]
[271]    0.0    0.00    0.00       9         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate(unsigned long) [271]
                0.00    0.00       9/9           std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::allocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, unsigned long) [273]
-----------------------------------------------
                0.00    0.00       9/9           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [265]
[272]    0.0    0.00    0.00       9         std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::deallocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, unsigned long) [272]
                0.00    0.00       9/9           __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [268]
-----------------------------------------------
                0.00    0.00       9/9           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate(unsigned long) [271]
[273]    0.0    0.00    0.00       9         std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::allocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, unsigned long) [273]
                0.00    0.00       9/9           __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::allocate(unsigned long, void const*) [269]
-----------------------------------------------
                0.00    0.00       9/9           int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*) [276]
[274]    0.0    0.00    0.00       9         int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*) [274]
-----------------------------------------------
                0.00    0.00       9/9           void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [310]
[275]    0.0    0.00    0.00       9         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::move_backward<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [275]
                0.00    0.00      18/18          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__miter_base<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [237]
                0.00    0.00       9/9           __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [277]
-----------------------------------------------
                0.00    0.00       9/9           __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [277]
[276]    0.0    0.00    0.00       9         int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*) [276]
                0.00    0.00       9/9           int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*) [274]
-----------------------------------------------
                0.00    0.00       9/9           __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::move_backward<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [275]
[277]    0.0    0.00    0.00       9         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [277]
                0.00    0.00      27/27          int* std::__niter_base<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [206]
                0.00    0.00       9/9           int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*) [276]
                0.00    0.00       9/33          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [200]
-----------------------------------------------
                0.00    0.00       9/9           std::enable_if<std::__and_<std::is_move_constructible<Move*>, std::is_move_assignable<Move*> >::value, void>::type std::swap<Move*>(Move*&, Move*&) [333]
[278]    0.0    0.00    0.00       9         std::remove_reference<Move*&>::type&& std::move<Move*&>(Move*&) [278]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Faction, std::allocator<Faction> >::max_size() const [281]
[279]    0.0    0.00    0.00       8         std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() const [279]
-----------------------------------------------
                0.00    0.00       8/8           decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Faction*>(std::move_iterator<Faction*>) [285]
[280]    0.0    0.00    0.00       8         std::move_iterator<Faction*>::base() const [280]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Faction, std::allocator<Faction> >::_M_check_len(unsigned long, char const*) const [320]
[281]    0.0    0.00    0.00       8         std::vector<Faction, std::allocator<Faction> >::max_size() const [281]
                0.00    0.00       8/8           std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() const [279]
                0.00    0.00       8/8           std::allocator_traits<std::allocator<Faction> >::max_size(std::allocator<Faction> const&) [283]
-----------------------------------------------
                0.00    0.00       8/8           std::move_iterator<Faction*> std::__make_move_if_noexcept_iterator<Faction, std::move_iterator<Faction*> >(Faction*) [289]
[282]    0.0    0.00    0.00       8         std::move_iterator<Faction*>::move_iterator(Faction*) [282]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Faction, std::allocator<Faction> >::max_size() const [281]
[283]    0.0    0.00    0.00       8         std::allocator_traits<std::allocator<Faction> >::max_size(std::allocator<Faction> const&) [283]
                0.00    0.00       8/12          __gnu_cxx::new_allocator<Faction>::max_size() const [253]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [287]
[284]    0.0    0.00    0.00       8         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [284]
                0.00    0.00     135/135         bool std::operator!=<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&) [163]
                0.00    0.00     127/127         std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator*() const [173]
                0.00    0.00     127/638         std::vector<Cell, std::allocator<Cell> >* std::__addressof<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >&) [139]
                0.00    0.00     127/127         std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator++() [177]
                0.00    0.00     127/127         void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >&&) [179]
-----------------------------------------------
                0.00    0.00       8/8           Faction* std::copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [332]
[285]    0.0    0.00    0.00       8         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Faction*>(std::move_iterator<Faction*>) [285]
                0.00    0.00       8/8           std::move_iterator<Faction*>::base() const [280]
                0.00    0.00       8/8           Faction* std::__miter_base<Faction*>(Faction*) [286]
-----------------------------------------------
                0.00    0.00       8/8           decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Faction*>(std::move_iterator<Faction*>) [285]
[286]    0.0    0.00    0.00       8         Faction* std::__miter_base<Faction*>(Faction*) [286]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [288]
[287]    0.0    0.00    0.00       8         std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [287]
                0.00    0.00       8/8           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [284]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_move_if_noexcept_a<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [290]
[288]    0.0    0.00    0.00       8         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [288]
                0.00    0.00       8/8           std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [287]
-----------------------------------------------
                0.00    0.00       8/8           Faction* std::__uninitialized_move_if_noexcept_a<Faction*, Faction*, std::allocator<Faction> >(Faction*, Faction*, Faction*, std::allocator<Faction>&) [331]
[289]    0.0    0.00    0.00       8         std::move_iterator<Faction*> std::__make_move_if_noexcept_iterator<Faction, std::move_iterator<Faction*> >(Faction*) [289]
                0.00    0.00       8/8           std::move_iterator<Faction*>::move_iterator(Faction*) [282]
-----------------------------------------------
                0.00    0.00       8/8           void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [30]
[290]    0.0    0.00    0.00       8         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_move_if_noexcept_a<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [290]
                0.00    0.00      16/16          std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> std::__make_move_if_noexcept_iterator<std::vector<Cell, std::allocator<Cell> >, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> >(std::vector<Cell, std::allocator<Cell> >*) [244]
                0.00    0.00       8/8           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [288]
-----------------------------------------------
                0.00    0.00       5/5           Board::init() [15]
[291]    0.0    0.00    0.00       5         Faction::init(int) [291]
                0.00    0.00      50/50          std::vector<int, std::allocator<int> >::at(unsigned long) [187]
                0.00    0.00      30/30          std::vector<int, std::allocator<int> >::push_back(int&&) [204]
                0.00    0.00      30/180         std::vector<int, std::allocator<int> >::size() const [160]
                0.00    0.00       5/5           std::vector<int, std::allocator<int> >::vector() [308]
                0.00    0.00       5/5           std::vector<int, std::allocator<int> >::end() [306]
                0.00    0.00       5/5           void std::sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [314]
                0.00    0.00       5/5           std::vector<int, std::allocator<int> >::begin() [307]
                0.00    0.00       5/5           std::vector<int, std::allocator<int> >::~vector() [309]
-----------------------------------------------
                0.00    0.00       5/5           void std::allocator_traits<std::allocator<Faction> >::construct<Faction>(std::allocator<Faction>&, Faction*) [305]
[292]    0.0    0.00    0.00       5         void __gnu_cxx::new_allocator<Faction>::construct<Faction>(Faction*) [292]
                0.00    0.00       5/57956       operator new(unsigned long, void*) [44]
-----------------------------------------------
                0.00    0.00       5/5           std::allocator<int>::allocator() [297]
[293]    0.0    0.00    0.00       5         __gnu_cxx::new_allocator<int>::new_allocator() [293]
-----------------------------------------------
                0.00    0.00       5/5           std::allocator<int>::~allocator() [298]
[294]    0.0    0.00    0.00       5         __gnu_cxx::new_allocator<int>::~new_allocator() [294]
-----------------------------------------------
                0.00    0.00       5/5           void std::sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [314]
[295]    0.0    0.00    0.00       5         __gnu_cxx::__ops::__iter_less_iter() [295]
-----------------------------------------------
                0.00    0.00       5/5           void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [310]
[296]    0.0    0.00    0.00       5         bool __gnu_cxx::operator==<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [296]
                0.00    0.00      10/137         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [161]
-----------------------------------------------
                0.00    0.00       5/5           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [301]
[297]    0.0    0.00    0.00       5         std::allocator<int>::allocator() [297]
                0.00    0.00       5/5           __gnu_cxx::new_allocator<int>::new_allocator() [293]
-----------------------------------------------
                0.00    0.00       5/5           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [302]
[298]    0.0    0.00    0.00       5         std::allocator<int>::~allocator() [298]
                0.00    0.00       5/5           __gnu_cxx::new_allocator<int>::~new_allocator() [294]
-----------------------------------------------
                0.00    0.00       5/5           void std::_Destroy<Faction*>(Faction*, Faction*) [316]
[299]    0.0    0.00    0.00       5         void std::_Destroy_aux<true>::__destroy<Faction*>(Faction*, Faction*) [299]
-----------------------------------------------
                0.00    0.00       1/5           std::_Vector_base<Faction, std::allocator<Faction> >::~_Vector_base() [374]
                0.00    0.00       4/5           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [326]
[300]    0.0    0.00    0.00       5         std::_Vector_base<Faction, std::allocator<Faction> >::_M_deallocate(Faction*, unsigned long) [300]
                0.00    0.00       4/4           std::allocator_traits<std::allocator<Faction> >::deallocate(std::allocator<Faction>&, Faction*, unsigned long) [323]
-----------------------------------------------
                0.00    0.00       5/5           std::_Vector_base<int, std::allocator<int> >::_Vector_base() [303]
[301]    0.0    0.00    0.00       5         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [301]
                0.00    0.00       5/5           std::allocator<int>::allocator() [297]
-----------------------------------------------
                0.00    0.00       5/5           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [304]
[302]    0.0    0.00    0.00       5         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [302]
                0.00    0.00       5/5           std::allocator<int>::~allocator() [298]
-----------------------------------------------
                0.00    0.00       5/5           std::vector<int, std::allocator<int> >::vector() [308]
[303]    0.0    0.00    0.00       5         std::_Vector_base<int, std::allocator<int> >::_Vector_base() [303]
                0.00    0.00       5/5           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [301]
-----------------------------------------------
                0.00    0.00       5/5           std::vector<int, std::allocator<int> >::~vector() [309]
[304]    0.0    0.00    0.00       5         std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [304]
                0.00    0.00       5/25          std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [211]
                0.00    0.00       5/5           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [302]
-----------------------------------------------
                0.00    0.00       1/5           void std::vector<Faction, std::allocator<Faction> >::emplace_back<>() [12]
                0.00    0.00       4/5           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [326]
[305]    0.0    0.00    0.00       5         void std::allocator_traits<std::allocator<Faction> >::construct<Faction>(std::allocator<Faction>&, Faction*) [305]
                0.00    0.00       5/5           void __gnu_cxx::new_allocator<Faction>::construct<Faction>(Faction*) [292]
-----------------------------------------------
                0.00    0.00       5/5           Faction::init(int) [291]
[306]    0.0    0.00    0.00       5         std::vector<int, std::allocator<int> >::end() [306]
                0.00    0.00       5/33          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [200]
-----------------------------------------------
                0.00    0.00       5/5           Faction::init(int) [291]
[307]    0.0    0.00    0.00       5         std::vector<int, std::allocator<int> >::begin() [307]
                0.00    0.00       5/33          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [200]
-----------------------------------------------
                0.00    0.00       5/5           Faction::init(int) [291]
[308]    0.0    0.00    0.00       5         std::vector<int, std::allocator<int> >::vector() [308]
                0.00    0.00       5/5           std::_Vector_base<int, std::allocator<int> >::_Vector_base() [303]
-----------------------------------------------
                0.00    0.00       5/5           Faction::init(int) [291]
[309]    0.0    0.00    0.00       5         std::vector<int, std::allocator<int> >::~vector() [309]
                0.00    0.00       5/45          std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [189]
                0.00    0.00       5/25          void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [213]
                0.00    0.00       5/5           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [304]
-----------------------------------------------
                0.00    0.00       5/5           void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [312]
[310]    0.0    0.00    0.00       5         void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [310]
                0.00    0.00      30/35          bool __gnu_cxx::operator!=<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [199]
                0.00    0.00      25/25          bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [209]
                0.00    0.00      25/25          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator++() [207]
                0.00    0.00      18/131         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [164]
                0.00    0.00      18/85          std::remove_reference<int&>::type&& std::move<int&>(int&) [183]
                0.00    0.00      16/16          __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter) [238]
                0.00    0.00      16/16          void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter) [243]
                0.00    0.00      14/14          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator+(long) const [246]
                0.00    0.00       9/9           __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::move_backward<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [275]
                0.00    0.00       5/5           bool __gnu_cxx::operator==<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [296]
-----------------------------------------------
                0.00    0.00       5/5           void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [315]
[311]    0.0    0.00    0.00       5         void std::__introsort_loop<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter) [311]
                0.00    0.00       5/15          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [245]
-----------------------------------------------
                0.00    0.00       5/5           void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [315]
[312]    0.0    0.00    0.00       5         void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [312]
                0.00    0.00       5/15          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [245]
                0.00    0.00       5/5           void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [310]
-----------------------------------------------
                0.00    0.00       5/5           void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [315]
[313]    0.0    0.00    0.00       5         std::__lg(long) [313]
-----------------------------------------------
                0.00    0.00       5/5           Faction::init(int) [291]
[314]    0.0    0.00    0.00       5         void std::sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [314]
                0.00    0.00       5/5           __gnu_cxx::__ops::__iter_less_iter() [295]
                0.00    0.00       5/5           void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [315]
-----------------------------------------------
                0.00    0.00       5/5           void std::sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [314]
[315]    0.0    0.00    0.00       5         void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [315]
                0.00    0.00       5/35          bool __gnu_cxx::operator!=<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [199]
                0.00    0.00       5/5           std::__lg(long) [313]
                0.00    0.00       5/15          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [245]
                0.00    0.00       5/5           void std::__introsort_loop<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter) [311]
                0.00    0.00       5/5           void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [312]
-----------------------------------------------
                0.00    0.00       5/5           void std::_Destroy<Faction*, Faction>(Faction*, Faction*, std::allocator<Faction>&) [317]
[316]    0.0    0.00    0.00       5         void std::_Destroy<Faction*>(Faction*, Faction*) [316]
                0.00    0.00       5/5           void std::_Destroy_aux<true>::__destroy<Faction*>(Faction*, Faction*) [299]
-----------------------------------------------
                0.00    0.00       1/5           std::vector<Faction, std::allocator<Faction> >::~vector() [380]
                0.00    0.00       4/5           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [326]
[317]    0.0    0.00    0.00       5         void std::_Destroy<Faction*, Faction>(Faction*, Faction*, std::allocator<Faction>&) [317]
                0.00    0.00       5/5           void std::_Destroy<Faction*>(Faction*, Faction*) [316]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator_traits<std::allocator<Faction> >::deallocate(std::allocator<Faction>&, Faction*, unsigned long) [323]
[318]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<Faction>::deallocate(Faction*, unsigned long) [318]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator_traits<std::allocator<Faction> >::allocate(std::allocator<Faction>&, unsigned long) [324]
[319]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<Faction>::allocate(unsigned long, void const*) [319]
                0.00    0.00       4/12          __gnu_cxx::new_allocator<Faction>::max_size() const [253]
-----------------------------------------------
                0.00    0.00       4/4           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [326]
[320]    0.0    0.00    0.00       4         std::vector<Faction, std::allocator<Faction> >::_M_check_len(unsigned long, char const*) const [320]
                0.00    0.00      16/15638       std::vector<Faction, std::allocator<Faction> >::size() const [63]
                0.00    0.00       8/8           std::vector<Faction, std::allocator<Faction> >::max_size() const [281]
                0.00    0.00       4/1068        unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [130]
-----------------------------------------------
                0.00    0.00       4/4           Faction* std::__copy_move_a<true, Faction*, Faction*>(Faction*, Faction*, Faction*) [327]
[321]    0.0    0.00    0.00       4         Faction* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Faction>(Faction const*, Faction const*, Faction*) [321]
-----------------------------------------------
                0.00    0.00       4/4           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [326]
[322]    0.0    0.00    0.00       4         std::_Vector_base<Faction, std::allocator<Faction> >::_M_allocate(unsigned long) [322]
                0.00    0.00       4/4           std::allocator_traits<std::allocator<Faction> >::allocate(std::allocator<Faction>&, unsigned long) [324]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<Faction, std::allocator<Faction> >::_M_deallocate(Faction*, unsigned long) [300]
[323]    0.0    0.00    0.00       4         std::allocator_traits<std::allocator<Faction> >::deallocate(std::allocator<Faction>&, Faction*, unsigned long) [323]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<Faction>::deallocate(Faction*, unsigned long) [318]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<Faction, std::allocator<Faction> >::_M_allocate(unsigned long) [322]
[324]    0.0    0.00    0.00       4         std::allocator_traits<std::allocator<Faction> >::allocate(std::allocator<Faction>&, unsigned long) [324]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<Faction>::allocate(unsigned long, void const*) [319]
-----------------------------------------------
                0.00    0.00       4/4           Faction* std::uninitialized_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [329]
[325]    0.0    0.00    0.00       4         Faction* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [325]
                0.00    0.00       4/4           Faction* std::copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [332]
-----------------------------------------------
                0.00    0.00       4/4           void std::vector<Faction, std::allocator<Faction> >::emplace_back<>() [12]
[326]    0.0    0.00    0.00       4         void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [326]
                0.00    0.00       8/9           std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() [270]
                0.00    0.00       4/4           std::vector<Faction, std::allocator<Faction> >::_M_check_len(unsigned long, char const*) const [320]
                0.00    0.00       4/4           std::_Vector_base<Faction, std::allocator<Faction> >::_M_allocate(unsigned long) [322]
                0.00    0.00       4/15638       std::vector<Faction, std::allocator<Faction> >::size() const [63]
                0.00    0.00       4/5           void std::allocator_traits<std::allocator<Faction> >::construct<Faction>(std::allocator<Faction>&, Faction*) [305]
                0.00    0.00       4/4           Faction* std::__uninitialized_move_if_noexcept_a<Faction*, Faction*, std::allocator<Faction> >(Faction*, Faction*, Faction*, std::allocator<Faction>&) [331]
                0.00    0.00       4/5           void std::_Destroy<Faction*, Faction>(Faction*, Faction*, std::allocator<Faction>&) [317]
                0.00    0.00       4/5           std::_Vector_base<Faction, std::allocator<Faction> >::_M_deallocate(Faction*, unsigned long) [300]
-----------------------------------------------
                0.00    0.00       4/4           Faction* std::__copy_move_a2<true, Faction*, Faction*>(Faction*, Faction*, Faction*) [328]
[327]    0.0    0.00    0.00       4         Faction* std::__copy_move_a<true, Faction*, Faction*>(Faction*, Faction*, Faction*) [327]
                0.00    0.00       4/4           Faction* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Faction>(Faction const*, Faction const*, Faction*) [321]
-----------------------------------------------
                0.00    0.00       4/4           Faction* std::copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [332]
[328]    0.0    0.00    0.00       4         Faction* std::__copy_move_a2<true, Faction*, Faction*>(Faction*, Faction*, Faction*) [328]
                0.00    0.00      12/12          Faction* std::__niter_base<Faction*>(Faction*) [260]
                0.00    0.00       4/4           Faction* std::__copy_move_a<true, Faction*, Faction*>(Faction*, Faction*, Faction*) [327]
-----------------------------------------------
                0.00    0.00       4/4           Faction* std::__uninitialized_copy_a<std::move_iterator<Faction*>, Faction*, Faction>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*, std::allocator<Faction>&) [330]
[329]    0.0    0.00    0.00       4         Faction* std::uninitialized_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [329]
                0.00    0.00       4/4           Faction* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [325]
-----------------------------------------------
                0.00    0.00       4/4           Faction* std::__uninitialized_move_if_noexcept_a<Faction*, Faction*, std::allocator<Faction> >(Faction*, Faction*, Faction*, std::allocator<Faction>&) [331]
[330]    0.0    0.00    0.00       4         Faction* std::__uninitialized_copy_a<std::move_iterator<Faction*>, Faction*, Faction>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*, std::allocator<Faction>&) [330]
                0.00    0.00       4/4           Faction* std::uninitialized_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [329]
-----------------------------------------------
                0.00    0.00       4/4           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [326]
[331]    0.0    0.00    0.00       4         Faction* std::__uninitialized_move_if_noexcept_a<Faction*, Faction*, std::allocator<Faction> >(Faction*, Faction*, Faction*, std::allocator<Faction>&) [331]
                0.00    0.00       8/8           std::move_iterator<Faction*> std::__make_move_if_noexcept_iterator<Faction, std::move_iterator<Faction*> >(Faction*) [289]
                0.00    0.00       4/4           Faction* std::__uninitialized_copy_a<std::move_iterator<Faction*>, Faction*, Faction>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*, std::allocator<Faction>&) [330]
-----------------------------------------------
                0.00    0.00       4/4           Faction* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [325]
[332]    0.0    0.00    0.00       4         Faction* std::copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [332]
                0.00    0.00       8/8           decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Faction*>(std::move_iterator<Faction*>) [285]
                0.00    0.00       4/4           Faction* std::__copy_move_a2<true, Faction*, Faction*>(Faction*, Faction*, Faction*) [328]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_M_swap_data(std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl&) [366]
[333]    0.0    0.00    0.00       3         std::enable_if<std::__and_<std::is_move_constructible<Move*>, std::is_move_assignable<Move*> >::value, void>::type std::swap<Move*>(Move*&, Move*&) [333]
                0.00    0.00       9/9           std::remove_reference<Move*&>::type&& std::move<Move*&>(Move*&) [278]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<Move>::~allocator() [338]
[334]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<Move>::~new_allocator() [334]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::vector<Cell, std::allocator<Cell> > >::allocator() [339]
[335]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::new_allocator() [335]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::vector<Cell, std::allocator<Cell> > >::~allocator() [340]
[336]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::~new_allocator() [336]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::begin() const [360]
                0.00    0.00       1/2           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::end() const [359]
[337]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::__normal_iterator(std::vector<Cell, std::allocator<Cell> > const* const&) [337]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::~_Vector_impl() [341]
[338]    0.0    0.00    0.00       2         std::allocator<Move>::~allocator() [338]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<Move>::~new_allocator() [334]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::_Vector_impl() [343]
[339]    0.0    0.00    0.00       2         std::allocator<std::vector<Cell, std::allocator<Cell> > >::allocator() [339]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::new_allocator() [335]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::~_Vector_impl() [344]
[340]    0.0    0.00    0.00       2         std::allocator<std::vector<Cell, std::allocator<Cell> > >::~allocator() [340]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::~new_allocator() [336]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Move, std::allocator<Move> >::~_Vector_base() [342]
[341]    0.0    0.00    0.00       2         std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::~_Vector_impl() [341]
                0.00    0.00       2/2           std::allocator<Move>::~allocator() [338]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Move, std::allocator<Move> >::~vector() [347]
[342]    0.0    0.00    0.00       2         std::_Vector_base<Move, std::allocator<Move> >::~_Vector_base() [342]
                0.00    0.00       2/14          std::_Vector_base<Move, std::allocator<Move> >::_M_deallocate(Move*, unsigned long) [248]
                0.00    0.00       2/2           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::~_Vector_impl() [341]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_base() [345]
[343]    0.0    0.00    0.00       2         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::_Vector_impl() [343]
                0.00    0.00       2/2           std::allocator<std::vector<Cell, std::allocator<Cell> > >::allocator() [339]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~_Vector_base() [346]
[344]    0.0    0.00    0.00       2         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::~_Vector_impl() [344]
                0.00    0.00       2/2           std::allocator<std::vector<Cell, std::allocator<Cell> > >::~allocator() [340]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::vector() [348]
[345]    0.0    0.00    0.00       2         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_base() [345]
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::_Vector_impl() [343]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector() [349]
[346]    0.0    0.00    0.00       2         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~_Vector_base() [346]
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::~_Vector_impl() [344]
                0.00    0.00       2/11          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [265]
-----------------------------------------------
                0.00    0.00       1/2           Board::Board(int, int, int, int, int, XColor*) [11]
                0.00    0.00       1/2           std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::~priority_queue() [376]
[347]    0.0    0.00    0.00       2         std::vector<Move, std::allocator<Move> >::~vector() [347]
                0.00    0.00       2/27          std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() [205]
                0.00    0.00       2/14          void std::_Destroy<Move*, Move>(Move*, Move*, std::allocator<Move>&) [250]
                0.00    0.00       2/2           std::_Vector_base<Move, std::allocator<Move> >::~_Vector_base() [342]
-----------------------------------------------
                0.00    0.00       2/2           Board::Board(int, int, int, int, int, XColor*) [11]
[348]    0.0    0.00    0.00       2         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::vector() [348]
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_base() [345]
-----------------------------------------------
                0.00    0.00       1/2           Board::Board(int, int, int, int, int, XColor*) [11]
                0.00    0.00       1/2           Board::~Board() [353]
[349]    0.0    0.00    0.00       2         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector() [349]
                0.00    0.00       2/20          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() [225]
                0.00    0.00       2/11          void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [267]
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~_Vector_base() [346]
-----------------------------------------------
                0.00    0.00       1/2           std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&) [369]
                0.00    0.00       1/2           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl(std::allocator<Move>&&) [368]
[350]    0.0    0.00    0.00       2         std::remove_reference<std::allocator<Move>&>::type&& std::move<std::allocator<Move>&>(std::allocator<Move>&) [350]
-----------------------------------------------
                0.00    0.00       1/2           std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [375]
                0.00    0.00       1/2           std::vector<Move, std::allocator<Move> >::vector(std::vector<Move, std::allocator<Move> >&&) [378]
[351]    0.0    0.00    0.00       2         std::remove_reference<std::vector<Move, std::allocator<Move> >&>::type&& std::move<std::vector<Move, std::allocator<Move> >&>(std::vector<Move, std::allocator<Move> >&) [351]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[352]    0.0    0.00    0.00       1         VirtualRootWindowOfScreen(Screen*) [352]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[353]    0.0    0.00    0.00       1         Board::~Board() [353]
                0.00    0.00       1/1           std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::~priority_queue() [376]
                0.00    0.00       1/2           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector() [349]
                0.00    0.00       1/1           std::vector<Faction, std::allocator<Faction> >::~vector() [380]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Move>::allocator() [363]
[354]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Move>::new_allocator() [354]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Move>::allocator(std::allocator<Move> const&) [362]
[355]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Move>::new_allocator(__gnu_cxx::new_allocator<Move> const&) [355]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Faction>::allocator() [364]
[356]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Faction>::new_allocator() [356]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Faction>::~allocator() [365]
[357]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Faction>::~new_allocator() [357]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [22]
[358]    0.0    0.00    0.00       1         __gnu_cxx::__alloc_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_S_propagate_on_copy_assign() [358]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [22]
[359]    0.0    0.00    0.00       1         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::end() const [359]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::__normal_iterator(std::vector<Cell, std::allocator<Cell> > const* const&) [337]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [22]
[360]    0.0    0.00    0.00       1         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::begin() const [360]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::__normal_iterator(std::vector<Cell, std::allocator<Cell> > const* const&) [337]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [22]
[361]    0.0    0.00    0.00       1         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::capacity() const [361]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl(std::allocator<Move>&&) [368]
[362]    0.0    0.00    0.00       1         std::allocator<Move>::allocator(std::allocator<Move> const&) [362]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Move>::new_allocator(__gnu_cxx::new_allocator<Move> const&) [355]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl() [367]
[363]    0.0    0.00    0.00       1         std::allocator<Move>::allocator() [363]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Move>::new_allocator() [354]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::_Vector_impl() [371]
[364]    0.0    0.00    0.00       1         std::allocator<Faction>::allocator() [364]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Faction>::new_allocator() [356]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::~_Vector_impl() [372]
[365]    0.0    0.00    0.00       1         std::allocator<Faction>::~allocator() [365]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Faction>::~new_allocator() [357]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&) [369]
[366]    0.0    0.00    0.00       1         std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_M_swap_data(std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl&) [366]
                0.00    0.00       3/3           std::enable_if<std::__and_<std::is_move_constructible<Move*>, std::is_move_assignable<Move*> >::value, void>::type std::swap<Move*>(Move*&, Move*&) [333]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_base() [370]
[367]    0.0    0.00    0.00       1         std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl() [367]
                0.00    0.00       1/1           std::allocator<Move>::allocator() [363]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&) [369]
[368]    0.0    0.00    0.00       1         std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl(std::allocator<Move>&&) [368]
                0.00    0.00       1/2           std::remove_reference<std::allocator<Move>&>::type&& std::move<std::allocator<Move>&>(std::allocator<Move>&) [350]
                0.00    0.00       1/1           std::allocator<Move>::allocator(std::allocator<Move> const&) [362]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Move, std::allocator<Move> >::vector(std::vector<Move, std::allocator<Move> >&&) [378]
[369]    0.0    0.00    0.00       1         std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&) [369]
                0.00    0.00       1/27          std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() [205]
                0.00    0.00       1/2           std::remove_reference<std::allocator<Move>&>::type&& std::move<std::allocator<Move>&>(std::allocator<Move>&) [350]
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl(std::allocator<Move>&&) [368]
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_M_swap_data(std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl&) [366]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Move, std::allocator<Move> >::vector() [377]
[370]    0.0    0.00    0.00       1         std::_Vector_base<Move, std::allocator<Move> >::_Vector_base() [370]
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl() [367]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_base() [373]
[371]    0.0    0.00    0.00       1         std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::_Vector_impl() [371]
                0.00    0.00       1/1           std::allocator<Faction>::allocator() [364]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::~_Vector_base() [374]
[372]    0.0    0.00    0.00       1         std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::~_Vector_impl() [372]
                0.00    0.00       1/1           std::allocator<Faction>::~allocator() [365]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Faction, std::allocator<Faction> >::vector() [379]
[373]    0.0    0.00    0.00       1         std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_base() [373]
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::_Vector_impl() [371]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Faction, std::allocator<Faction> >::~vector() [380]
[374]    0.0    0.00    0.00       1         std::_Vector_base<Faction, std::allocator<Faction> >::~_Vector_base() [374]
                0.00    0.00       1/5           std::_Vector_base<Faction, std::allocator<Faction> >::_M_deallocate(Faction*, unsigned long) [300]
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::~_Vector_impl() [372]
-----------------------------------------------
                0.00    0.00       1/1           Board::Board(int, int, int, int, int, XColor*) [11]
[375]    0.0    0.00    0.00       1         std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [375]
                0.00    0.00       1/2           std::remove_reference<std::vector<Move, std::allocator<Move> >&>::type&& std::move<std::vector<Move, std::allocator<Move> >&>(std::vector<Move, std::allocator<Move> >&) [351]
                0.00    0.00       1/1           std::vector<Move, std::allocator<Move> >::vector(std::vector<Move, std::allocator<Move> >&&) [378]
                0.00    0.00       1/15257       std::vector<Move, std::allocator<Move> >::end() [65]
                0.00    0.00       1/15257       std::vector<Move, std::allocator<Move> >::begin() [66]
                0.00    0.00       1/1           void std::make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [382]
-----------------------------------------------
                0.00    0.00       1/1           Board::~Board() [353]
[376]    0.0    0.00    0.00       1         std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::~priority_queue() [376]
                0.00    0.00       1/2           std::vector<Move, std::allocator<Move> >::~vector() [347]
-----------------------------------------------
                0.00    0.00       1/1           Board::Board(int, int, int, int, int, XColor*) [11]
[377]    0.0    0.00    0.00       1         std::vector<Move, std::allocator<Move> >::vector() [377]
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_base() [370]
-----------------------------------------------
                0.00    0.00       1/1           std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [375]
[378]    0.0    0.00    0.00       1         std::vector<Move, std::allocator<Move> >::vector(std::vector<Move, std::allocator<Move> >&&) [378]
                0.00    0.00       1/2           std::remove_reference<std::vector<Move, std::allocator<Move> >&>::type&& std::move<std::vector<Move, std::allocator<Move> >&>(std::vector<Move, std::allocator<Move> >&) [351]
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&) [369]
-----------------------------------------------
                0.00    0.00       1/1           Board::Board(int, int, int, int, int, XColor*) [11]
[379]    0.0    0.00    0.00       1         std::vector<Faction, std::allocator<Faction> >::vector() [379]
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_base() [373]
-----------------------------------------------
                0.00    0.00       1/1           Board::~Board() [353]
[380]    0.0    0.00    0.00       1         std::vector<Faction, std::allocator<Faction> >::~vector() [380]
                0.00    0.00       1/9           std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() [270]
                0.00    0.00       1/5           void std::_Destroy<Faction*, Faction>(Faction*, Faction*, std::allocator<Faction>&) [317]
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::~_Vector_base() [374]
-----------------------------------------------
                0.00    0.00       1/1           void std::make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [382]
[381]    0.0    0.00    0.00       1         void std::__make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [381]
                0.00    0.00       1/21998       __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&) [52]
-----------------------------------------------
                0.00    0.00       1/1           std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [375]
[382]    0.0    0.00    0.00       1         void std::make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [382]
                0.00    0.00       1/6742        __gnu_cxx::__ops::_Iter_comp_iter<compareMove> __gnu_cxx::__ops::__iter_comp_iter<compareMove>(compareMove) [94]
                0.00    0.00       1/1           void std::__make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [381]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2017 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [352] VirtualRootWindowOfScreen(Screen*) [360] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::begin() const [84] std::vector<Move, std::allocator<Move> >::push_back(Move&&)
  [42] compareMove::operator()(Move, Move) [361] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::capacity() const [377] std::vector<Move, std::allocator<Move> >::vector()
  [72] Cell::init(int)       [240] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size() const [378] std::vector<Move, std::allocator<Move> >::vector(std::vector<Move, std::allocator<Move> >&&)
  [45] Cell::Cell()          [223] std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [347] std::vector<Move, std::allocator<Move> >::~vector()
  [73] Cell::Cell(int, int)  [186] std::vector<int, std::allocator<int> >::_M_range_check(unsigned long) const [12] void std::vector<Faction, std::allocator<Faction> >::emplace_back<>()
  [76] Move::Move(int, int, int, int) [160] std::vector<int, std::allocator<int> >::size() const [326] void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>()
  [15] Board::init()         [192] std::vector<int, std::allocator<int> >::max_size() const [70] std::vector<Faction, std::allocator<Faction> >::at(unsigned long)
  [13] Board::step(int)      [169] std::allocator<Cell>::allocator() [379] std::vector<Faction, std::allocator<Faction> >::vector()
  [16] Board::setCell(int, int, int, int) [138] std::allocator<Cell>::allocator(std::allocator<Cell> const&) [380] std::vector<Faction, std::allocator<Faction> >::~vector()
   [2] Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&) [136] std::allocator<Cell>::~allocator() [71] std::vector<Faction, std::allocator<Faction> >::operator[](unsigned long)
  [11] Board::Board(int, int, int, int, int, XColor*) [362] std::allocator<Move>::allocator(std::allocator<Move> const&) [30] void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&)
 [353] Board::~Board()       [363] std::allocator<Move>::allocator() [27] std::vector<Cell, std::allocator<Cell> >* std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > >(unsigned long, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >)
 [118] Faction::getAccuracy() [338] std::allocator<Move>::~allocator() [3] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long)
 [119] Faction::getStrength() [364] std::allocator<Faction>::allocator() [21] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::push_back(std::vector<Cell, std::allocator<Cell> > const&)
 [291] Faction::init(int)    [365] std::allocator<Faction>::~allocator() [348] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::vector()
  [77] Faction::getSpeed()   [339] std::allocator<std::vector<Cell, std::allocator<Cell> > >::allocator() [349] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector()
 [117] Faction::getHealth()  [340] std::allocator<std::vector<Cell, std::allocator<Cell> > >::~allocator() [22] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&)
 [124] __gnu_cxx::new_allocator<Cell>::deallocate(Cell*, unsigned long) [297] std::allocator<int>::allocator() [7] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator[](unsigned long)
 [125] __gnu_cxx::new_allocator<Cell>::allocate(unsigned long, void const*) [298] std::allocator<int>::~allocator() [203] void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&)
  [74] void __gnu_cxx::new_allocator<Cell>::construct<Cell, Cell const&>(Cell*, Cell const&) [321] Faction* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Faction>(Faction const*, Faction const*, Faction*) [230] void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&)
 [137] __gnu_cxx::new_allocator<Cell>::new_allocator(__gnu_cxx::new_allocator<Cell> const&) [224] int* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) [187] std::vector<int, std::allocator<int> >::at(unsigned long)
 [166] __gnu_cxx::new_allocator<Cell>::new_allocator() [264] void std::_Destroy_aux<false>::__destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [306] std::vector<int, std::allocator<int> >::end()
 [135] __gnu_cxx::new_allocator<Cell>::~new_allocator() [120] void std::_Destroy_aux<true>::__destroy<Cell*>(Cell*, Cell*) [307] std::vector<int, std::allocator<int> >::begin()
 [251] __gnu_cxx::new_allocator<Move>::deallocate(Move*, unsigned long) [247] void std::_Destroy_aux<true>::__destroy<Move*>(Move*, Move*) [204] std::vector<int, std::allocator<int> >::push_back(int&&)
  [95] void __gnu_cxx::new_allocator<Move>::destroy<Move>(Move*) [299] void std::_Destroy_aux<true>::__destroy<Faction*>(Faction*, Faction*) [308] std::vector<int, std::allocator<int> >::vector()
 [252] __gnu_cxx::new_allocator<Move>::allocate(unsigned long, void const*) [210] void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [309] std::vector<int, std::allocator<int> >::~vector()
  [78] void __gnu_cxx::new_allocator<Move>::construct<Move, Move>(Move*, Move&&) [126] std::_Vector_base<Cell, std::allocator<Cell> >::_M_allocate(unsigned long) [188] std::vector<int, std::allocator<int> >::operator[](unsigned long)
 [354] __gnu_cxx::new_allocator<Move>::new_allocator() [174] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_M_swap_data(std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl&) [56] void std::_Construct<Cell, Cell const&>(Cell*, Cell const&)
 [355] __gnu_cxx::new_allocator<Move>::new_allocator(__gnu_cxx::new_allocator<Move> const&) [152] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell> const&) [61] void std::_Construct<Cell, Cell>(Cell*, Cell&&)
 [334] __gnu_cxx::new_allocator<Move>::~new_allocator() [170] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl() [115] void std::_Construct<Move, Move>(Move*, Move&&)
 [318] __gnu_cxx::new_allocator<Faction>::deallocate(Faction*, unsigned long) [175] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell>&&) [25] void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&)
 [319] __gnu_cxx::new_allocator<Faction>::allocate(unsigned long, void const*) [141] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::~_Vector_impl() [179] void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >&&)
 [292] void __gnu_cxx::new_allocator<Faction>::construct<Faction>(Faction*) [121] std::_Vector_base<Cell, std::allocator<Cell> >::_M_deallocate(Cell*, unsigned long) [100] void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>)
 [356] __gnu_cxx::new_allocator<Faction>::new_allocator() [153] std::_Vector_base<Cell, std::allocator<Cell> >::_M_create_storage(unsigned long) [49] Cell* std::__addressof<Cell>(Cell&)
 [357] __gnu_cxx::new_allocator<Faction>::~new_allocator() [105] std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() [116] Move* std::__addressof<Move>(Move&)
 [268] __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [176] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&) [139] std::vector<Cell, std::allocator<Cell> >* std::__addressof<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >&)
 [269] __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::allocate(unsigned long, void const*) [154] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(unsigned long, std::allocator<Cell> const&) [381] void std::__make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>)
  [23] void __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [171] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base() [68] void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>)
 [335] __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::new_allocator() [142] std::_Vector_base<Cell, std::allocator<Cell> >::~_Vector_base() [237] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__miter_base<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
 [336] __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::~new_allocator() [255] std::_Vector_base<Move, std::allocator<Move> >::_M_allocate(unsigned long) [285] decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Faction*>(std::move_iterator<Faction*>)
 [221] __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [366] std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_M_swap_data(std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl&) [286] Faction* std::__miter_base<Faction*>(Faction*)
 [222] __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [367] std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl() [195] decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>)
 [201] void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [368] std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl(std::allocator<Move>&&) [196] int* std::__miter_base<int*>(int*)
 [293] __gnu_cxx::new_allocator<int>::new_allocator() [341] std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::~_Vector_impl() [260] Faction* std::__niter_base<Faction*>(Faction*)
 [294] __gnu_cxx::new_allocator<int>::~new_allocator() [248] std::_Vector_base<Move, std::allocator<Move> >::_M_deallocate(Move*, unsigned long) [185] int* std::__niter_base<int*>(int*)
 [149] __gnu_cxx::__alloc_traits<std::allocator<Cell> >::_S_select_on_copy(std::allocator<Cell> const&) [205] std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() [206] int* std::__niter_base<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
 [358] __gnu_cxx::__alloc_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_S_propagate_on_copy_assign() [369] std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&) [101] void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>)
  [38] __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move* const&) [370] std::_Vector_base<Move, std::allocator<Move> >::_Vector_base() [327] Faction* std::__copy_move_a<true, Faction*, Faction*>(Faction*, Faction*, Faction*)
  [96] __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator--() [342] std::_Vector_base<Move, std::allocator<Move> >::~_Vector_base() [231] int* std::__copy_move_a<true, int*, int*>(int*, int*, int*)
 [140] __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::__normal_iterator(Cell const* const&) [322] std::_Vector_base<Faction, std::allocator<Faction> >::_M_allocate(unsigned long) [275] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::move_backward<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  [54] __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator++() [371] std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::_Vector_impl() [328] Faction* std::__copy_move_a2<true, Faction*, Faction*>(Faction*, Faction*, Faction*)
  [87] __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move const* const&) [372] std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::~_Vector_impl() [232] int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*)
 [337] __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::__normal_iterator(std::vector<Cell, std::allocator<Cell> > const* const&) [300] std::_Vector_base<Faction, std::allocator<Faction> >::_M_deallocate(Faction*, unsigned long) [310] void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter)
 [167] __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator++() [270] std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() [311] void std::__introsort_loop<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter)
 [200] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [373] std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_base() [157] Cell* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*)
 [219] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator--() [374] std::_Vector_base<Faction, std::allocator<Faction> >::~_Vector_base() [28] std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*)
 [207] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator++() [271] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate(unsigned long) [132] Cell* std::uninitialized_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*)
  [67] __gnu_cxx::__ops::_Iter_comp_val<compareMove>::_Iter_comp_val(compareMove) [343] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::_Vector_impl() [261] Move* std::uninitialized_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*)
  [64] bool __gnu_cxx::__ops::_Iter_comp_val<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move&) [344] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::~_Vector_impl() [329] Faction* std::uninitialized_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*)
  [93] __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::_Iter_comp_iter(compareMove) [265] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [287] std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*)
  [43] bool __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >) [225] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() [233] int* std::uninitialized_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)
  [97] __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(__gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [345] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_base() [276] int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*)
  [79] __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(compareMove) [346] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~_Vector_base() [312] void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter)
 [238] __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter) [226] std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [158] Cell* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, Cell>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, std::allocator<Cell>&)
  [94] __gnu_cxx::__ops::_Iter_comp_iter<compareMove> __gnu_cxx::__ops::__iter_comp_iter<compareMove>(compareMove) [301] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [29] std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
 [295] __gnu_cxx::__ops::__iter_less_iter() [302] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [133] Cell* std::__uninitialized_copy_a<std::move_iterator<Cell*>, Cell*, Cell>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*, std::allocator<Cell>&)
 [296] bool __gnu_cxx::operator==<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [211] std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [262] Move* std::__uninitialized_copy_a<std::move_iterator<Move*>, Move*, Move>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*, std::allocator<Move>&)
  [52] __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&) [189] std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [330] Faction* std::__uninitialized_copy_a<std::move_iterator<Faction*>, Faction*, Faction>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*, std::allocator<Faction>&)
 [245] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [303] std::_Vector_base<int, std::allocator<int> >::_Vector_base() [288] std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
  [53] bool __gnu_cxx::operator!=<Cell const*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&) [304] std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [234] int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&)
 [165] bool __gnu_cxx::operator!=<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&) [110] std::move_iterator<Cell*>::move_iterator(Cell*) [277] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
 [199] bool __gnu_cxx::operator!=<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [60] std::move_iterator<Cell*>::operator++() [243] void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter)
 [104] __gnu_cxx::new_allocator<Cell>::max_size() const [216] std::move_iterator<Move*>::move_iterator(Move*) [112] std::move_iterator<Cell*> std::__make_move_if_noexcept_iterator<Cell, std::move_iterator<Cell*> >(Cell*)
 [198] __gnu_cxx::new_allocator<Move>::max_size() const [114] std::move_iterator<Move*>::operator++() [218] std::move_iterator<Move*> std::__make_move_if_noexcept_iterator<Move, std::move_iterator<Move*> >(Move*)
 [253] __gnu_cxx::new_allocator<Faction>::max_size() const [282] std::move_iterator<Faction*>::move_iterator(Faction*) [289] std::move_iterator<Faction*> std::__make_move_if_noexcept_iterator<Faction, std::move_iterator<Faction*> >(Faction*)
 [208] __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::max_size() const [241] std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::move_iterator(std::vector<Cell, std::allocator<Cell> >*) [244] std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> std::__make_move_if_noexcept_iterator<std::vector<Cell, std::allocator<Cell> >, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> >(std::vector<Cell, std::allocator<Cell> >*)
 [184] __gnu_cxx::new_allocator<int>::max_size() const [177] std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator++() [197] std::move_iterator<int*> std::__make_move_if_noexcept_iterator<int, std::move_iterator<int*> >(int*)
  [46] __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::base() const [193] std::move_iterator<int*>::move_iterator(int*) [134] Cell* std::__uninitialized_move_if_noexcept_a<Cell*, Cell*, std::allocator<Cell> >(Cell*, Cell*, Cell*, std::allocator<Cell>&)
  [39] __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [14] std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop() [263] Move* std::__uninitialized_move_if_noexcept_a<Move*, Move*, std::allocator<Move> >(Move*, Move*, Move*, std::allocator<Move>&)
  [80] __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator-(long) const [81] std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [331] Faction* std::__uninitialized_move_if_noexcept_a<Faction*, Faction*, std::allocator<Faction> >(Faction*, Faction*, Faction*, std::allocator<Faction>&)
  [40] __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator+(long) const [375] std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [290] std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_move_if_noexcept_a<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
  [48] __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::base() const [376] std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::~priority_queue() [235] int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
  [55] __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator*() const [127] std::allocator_traits<std::allocator<Cell> >::deallocate(std::allocator<Cell>&, Cell*, unsigned long) [130] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  [88] __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::operator*() const [155] std::allocator_traits<std::allocator<Cell> >::select_on_container_copy_construction(std::allocator<Cell> const&) [313] std::__lg(long)
 [148] __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::base() const [128] std::allocator_traits<std::allocator<Cell> >::allocate(std::allocator<Cell>&, unsigned long) [332] Faction* std::copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*)
 [168] __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator*() const [111] std::allocator_traits<std::allocator<Cell> >::max_size(std::allocator<Cell> const&) [236] int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)
 [161] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [75] void std::allocator_traits<std::allocator<Cell> >::construct<Cell, Cell const&>(std::allocator<Cell>&, Cell*, Cell const&) [41] std::remove_reference<Move&>::type&& std::move<Move&>(Move&)
 [164] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [256] std::allocator_traits<std::allocator<Move> >::deallocate(std::allocator<Move>&, Move*, unsigned long) [129] std::remove_reference<Cell*&>::type&& std::move<Cell*&>(Cell*&)
 [246] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator+(long) const [98] void std::allocator_traits<std::allocator<Move> >::destroy<Move>(std::allocator<Move>&, Move*) [278] std::remove_reference<Move*&>::type&& std::move<Move*&>(Move*&)
 [220] bool __gnu_cxx::__ops::_Val_less_iter::operator()<int, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(int&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [257] std::allocator_traits<std::allocator<Move> >::allocate(std::allocator<Move>&, unsigned long) [159] std::remove_reference<std::allocator<Cell>&>::type&& std::move<std::allocator<Cell>&>(std::allocator<Cell>&)
 [209] bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [217] std::allocator_traits<std::allocator<Move> >::max_size(std::allocator<Move> const&) [350] std::remove_reference<std::allocator<Move>&>::type&& std::move<std::allocator<Move>&>(std::allocator<Move>&)
 [106] std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() const [82] void std::allocator_traits<std::allocator<Move> >::construct<Move, Move>(std::allocator<Move>&, Move*, Move&&) [180] std::remove_reference<std::vector<Cell, std::allocator<Cell> >&>::type&& std::move<std::vector<Cell, std::allocator<Cell> >&>(std::vector<Cell, std::allocator<Cell> >&)
 [214] std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() const [323] std::allocator_traits<std::allocator<Faction> >::deallocate(std::allocator<Faction>&, Faction*, unsigned long) [351] std::remove_reference<std::vector<Move, std::allocator<Move> >&>::type&& std::move<std::vector<Move, std::allocator<Move> >&>(std::vector<Move, std::allocator<Move> >&)
 [279] std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() const [324] std::allocator_traits<std::allocator<Faction> >::allocate(std::allocator<Faction>&, unsigned long) [183] std::remove_reference<int&>::type&& std::move<int&>(int&)
 [239] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() const [283] std::allocator_traits<std::allocator<Faction> >::max_size(std::allocator<Faction> const&) [314] void std::sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
 [190] std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [305] void std::allocator_traits<std::allocator<Faction> >::construct<Faction>(std::allocator<Faction>&, Faction*) [146] std::enable_if<std::__and_<std::is_move_constructible<Cell*>, std::is_move_assignable<Cell*> >::value, void>::type std::swap<Cell*>(Cell*&, Cell*&)
  [50] std::move_iterator<Cell*>::base() const [272] std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::deallocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, unsigned long) [333] std::enable_if<std::__and_<std::is_move_constructible<Move*>, std::is_move_assignable<Move*> >::value, void>::type std::swap<Move*>(Move*&, Move*&)
  [59] std::move_iterator<Cell*>::operator*() const [273] std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::allocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, unsigned long) [315] void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter)
 [103] std::move_iterator<Move*>::base() const [242] std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size(std::allocator<std::vector<Cell, std::allocator<Cell> > > const&) [62] Cell&& std::forward<Cell>(std::remove_reference<Cell>::type&)
 [113] std::move_iterator<Move*>::operator*() const [24] void std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [51] Move&& std::forward<Move>(std::remove_reference<Move>::type&)
 [280] std::move_iterator<Faction*>::base() const [227] std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [47] Cell const& std::forward<Cell const&>(std::remove_reference<Cell const&>::type&)
 [147] std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::base() const [228] std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [144] std::vector<Cell, std::allocator<Cell> > const& std::forward<std::vector<Cell, std::allocator<Cell> > const&>(std::remove_reference<std::vector<Cell, std::allocator<Cell> > const&>::type&)
 [173] std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator*() const [194] std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [181] std::vector<Cell, std::allocator<Cell> >&& std::forward<std::vector<Cell, std::allocator<Cell> > >(std::remove_reference<std::vector<Cell, std::allocator<Cell> > >::type&)
 [191] std::move_iterator<int*>::base() const [202] void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [182] int&& std::forward<int>(std::remove_reference<int>::type&)
  [89] std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::top() const [274] int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*) [122] void std::_Destroy<Cell*>(Cell*, Cell*)
  [90] std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::size() const [156] Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [123] void std::_Destroy<Cell*, Cell>(Cell*, Cell*, std::allocator<Cell>&)
  [19] std::vector<Cell, std::allocator<Cell> >::_M_check_len(unsigned long, char const*) const [26] std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [249] void std::_Destroy<Move*>(Move*, Move*)
   [6] std::vector<Cell, std::allocator<Cell> >::_M_range_check(unsigned long) const [131] Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [250] void std::_Destroy<Move*, Move>(Move*, Move*, std::allocator<Move>&)
 [150] std::vector<Cell, std::allocator<Cell> >::end() const [258] Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [316] void std::_Destroy<Faction*>(Faction*, Faction*)
  [10] std::vector<Cell, std::allocator<Cell> >::size() const [284] std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [317] void std::_Destroy<Faction*, Faction>(Faction*, Faction*, std::allocator<Faction>&)
 [151] std::vector<Cell, std::allocator<Cell> >::begin() const [325] Faction* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [266] void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*)
 [109] std::vector<Cell, std::allocator<Cell> >::max_size() const [229] int* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [267] void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
 [254] std::vector<Move, std::allocator<Move> >::_M_check_len(unsigned long, char const*) const [18] void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [212] void std::_Destroy<int*>(int*, int*)
  [86] std::vector<Move, std::allocator<Move> >::size() const [4] std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [213] void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
  [91] std::vector<Move, std::allocator<Move> >::begin() const [17] std::vector<Cell, std::allocator<Cell> >::push_back(Cell const&) [145] void std::_Destroy<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*)
  [92] std::vector<Move, std::allocator<Move> >::front() const [20] std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [102] void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove)
 [215] std::vector<Move, std::allocator<Move> >::max_size() const [172] std::vector<Cell, std::allocator<Cell> >::vector() [382] void std::make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove)
 [320] std::vector<Faction, std::allocator<Faction> >::_M_check_len(unsigned long, char const*) const [178] std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> >&&) [85] void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove)
  [69] std::vector<Faction, std::allocator<Faction> >::_M_range_check(unsigned long) const [143] std::vector<Cell, std::allocator<Cell> >::~vector() [57] bool std::operator==<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&)
  [63] std::vector<Faction, std::allocator<Faction> >::size() const [9] std::vector<Cell, std::allocator<Cell> >::operator[](unsigned long) [107] bool std::operator==<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&)
 [281] std::vector<Faction, std::allocator<Faction> >::max_size() const [83] void std::vector<Move, std::allocator<Move> >::emplace_back<Move>(Move&&) [162] bool std::operator==<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&)
  [31] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_check_len(unsigned long, char const*) const [259] void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [58] bool std::operator!=<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&)
   [5] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_range_check(unsigned long) const [65] std::vector<Move, std::allocator<Move> >::end() [108] bool std::operator!=<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&)
 [359] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::end() const [66] std::vector<Move, std::allocator<Move> >::begin() [163] bool std::operator!=<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&)
   [8] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const [99] std::vector<Move, std::allocator<Move> >::pop_back() [44] operator new(unsigned long, void*)
