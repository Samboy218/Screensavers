Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  us/call  us/call  name    
 41.18      0.07     0.07  4704588     0.01     0.01  __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator+(long) const
 17.65      0.10     0.03  2603898     0.01     0.01  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const
  5.88      0.11     0.01  2311557     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::size() const
  5.88      0.12     0.01  2309189     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator[](unsigned long)
  5.88      0.13     0.01  2009591     0.00     0.01  std::vector<Cell, std::allocator<Cell> >::at(unsigned long)
  5.88      0.14     0.01   209852     0.05     0.05  std::vector<Move, std::allocator<Move> >::begin()
  5.88      0.15     0.01   106223     0.09     0.09  Faction::getSpeed()
  5.88      0.16     0.01   103628     0.10     0.10  void __gnu_cxx::new_allocator<Move>::destroy<Move>(Move*)
  5.88      0.17     0.01   103628     0.10     0.74  void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>)
  0.00      0.17     0.00  5230515     0.00     0.00  __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move* const&)
  0.00      0.17     0.00  5121695     0.00     0.00  __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const
  0.00      0.17     0.00  2309189     0.00     0.01  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_range_check(unsigned long) const
  0.00      0.17     0.00  2309189     0.00     0.02  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long)
  0.00      0.17     0.00  2120737     0.00     0.00  std::remove_reference<Move&>::type&& std::move<Move&>(Move&)
  0.00      0.17     0.00  2009591     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::_M_range_check(unsigned long) const
  0.00      0.17     0.00  2009591     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::operator[](unsigned long)
  0.00      0.17     0.00  1281277     0.00     0.00  compareMove::operator()(Move, Move)
  0.00      0.17     0.00  1070496     0.00     0.00  bool __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >)
  0.00      0.17     0.00   798928     0.00     0.00  Cell::Cell()
  0.00      0.17     0.00   626960     0.00     0.00  __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::base() const
  0.00      0.17     0.00   322777     0.00     0.00  Move&& std::forward<Move>(std::remove_reference<Move>::type&)
  0.00      0.17     0.00   313480     0.00     0.00  __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&)
  0.00      0.17     0.00   210781     0.00     0.00  bool __gnu_cxx::__ops::_Iter_comp_val<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move&)
  0.00      0.17     0.00   209852     0.00     0.00  std::vector<Move, std::allocator<Move> >::end()
  0.00      0.17     0.00   209851     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_val<compareMove>::_Iter_comp_val(compareMove)
  0.00      0.17     0.00   209851     0.00     0.03  void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>)
  0.00      0.17     0.00   203762     0.00     0.00  __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move const* const&)
  0.00      0.17     0.00   203762     0.00     0.00  __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::operator*() const
  0.00      0.17     0.00   203762     0.00     0.00  std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::top() const
  0.00      0.17     0.00   203762     0.00     0.00  std::vector<Move, std::allocator<Move> >::begin() const
  0.00      0.17     0.00   203762     0.00     0.00  std::vector<Move, std::allocator<Move> >::front() const
  0.00      0.17     0.00   167383     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::size() const
  0.00      0.17     0.00   160997     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::_M_range_check(unsigned long) const
  0.00      0.17     0.00   160997     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::at(unsigned long)
  0.00      0.17     0.00   160997     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::operator[](unsigned long)
  0.00      0.17     0.00   122270     0.00     0.00  operator new(unsigned long, void*)
  0.00      0.17     0.00   106223     0.00     0.00  Move::Move(int, int, int, int)
  0.00      0.17     0.00   106223     0.00     0.00  void __gnu_cxx::new_allocator<Move>::construct<Move, Move>(Move*, Move&&)
  0.00      0.17     0.00   106223     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(compareMove)
  0.00      0.17     0.00   106223     0.00     0.00  __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator-(long) const
  0.00      0.17     0.00   106223     0.00     0.08  std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&)
  0.00      0.17     0.00   106223     0.00     0.00  void std::allocator_traits<std::allocator<Move> >::construct<Move, Move>(std::allocator<Move>&, Move*, Move&&)
  0.00      0.17     0.00   106223     0.00     0.00  void std::vector<Move, std::allocator<Move> >::emplace_back<Move>(Move&&)
  0.00      0.17     0.00   106223     0.00     0.00  std::vector<Move, std::allocator<Move> >::push_back(Move&&)
  0.00      0.17     0.00   106223     0.00     0.03  void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove)
  0.00      0.17     0.00   103629     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::_Iter_comp_iter(compareMove)
  0.00      0.17     0.00   103629     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<compareMove> __gnu_cxx::__ops::__iter_comp_iter<compareMove>(compareMove)
  0.00      0.17     0.00   103628     0.00     0.00  __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator--()
  0.00      0.17     0.00   103628     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(__gnu_cxx::__ops::_Iter_comp_iter<compareMove>)
  0.00      0.17     0.00   103628     0.00     0.89  std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop()
  0.00      0.17     0.00   103628     0.00     0.10  void std::allocator_traits<std::allocator<Move> >::destroy<Move>(std::allocator<Move>&, Move*)
  0.00      0.17     0.00   103628     0.00     0.10  std::vector<Move, std::allocator<Move> >::pop_back()
  0.00      0.17     0.00   103628     0.00     0.74  void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>)
  0.00      0.17     0.00   103628     0.00     0.74  void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove)
  0.00      0.17     0.00   100065     0.00     0.00  std::vector<Move, std::allocator<Move> >::size() const
  0.00      0.17     0.00   100000     0.00     1.48  Board::step(int)
  0.00      0.17     0.00   100000     0.00     0.22  Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&, int, int)
  0.00      0.17     0.00   100000     0.00     0.00  std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::size() const
  0.00      0.17     0.00    16983     0.00     0.00  Faction::getAccuracy()
  0.00      0.17     0.00    16983     0.00     0.00  Faction::getStrength()
  0.00      0.17     0.00    14444     0.00     0.00  Faction::getArmor()
  0.00      0.17     0.00    10688     0.00     0.00  Cell const& std::forward<Cell const&>(std::remove_reference<Cell const&>::type&)
  0.00      0.17     0.00    10496     0.00     0.00  __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::base() const
  0.00      0.17     0.00     9152     0.00     0.00  Cell* std::__addressof<Cell>(Cell&)
  0.00      0.17     0.00     8960     0.00     0.00  std::move_iterator<Cell*>::base() const
  0.00      0.17     0.00     8917     0.00     0.00  Cell::init(int)
  0.00      0.17     0.00     8216     0.00     0.00  std::move_iterator<Move*>::base() const
  0.00      0.17     0.00     6357     0.00     0.25  Board::setCell(int, int, int, int)
  0.00      0.17     0.00     6357     0.00     0.00  Faction::getHealth()
  0.00      0.17     0.00     5248     0.00     0.00  bool __gnu_cxx::operator!=<Cell const*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&)
  0.00      0.17     0.00     5120     0.00     0.00  __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator++()
  0.00      0.17     0.00     5120     0.00     0.00  __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator*() const
  0.00      0.17     0.00     5120     0.00     0.00  void std::_Construct<Cell, Cell const&>(Cell*, Cell const&)
  0.00      0.17     0.00     4480     0.00     0.00  bool std::operator==<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&)
  0.00      0.17     0.00     4480     0.00     0.00  bool std::operator!=<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&)
  0.00      0.17     0.00     4108     0.00     0.00  bool std::operator==<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&)
  0.00      0.17     0.00     4108     0.00     0.00  bool std::operator!=<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&)
  0.00      0.17     0.00     4095     0.00     0.00  std::move_iterator<Move*>::operator*() const
  0.00      0.17     0.00     4095     0.00     0.00  std::move_iterator<Move*>::operator++()
  0.00      0.17     0.00     4095     0.00     0.00  void std::_Construct<Move, Move>(Move*, Move&&)
  0.00      0.17     0.00     4095     0.00     0.00  Move* std::__addressof<Move>(Move&)
  0.00      0.17     0.00     4032     0.00     0.00  std::move_iterator<Cell*>::operator*() const
  0.00      0.17     0.00     4032     0.00     0.00  std::move_iterator<Cell*>::operator++()
  0.00      0.17     0.00     4032     0.00     0.00  void std::_Construct<Cell, Cell>(Cell*, Cell&&)
  0.00      0.17     0.00     4032     0.00     0.00  Cell&& std::forward<Cell>(std::remove_reference<Cell>::type&)
  0.00      0.17     0.00     2560     0.00     0.00  Cell::Cell(int, int)
  0.00      0.17     0.00     2560     0.00     0.00  void __gnu_cxx::new_allocator<Cell>::construct<Cell, Cell const&>(Cell*, Cell const&)
  0.00      0.17     0.00     2560     0.00     0.00  void std::allocator_traits<std::allocator<Cell> >::construct<Cell, Cell const&>(std::allocator<Cell>&, Cell*, Cell const&)
  0.00      0.17     0.00     2560     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::push_back(Cell const&)
  0.00      0.17     0.00     1472     0.00     0.00  __gnu_cxx::new_allocator<Cell>::max_size() const
  0.00      0.17     0.00     1342     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator()
  0.00      0.17     0.00     1024     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() const
  0.00      0.17     0.00      896     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::max_size() const
  0.00      0.17     0.00      896     0.00     0.00  std::move_iterator<Cell*>::move_iterator(Cell*)
  0.00      0.17     0.00      896     0.00     0.00  std::allocator_traits<std::allocator<Cell> >::max_size(std::allocator<Cell> const&)
  0.00      0.17     0.00      896     0.00     0.00  std::move_iterator<Cell*> std::__make_move_if_noexcept_iterator<Cell, std::move_iterator<Cell*> >(Cell*)
  0.00      0.17     0.00      703     0.00     0.00  void std::_Destroy_aux<true>::__destroy<Cell*>(Cell*, Cell*)
  0.00      0.17     0.00      703     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_M_deallocate(Cell*, unsigned long)
  0.00      0.17     0.00      703     0.00     0.00  void std::_Destroy<Cell*>(Cell*, Cell*)
  0.00      0.17     0.00      703     0.00     0.00  void std::_Destroy<Cell*, Cell>(Cell*, Cell*, std::allocator<Cell>&)
  0.00      0.17     0.00      576     0.00     0.00  __gnu_cxx::new_allocator<Cell>::deallocate(Cell*, unsigned long)
  0.00      0.17     0.00      576     0.00     0.00  __gnu_cxx::new_allocator<Cell>::allocate(unsigned long, void const*)
  0.00      0.17     0.00      576     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_M_allocate(unsigned long)
  0.00      0.17     0.00      576     0.00     0.00  std::allocator_traits<std::allocator<Cell> >::deallocate(std::allocator<Cell>&, Cell*, unsigned long)
  0.00      0.17     0.00      576     0.00     0.00  std::allocator_traits<std::allocator<Cell> >::allocate(std::allocator<Cell>&, unsigned long)
  0.00      0.17     0.00      567     0.00     0.00  std::remove_reference<Cell*&>::type&& std::move<Cell*&>(Cell*&)
  0.00      0.17     0.00      500     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      0.17     0.00      448     0.00     0.02  std::vector<Cell, std::allocator<Cell> >::_M_check_len(unsigned long, char const*) const
  0.00      0.17     0.00      448     0.00     0.00  Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*)
  0.00      0.17     0.00      448     0.00     0.02  void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&)
  0.00      0.17     0.00      448     0.00     0.00  Cell* std::uninitialized_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*)
  0.00      0.17     0.00      448     0.00     0.00  Cell* std::__uninitialized_copy_a<std::move_iterator<Cell*>, Cell*, Cell>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*, std::allocator<Cell>&)
  0.00      0.17     0.00      448     0.00     0.00  Cell* std::__uninitialized_move_if_noexcept_a<Cell*, Cell*, std::allocator<Cell> >(Cell*, Cell*, Cell*, std::allocator<Cell>&)
  0.00      0.17     0.00      383     0.00     0.00  __gnu_cxx::new_allocator<Cell>::~new_allocator()
  0.00      0.17     0.00      383     0.00     0.00  std::allocator<Cell>::~allocator()
  0.00      0.17     0.00      319     0.00     0.00  __gnu_cxx::new_allocator<Cell>::new_allocator(__gnu_cxx::new_allocator<Cell> const&)
  0.00      0.17     0.00      319     0.00     0.00  std::allocator<Cell>::allocator(std::allocator<Cell> const&)
  0.00      0.17     0.00      318     0.00     0.00  std::vector<Cell, std::allocator<Cell> >* std::__addressof<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >&)
  0.00      0.17     0.00      256     0.00     0.00  __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::__normal_iterator(Cell const* const&)
  0.00      0.17     0.00      255     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::~_Vector_impl()
  0.00      0.17     0.00      255     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::~_Vector_base()
  0.00      0.17     0.00      255     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::~vector()
  0.00      0.17     0.00      252     0.00     0.00  std::vector<int, std::allocator<int> >::size() const
  0.00      0.17     0.00      199     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
  0.00      0.17     0.00      199     0.00     0.00  std::vector<Cell, std::allocator<Cell> > const& std::forward<std::vector<Cell, std::allocator<Cell> > const&>(std::remove_reference<std::vector<Cell, std::allocator<Cell> > const&>::type&)
  0.00      0.17     0.00      191     0.00     0.00  void std::_Destroy<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*)
  0.00      0.17     0.00      189     0.00     0.00  std::enable_if<std::__and_<std::is_move_constructible<Cell*>, std::is_move_assignable<Cell*> >::value, void>::type std::swap<Cell*>(Cell*&, Cell*&)
  0.00      0.17     0.00      181     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const
  0.00      0.17     0.00      154     0.00     0.00  int&& std::forward<int>(std::remove_reference<int>::type&)
  0.00      0.17     0.00      140     0.00     0.00  std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::base() const
  0.00      0.17     0.00      130     0.00     0.00  __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::base() const
  0.00      0.17     0.00      128     0.00     0.00  __gnu_cxx::__alloc_traits<std::allocator<Cell> >::_S_select_on_copy(std::allocator<Cell> const&)
  0.00      0.17     0.00      128     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::end() const
  0.00      0.17     0.00      128     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::begin() const
  0.00      0.17     0.00      128     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell> const&)
  0.00      0.17     0.00      128     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_M_create_storage(unsigned long)
  0.00      0.17     0.00      128     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(unsigned long, std::allocator<Cell> const&)
  0.00      0.17     0.00      128     0.00     0.00  std::allocator_traits<std::allocator<Cell> >::select_on_container_copy_construction(std::allocator<Cell> const&)
  0.00      0.17     0.00      128     0.00     0.00  Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*)
  0.00      0.17     0.00      128     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&)
  0.00      0.17     0.00      128     0.00     0.00  Cell* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*)
  0.00      0.17     0.00      128     0.00     0.00  Cell* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, Cell>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, std::allocator<Cell>&)
  0.00      0.17     0.00      126     0.00     0.00  std::remove_reference<std::allocator<Cell>&>::type&& std::move<std::allocator<Cell>&>(std::allocator<Cell>&)
  0.00      0.17     0.00      119     0.00     0.00  std::remove_reference<int&>::type&& std::move<int&>(int&)
  0.00      0.17     0.00       84     0.00     0.00  __gnu_cxx::new_allocator<int>::max_size() const
  0.00      0.17     0.00       84     0.00     0.00  int* std::__niter_base<int*>(int*)
  0.00      0.17     0.00       70     0.00     0.00  std::vector<int, std::allocator<int> >::_M_range_check(unsigned long) const
  0.00      0.17     0.00       70     0.00     0.00  std::vector<int, std::allocator<int> >::at(unsigned long)
  0.00      0.17     0.00       70     0.00     0.00  std::vector<int, std::allocator<int> >::operator[](unsigned long)
  0.00      0.17     0.00       70     0.00     0.00  bool std::operator==<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&)
  0.00      0.17     0.00       70     0.00     0.00  bool std::operator!=<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&)
  0.00      0.17     0.00       65     0.00     0.00  bool __gnu_cxx::operator!=<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&)
  0.00      0.17     0.00       64     0.00     0.00  __gnu_cxx::new_allocator<Cell>::new_allocator()
  0.00      0.17     0.00       64     0.00     0.00  void __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&)
  0.00      0.17     0.00       64     0.00     0.00  __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator++()
  0.00      0.17     0.00       64     0.00     0.00  __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator*() const
  0.00      0.17     0.00       64     0.00     0.00  std::allocator<Cell>::allocator()
  0.00      0.17     0.00       64     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl()
  0.00      0.17     0.00       64     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base()
  0.00      0.17     0.00       64     0.00     0.00  void std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&)
  0.00      0.17     0.00       64     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::vector()
  0.00      0.17     0.00       64     0.00     0.01  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::push_back(std::vector<Cell, std::allocator<Cell> > const&)
  0.00      0.17     0.00       64     0.00     0.00  void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&)
  0.00      0.17     0.00       63     0.00     0.00  std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator*() const
  0.00      0.17     0.00       63     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_M_swap_data(std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl&)
  0.00      0.17     0.00       63     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell>&&)
  0.00      0.17     0.00       63     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&)
  0.00      0.17     0.00       63     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
  0.00      0.17     0.00       63     0.00     0.00  std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator++()
  0.00      0.17     0.00       63     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> >&&)
  0.00      0.17     0.00       63     0.00     0.00  void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >&&)
  0.00      0.17     0.00       63     0.00     0.00  std::remove_reference<std::vector<Cell, std::allocator<Cell> >&>::type&& std::move<std::vector<Cell, std::allocator<Cell> >&>(std::vector<Cell, std::allocator<Cell> >&)
  0.00      0.17     0.00       63     0.00     0.00  std::vector<Cell, std::allocator<Cell> >&& std::forward<std::vector<Cell, std::allocator<Cell> > >(std::remove_reference<std::vector<Cell, std::allocator<Cell> > >::type&)
  0.00      0.17     0.00       56     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
  0.00      0.17     0.00       56     0.00     0.00  std::move_iterator<int*>::base() const
  0.00      0.17     0.00       56     0.00     0.00  std::vector<int, std::allocator<int> >::max_size() const
  0.00      0.17     0.00       56     0.00     0.00  std::move_iterator<int*>::move_iterator(int*)
  0.00      0.17     0.00       56     0.00     0.00  std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
  0.00      0.17     0.00       56     0.00     0.00  decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>)
  0.00      0.17     0.00       56     0.00     0.00  int* std::__miter_base<int*>(int*)
  0.00      0.17     0.00       56     0.00     0.00  std::move_iterator<int*> std::__make_move_if_noexcept_iterator<int, std::move_iterator<int*> >(int*)
  0.00      0.17     0.00       51     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
  0.00      0.17     0.00       49     0.00     0.00  bool __gnu_cxx::operator!=<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
  0.00      0.17     0.00       45     0.00     0.00  int* std::__niter_base<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  0.00      0.17     0.00       42     0.00     0.00  void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&)
  0.00      0.17     0.00       42     0.00     0.00  void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&)
  0.00      0.17     0.00       42     0.00     0.00  void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&)
  0.00      0.17     0.00       42     0.00     0.00  std::vector<int, std::allocator<int> >::push_back(int&&)
  0.00      0.17     0.00       39     0.00     0.00  __gnu_cxx::new_allocator<Move>::max_size() const
  0.00      0.17     0.00       35     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator++()
  0.00      0.17     0.00       35     0.00     0.00  bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const
  0.00      0.17     0.00       35     0.00     0.00  void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
  0.00      0.17     0.00       35     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
  0.00      0.17     0.00       35     0.00     0.00  void std::_Destroy<int*>(int*, int*)
  0.00      0.17     0.00       35     0.00     0.00  void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
  0.00      0.17     0.00       30     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__miter_base<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  0.00      0.17     0.00       29     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator()
  0.00      0.17     0.00       28     0.00     0.00  __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
  0.00      0.17     0.00       28     0.00     0.00  __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
  0.00      0.17     0.00       28     0.00     0.00  std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
  0.00      0.17     0.00       28     0.00     0.00  int* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
  0.00      0.17     0.00       28     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
  0.00      0.17     0.00       28     0.00     0.00  std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long)
  0.00      0.17     0.00       28     0.00     0.00  std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long)
  0.00      0.17     0.00       28     0.00     0.00  int* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)
  0.00      0.17     0.00       28     0.00     0.00  void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&)
  0.00      0.17     0.00       28     0.00     0.00  int* std::__copy_move_a<true, int*, int*>(int*, int*, int*)
  0.00      0.17     0.00       28     0.00     0.00  int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*)
  0.00      0.17     0.00       28     0.00     0.00  int* std::uninitialized_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)
  0.00      0.17     0.00       28     0.00     0.00  int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&)
  0.00      0.17     0.00       28     0.00     0.00  int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
  0.00      0.17     0.00       28     0.00     0.00  int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)
  0.00      0.17     0.00       27     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator--()
  0.00      0.17     0.00       27     0.00     0.00  bool __gnu_cxx::__ops::_Val_less_iter::operator()<int, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(int&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const
  0.00      0.17     0.00       26     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() const
  0.00      0.17     0.00       26     0.00     0.00  std::vector<Move, std::allocator<Move> >::max_size() const
  0.00      0.17     0.00       26     0.00     0.00  std::move_iterator<Move*>::move_iterator(Move*)
  0.00      0.17     0.00       26     0.00     0.00  std::allocator_traits<std::allocator<Move> >::max_size(std::allocator<Move> const&)
  0.00      0.17     0.00       26     0.00     0.00  std::move_iterator<Move*> std::__make_move_if_noexcept_iterator<Move, std::move_iterator<Move*> >(Move*)
  0.00      0.17     0.00       22     0.00     0.00  __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::max_size() const
  0.00      0.17     0.00       22     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator+(long) const
  0.00      0.17     0.00       21     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
  0.00      0.17     0.00       20     0.00     0.00  __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter)
  0.00      0.17     0.00       20     0.00     0.00  void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter)
  0.00      0.17     0.00       18     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator()
  0.00      0.17     0.00       15     0.00     0.00  void std::_Destroy_aux<true>::__destroy<Move*>(Move*, Move*)
  0.00      0.17     0.00       15     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_M_deallocate(Move*, unsigned long)
  0.00      0.17     0.00       15     0.00     0.00  int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*)
  0.00      0.17     0.00       15     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::move_backward<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  0.00      0.17     0.00       15     0.00     0.00  int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*)
  0.00      0.17     0.00       15     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  0.00      0.17     0.00       15     0.00     0.00  void std::_Destroy<Move*>(Move*, Move*)
  0.00      0.17     0.00       15     0.00     0.00  void std::_Destroy<Move*, Move>(Move*, Move*, std::allocator<Move>&)
  0.00      0.17     0.00       14     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() const
  0.00      0.17     0.00       14     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size() const
  0.00      0.17     0.00       14     0.00     0.00  std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::move_iterator(std::vector<Cell, std::allocator<Cell> >*)
  0.00      0.17     0.00       14     0.00     0.00  std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size(std::allocator<std::vector<Cell, std::allocator<Cell> > > const&)
  0.00      0.17     0.00       14     0.00     0.00  std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> std::__make_move_if_noexcept_iterator<std::vector<Cell, std::allocator<Cell> >, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> >(std::vector<Cell, std::allocator<Cell> >*)
  0.00      0.17     0.00       13     0.00     0.00  __gnu_cxx::new_allocator<Move>::deallocate(Move*, unsigned long)
  0.00      0.17     0.00       13     0.00     0.00  __gnu_cxx::new_allocator<Move>::allocate(unsigned long, void const*)
  0.00      0.17     0.00       13     0.00     0.00  std::vector<Move, std::allocator<Move> >::_M_check_len(unsigned long, char const*) const
  0.00      0.17     0.00       13     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_M_allocate(unsigned long)
  0.00      0.17     0.00       13     0.00     0.00  std::allocator_traits<std::allocator<Move> >::deallocate(std::allocator<Move>&, Move*, unsigned long)
  0.00      0.17     0.00       13     0.00     0.00  std::allocator_traits<std::allocator<Move> >::allocate(std::allocator<Move>&, unsigned long)
  0.00      0.17     0.00       13     0.00     0.00  Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*)
  0.00      0.17     0.00       13     0.00     0.00  void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&)
  0.00      0.17     0.00       13     0.00     0.00  Move* std::uninitialized_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*)
  0.00      0.17     0.00       13     0.00     0.00  Move* std::__uninitialized_copy_a<std::move_iterator<Move*>, Move*, Move>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*, std::allocator<Move>&)
  0.00      0.17     0.00       13     0.00     0.00  Move* std::__uninitialized_move_if_noexcept_a<Move*, Move*, std::allocator<Move> >(Move*, Move*, Move*, std::allocator<Move>&)
  0.00      0.17     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<Faction>::max_size() const
  0.00      0.17     0.00       12     0.00     0.00  Faction* std::__niter_base<Faction*>(Faction*)
  0.00      0.17     0.00       10     0.00     0.00  void std::_Destroy_aux<false>::__destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*)
  0.00      0.17     0.00       10     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long)
  0.00      0.17     0.00       10     0.00     0.00  void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*)
  0.00      0.17     0.00       10     0.00     0.00  void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
  0.00      0.17     0.00        9     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator()
  0.00      0.17     0.00        9     0.00     0.00  std::remove_reference<Move*&>::type&& std::move<Move*&>(Move*&)
  0.00      0.17     0.00        8     0.00     0.00  __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long)
  0.00      0.17     0.00        8     0.00     0.00  __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::allocate(unsigned long, void const*)
  0.00      0.17     0.00        8     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() const
  0.00      0.17     0.00        8     0.00     0.00  std::move_iterator<Faction*>::base() const
  0.00      0.17     0.00        8     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::max_size() const
  0.00      0.17     0.00        8     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate(unsigned long)
  0.00      0.17     0.00        8     0.00     0.00  std::move_iterator<Faction*>::move_iterator(Faction*)
  0.00      0.17     0.00        8     0.00     0.00  std::allocator_traits<std::allocator<Faction> >::max_size(std::allocator<Faction> const&)
  0.00      0.17     0.00        8     0.00     0.00  std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::deallocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, unsigned long)
  0.00      0.17     0.00        8     0.00     0.00  std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::allocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, unsigned long)
  0.00      0.17     0.00        8     0.00     0.00  decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Faction*>(std::move_iterator<Faction*>)
  0.00      0.17     0.00        8     0.00     0.00  Faction* std::__miter_base<Faction*>(Faction*)
  0.00      0.17     0.00        8     0.00     0.00  std::move_iterator<Faction*> std::__make_move_if_noexcept_iterator<Faction, std::move_iterator<Faction*> >(Faction*)
  0.00      0.17     0.00        7     0.00     0.00  Faction::init(int)
  0.00      0.17     0.00        7     0.00     0.00  void __gnu_cxx::new_allocator<Faction>::construct<Faction>(Faction*)
  0.00      0.17     0.00        7     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator()
  0.00      0.17     0.00        7     0.00     0.00  __gnu_cxx::new_allocator<int>::~new_allocator()
  0.00      0.17     0.00        7     0.00     0.00  __gnu_cxx::__ops::__iter_less_iter()
  0.00      0.17     0.00        7     0.00     0.00  bool __gnu_cxx::operator==<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
  0.00      0.17     0.00        7     0.00     0.05  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_check_len(unsigned long, char const*) const
  0.00      0.17     0.00        7     0.00     0.00  std::allocator<int>::allocator()
  0.00      0.17     0.00        7     0.00     0.00  std::allocator<int>::~allocator()
  0.00      0.17     0.00        7     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl()
  0.00      0.17     0.00        7     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
  0.00      0.17     0.00        7     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_base()
  0.00      0.17     0.00        7     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
  0.00      0.17     0.00        7     0.00     0.00  void std::allocator_traits<std::allocator<Faction> >::construct<Faction>(std::allocator<Faction>&, Faction*)
  0.00      0.17     0.00        7     0.00     0.00  std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*)
  0.00      0.17     0.00        7     0.00     0.00  void std::vector<Faction, std::allocator<Faction> >::emplace_back<>()
  0.00      0.17     0.00        7     0.00     0.06  void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&)
  0.00      0.17     0.00        7     0.00     0.00  std::vector<int, std::allocator<int> >::end()
  0.00      0.17     0.00        7     0.00     0.00  std::vector<int, std::allocator<int> >::begin()
  0.00      0.17     0.00        7     0.00     0.00  std::vector<int, std::allocator<int> >::vector()
  0.00      0.17     0.00        7     0.00     0.00  std::vector<int, std::allocator<int> >::~vector()
  0.00      0.17     0.00        7     0.00     0.00  void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      0.17     0.00        7     0.00     0.00  void std::__introsort_loop<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      0.17     0.00        7     0.00     0.00  std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*)
  0.00      0.17     0.00        7     0.00     0.00  void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      0.17     0.00        7     0.00     0.00  std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
  0.00      0.17     0.00        7     0.00     0.00  std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_move_if_noexcept_a<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
  0.00      0.17     0.00        7     0.00     0.00  std::__lg(long)
  0.00      0.17     0.00        7     0.00     0.00  void std::sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  0.00      0.17     0.00        7     0.00     0.00  void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      0.17     0.00        5     0.00     0.00  void std::_Destroy_aux<true>::__destroy<Faction*>(Faction*, Faction*)
  0.00      0.17     0.00        5     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::_M_deallocate(Faction*, unsigned long)
  0.00      0.17     0.00        5     0.00     0.00  void std::_Destroy<Faction*>(Faction*, Faction*)
  0.00      0.17     0.00        5     0.00     0.00  void std::_Destroy<Faction*, Faction>(Faction*, Faction*, std::allocator<Faction>&)
  0.00      0.17     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<Faction>::deallocate(Faction*, unsigned long)
  0.00      0.17     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<Faction>::allocate(unsigned long, void const*)
  0.00      0.17     0.00        4     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::_M_check_len(unsigned long, char const*) const
  0.00      0.17     0.00        4     0.00     0.00  Faction* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Faction>(Faction const*, Faction const*, Faction*)
  0.00      0.17     0.00        4     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::_M_allocate(unsigned long)
  0.00      0.17     0.00        4     0.00     0.00  std::allocator_traits<std::allocator<Faction> >::deallocate(std::allocator<Faction>&, Faction*, unsigned long)
  0.00      0.17     0.00        4     0.00     0.00  std::allocator_traits<std::allocator<Faction> >::allocate(std::allocator<Faction>&, unsigned long)
  0.00      0.17     0.00        4     0.00     0.00  Faction* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*)
  0.00      0.17     0.00        4     0.00     0.00  void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>()
  0.00      0.17     0.00        4     0.00     0.00  Faction* std::__copy_move_a<true, Faction*, Faction*>(Faction*, Faction*, Faction*)
  0.00      0.17     0.00        4     0.00     0.00  Faction* std::__copy_move_a2<true, Faction*, Faction*>(Faction*, Faction*, Faction*)
  0.00      0.17     0.00        4     0.00     0.00  Faction* std::uninitialized_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*)
  0.00      0.17     0.00        4     0.00     0.00  Faction* std::__uninitialized_copy_a<std::move_iterator<Faction*>, Faction*, Faction>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*, std::allocator<Faction>&)
  0.00      0.17     0.00        4     0.00     0.00  Faction* std::__uninitialized_move_if_noexcept_a<Faction*, Faction*, std::allocator<Faction> >(Faction*, Faction*, Faction*, std::allocator<Faction>&)
  0.00      0.17     0.00        4     0.00     0.00  Faction* std::copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*)
  0.00      0.17     0.00        3     0.00     0.00  std::enable_if<std::__and_<std::is_move_constructible<Move*>, std::is_move_assignable<Move*> >::value, void>::type std::swap<Move*>(Move*&, Move*&)
  0.00      0.17     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<Move>::~new_allocator()
  0.00      0.17     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::new_allocator()
  0.00      0.17     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::~new_allocator()
  0.00      0.17     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::__normal_iterator(std::vector<Cell, std::allocator<Cell> > const* const&)
  0.00      0.17     0.00        2     0.00     0.00  std::allocator<Move>::~allocator()
  0.00      0.17     0.00        2     0.00     0.00  std::allocator<std::vector<Cell, std::allocator<Cell> > >::allocator()
  0.00      0.17     0.00        2     0.00     0.00  std::allocator<std::vector<Cell, std::allocator<Cell> > >::~allocator()
  0.00      0.17     0.00        2     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::~_Vector_impl()
  0.00      0.17     0.00        2     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::~_Vector_base()
  0.00      0.17     0.00        2     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::_Vector_impl()
  0.00      0.17     0.00        2     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::~_Vector_impl()
  0.00      0.17     0.00        2     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_base()
  0.00      0.17     0.00        2     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~_Vector_base()
  0.00      0.17     0.00        2     0.00     0.00  std::vector<Move, std::allocator<Move> >::~vector()
  0.00      0.17     0.00        2     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::vector()
  0.00      0.17     0.00        2     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector()
  0.00      0.17     0.00        2     0.00     0.00  std::remove_reference<std::allocator<Move>&>::type&& std::move<std::allocator<Move>&>(std::allocator<Move>&)
  0.00      0.17     0.00        2     0.00     0.00  std::remove_reference<std::vector<Move, std::allocator<Move> >&>::type&& std::move<std::vector<Move, std::allocator<Move> >&>(std::vector<Move, std::allocator<Move> >&)
  0.00      0.17     0.00        1     0.00     0.00  VirtualRootWindowOfScreen(Screen*)
  0.00      0.17     0.00        1     0.00    69.60  Board::init()
  0.00      0.17     0.00        1     0.00    64.41  Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&)
  0.00      0.17     0.00        1     0.00    10.71  Board::Board(int, int, int, int, int, XColor*)
  0.00      0.17     0.00        1     0.00     0.00  Board::~Board()
  0.00      0.17     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Move>::new_allocator()
  0.00      0.17     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Move>::new_allocator(__gnu_cxx::new_allocator<Move> const&)
  0.00      0.17     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Faction>::new_allocator()
  0.00      0.17     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Faction>::~new_allocator()
  0.00      0.17     0.00        1     0.00     0.00  __gnu_cxx::__alloc_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_S_propagate_on_copy_assign()
  0.00      0.17     0.00        1     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::end() const
  0.00      0.17     0.00        1     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::begin() const
  0.00      0.17     0.00        1     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::capacity() const
  0.00      0.17     0.00        1     0.00     0.00  std::allocator<Move>::allocator(std::allocator<Move> const&)
  0.00      0.17     0.00        1     0.00     0.00  std::allocator<Move>::allocator()
  0.00      0.17     0.00        1     0.00     0.00  std::allocator<Faction>::allocator()
  0.00      0.17     0.00        1     0.00     0.00  std::allocator<Faction>::~allocator()
  0.00      0.17     0.00        1     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_M_swap_data(std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl&)
  0.00      0.17     0.00        1     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl()
  0.00      0.17     0.00        1     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl(std::allocator<Move>&&)
  0.00      0.17     0.00        1     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&)
  0.00      0.17     0.00        1     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_Vector_base()
  0.00      0.17     0.00        1     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::_Vector_impl()
  0.00      0.17     0.00        1     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::~_Vector_impl()
  0.00      0.17     0.00        1     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_base()
  0.00      0.17     0.00        1     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::~_Vector_base()
  0.00      0.17     0.00        1     0.00     0.05  std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&)
  0.00      0.17     0.00        1     0.00     0.00  std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::~priority_queue()
  0.00      0.17     0.00        1     0.00     0.28  std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*)
  0.00      0.17     0.00        1     0.00     0.00  std::vector<Move, std::allocator<Move> >::vector()
  0.00      0.17     0.00        1     0.00     0.00  std::vector<Move, std::allocator<Move> >::vector(std::vector<Move, std::allocator<Move> >&&)
  0.00      0.17     0.00        1     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::vector()
  0.00      0.17     0.00        1     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::~vector()
  0.00      0.17     0.00        1     0.00     0.28  std::vector<Cell, std::allocator<Cell> >* std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > >(unsigned long, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >)
  0.00      0.17     0.00        1     0.00     0.29  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&)
  0.00      0.17     0.00        1     0.00     0.00  void std::__make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>)
  0.00      0.17     0.00        1     0.00     0.28  std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*)
  0.00      0.17     0.00        1     0.00     0.28  std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
  0.00      0.17     0.00        1     0.00     0.00  void std::make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2017 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 5.88% of 0.17 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.00    0.17                 main [1]
                0.00    0.15  100000/100000      Board::step(int) [2]
                0.00    0.02  100000/100000      Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&, int, int) [11]
                0.00    0.00       1/1           Board::init() [25]
                0.00    0.00       1/1           Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&) [26]
                0.00    0.00       1/1           Board::Board(int, int, int, int, int, XColor*) [27]
                0.00    0.00  100000/203762      std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::top() const [65]
                0.00    0.00       1/1           VirtualRootWindowOfScreen(Screen*) [355]
                0.00    0.00       1/1           Board::~Board() [356]
-----------------------------------------------
                0.00    0.15  100000/100000      main [1]
[2]     86.9    0.00    0.15  100000         Board::step(int) [2]
                0.00    0.09  103628/103628      std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop() [3]
                0.00    0.02 1408211/2309189     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long) [8]
                0.01    0.00 1108613/2009591     std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [12]
                0.01    0.00   99866/106223      Faction::getSpeed() [15]
                0.00    0.01   99866/106223      std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [21]
                0.00    0.00  294673/2603898     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const [9]
                0.00    0.00    6336/6357        Board::setCell(int, int, int, int) [24]
                0.00    0.00  299598/2311557     std::vector<Cell, std::allocator<Cell> >::size() const [13]
                0.00    0.00  798928/798928      Cell::Cell() [56]
                0.00    0.00  148276/160997      std::vector<Faction, std::allocator<Faction> >::at(unsigned long) [70]
                0.00    0.00  103762/203762      std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::top() const [65]
                0.00    0.00  100000/100000      std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::size() const [85]
                0.00    0.00   99866/106223      Move::Move(int, int, int, int) [73]
                0.00    0.00   16983/16983       Faction::getStrength() [87]
                0.00    0.00   16983/16983       Faction::getAccuracy() [86]
                0.00    0.00   14444/14444       Faction::getArmor() [88]
-----------------------------------------------
                0.00    0.09  103628/103628      Board::step(int) [2]
[3]     54.0    0.00    0.09  103628         std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop() [3]
                0.00    0.08  103628/103628      void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [6]
                0.00    0.01  103628/103628      std::vector<Move, std::allocator<Move> >::pop_back() [18]
                0.00    0.00  103628/209852      std::vector<Move, std::allocator<Move> >::begin() [14]
                0.00    0.00  103628/209852      std::vector<Move, std::allocator<Move> >::end() [61]
-----------------------------------------------
                0.00    0.08  103628/103628      void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [6]
[4]     45.2    0.00    0.08  103628         void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [4]
                0.01    0.07  103628/103628      void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [5]
                0.00    0.00  310884/2120737     std::remove_reference<Move&>::type&& std::move<Move&>(Move&) [52]
                0.00    0.00  310884/5121695     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [51]
                0.00    0.00  103628/313480      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&) [59]
-----------------------------------------------
                0.01    0.07  103628/103628      void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [4]
[5]     45.2    0.01    0.07  103628         void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [5]
                0.06    0.00 4282090/4704588     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator+(long) const [7]
                0.00    0.00  103628/209851      void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>) [22]
                0.00    0.00 2141098/5121695     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [51]
                0.00    0.00 1174177/2120737     std::remove_reference<Move&>::type&& std::move<Move&>(Move&) [52]
                0.00    0.00 1070496/1070496     bool __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >) [55]
                0.00    0.00  103628/103628      __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(__gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [83]
-----------------------------------------------
                0.00    0.08  103628/103628      std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop() [3]
[6]     45.2    0.00    0.08  103628         void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [6]
                0.00    0.08  103628/103628      void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [4]
                0.00    0.00  103628/313480      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&) [59]
                0.00    0.00  103628/103629      __gnu_cxx::__ops::_Iter_comp_iter<compareMove> __gnu_cxx::__ops::__iter_comp_iter<compareMove>(compareMove) [81]
                0.00    0.00  103628/103628      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator--() [82]
-----------------------------------------------
                0.01    0.00  422498/4704588     void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>) [22]
                0.06    0.00 4282090/4704588     void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [5]
[7]     41.2    0.07    0.00 4704588         __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator+(long) const [7]
                0.00    0.00 4704588/5230515     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move* const&) [50]
-----------------------------------------------
                0.00    0.00    2560/2309189     Board::init() [25]
                0.00    0.00    2560/2309189     Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&) [26]
                0.00    0.00   19071/2309189     Board::setCell(int, int, int, int) [24]
                0.00    0.01  876787/2309189     Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&, int, int) [11]
                0.00    0.02 1408211/2309189     Board::step(int) [2]
[8]     21.5    0.00    0.04 2309189         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long) [8]
                0.00    0.03 2309189/2309189     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_range_check(unsigned long) const [10]
                0.01    0.00 2309189/2309189     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator[](unsigned long) [19]
-----------------------------------------------
                0.00    0.00       1/2603898     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [35]
                0.00    0.00       7/2603898     void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [33]
                0.00    0.00      28/2603898     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_check_len(unsigned long, char const*) const [34]
                0.00    0.00  294673/2603898     Board::step(int) [2]
                0.03    0.00 2309189/2603898     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_range_check(unsigned long) const [10]
[9]     17.6    0.03    0.00 2603898         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const [9]
-----------------------------------------------
                0.00    0.03 2309189/2309189     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long) [8]
[10]    15.6    0.00    0.03 2309189         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_range_check(unsigned long) const [10]
                0.03    0.00 2309189/2603898     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const [9]
-----------------------------------------------
                0.00    0.02  100000/100000      main [1]
[11]    13.0    0.00    0.02  100000         Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&, int, int) [11]
                0.00    0.01  876787/2309189     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long) [8]
                0.00    0.00  876787/2009591     std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [12]
-----------------------------------------------
                0.00    0.00    2560/2009591     Board::init() [25]
                0.00    0.00    2560/2009591     Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&) [26]
                0.00    0.00   19071/2009591     Board::setCell(int, int, int, int) [24]
                0.00    0.00  876787/2009591     Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&, int, int) [11]
                0.01    0.00 1108613/2009591     Board::step(int) [2]
[12]    11.0    0.01    0.01 2009591         std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [12]
                0.00    0.01 2009591/2009591     std::vector<Cell, std::allocator<Cell> >::_M_range_check(unsigned long) const [20]
                0.00    0.00 2009591/2009591     std::vector<Cell, std::allocator<Cell> >::operator[](unsigned long) [53]
-----------------------------------------------
                0.00    0.00     128/2311557     std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [32]
                0.00    0.00     448/2311557     void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [29]
                0.00    0.00    1792/2311557     std::vector<Cell, std::allocator<Cell> >::_M_check_len(unsigned long, char const*) const [30]
                0.00    0.00  299598/2311557     Board::step(int) [2]
                0.01    0.00 2009591/2311557     std::vector<Cell, std::allocator<Cell> >::_M_range_check(unsigned long) const [20]
[13]     5.9    0.01    0.00 2311557         std::vector<Cell, std::allocator<Cell> >::size() const [13]
-----------------------------------------------
                0.00    0.00       1/209852      std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [43]
                0.00    0.00  103628/209852      std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop() [3]
                0.01    0.00  106223/209852      std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [21]
[14]     5.9    0.01    0.00  209852         std::vector<Move, std::allocator<Move> >::begin() [14]
                0.00    0.00  209852/5230515     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move* const&) [50]
-----------------------------------------------
                0.00    0.00    6357/106223      Board::setCell(int, int, int, int) [24]
                0.01    0.00   99866/106223      Board::step(int) [2]
[15]     5.9    0.01    0.00  106223         Faction::getSpeed() [15]
-----------------------------------------------
                0.01    0.00  103628/103628      void std::allocator_traits<std::allocator<Move> >::destroy<Move>(std::allocator<Move>&, Move*) [17]
[16]     5.9    0.01    0.00  103628         void __gnu_cxx::new_allocator<Move>::destroy<Move>(Move*) [16]
-----------------------------------------------
                0.00    0.01  103628/103628      std::vector<Move, std::allocator<Move> >::pop_back() [18]
[17]     5.9    0.00    0.01  103628         void std::allocator_traits<std::allocator<Move> >::destroy<Move>(std::allocator<Move>&, Move*) [17]
                0.01    0.00  103628/103628      void __gnu_cxx::new_allocator<Move>::destroy<Move>(Move*) [16]
-----------------------------------------------
                0.00    0.01  103628/103628      std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop() [3]
[18]     5.9    0.00    0.01  103628         std::vector<Move, std::allocator<Move> >::pop_back() [18]
                0.00    0.01  103628/103628      void std::allocator_traits<std::allocator<Move> >::destroy<Move>(std::allocator<Move>&, Move*) [17]
-----------------------------------------------
                0.01    0.00 2309189/2309189     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long) [8]
[19]     5.9    0.01    0.00 2309189         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator[](unsigned long) [19]
-----------------------------------------------
                0.00    0.01 2009591/2009591     std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [12]
[20]     5.1    0.00    0.01 2009591         std::vector<Cell, std::allocator<Cell> >::_M_range_check(unsigned long) const [20]
                0.01    0.00 2009591/2311557     std::vector<Cell, std::allocator<Cell> >::size() const [13]
-----------------------------------------------
                0.00    0.00    6357/106223      Board::setCell(int, int, int, int) [24]
                0.00    0.01   99866/106223      Board::step(int) [2]
[21]     4.8    0.00    0.01  106223         std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [21]
                0.01    0.00  106223/209852      std::vector<Move, std::allocator<Move> >::begin() [14]
                0.00    0.00  106223/106223      void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [23]
                0.00    0.00  106223/2120737     std::remove_reference<Move&>::type&& std::move<Move&>(Move&) [52]
                0.00    0.00  106223/209852      std::vector<Move, std::allocator<Move> >::end() [61]
                0.00    0.00  106223/106223      std::vector<Move, std::allocator<Move> >::push_back(Move&&) [79]
-----------------------------------------------
                0.00    0.00  103628/209851      void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [5]
                0.00    0.00  106223/209851      void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [23]
[22]     3.7    0.00    0.01  209851         void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>) [22]
                0.01    0.00  422498/4704588     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator+(long) const [7]
                0.00    0.00  211717/5121695     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [51]
                0.00    0.00  210784/2120737     std::remove_reference<Move&>::type&& std::move<Move&>(Move&) [52]
                0.00    0.00  210781/210781      bool __gnu_cxx::__ops::_Iter_comp_val<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move&) [60]
-----------------------------------------------
                0.00    0.00  106223/106223      std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [21]
[23]     1.9    0.00    0.00  106223         void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [23]
                0.00    0.00  106223/209851      void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>) [22]
                0.00    0.00  212446/2120737     std::remove_reference<Move&>::type&& std::move<Move&>(Move&) [52]
                0.00    0.00  106223/106223      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator-(long) const [76]
                0.00    0.00  106223/5121695     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [51]
                0.00    0.00  106223/106223      __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(compareMove) [75]
                0.00    0.00  106223/313480      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&) [59]
-----------------------------------------------
                0.00    0.00      21/6357        Board::init() [25]
                0.00    0.00    6336/6357        Board::step(int) [2]
[24]     0.9    0.00    0.00    6357         Board::setCell(int, int, int, int) [24]
                0.00    0.00    6357/106223      Faction::getSpeed() [15]
                0.00    0.00    6357/106223      std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [21]
                0.00    0.00   19071/2309189     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long) [8]
                0.00    0.00   19071/2009591     std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [12]
                0.00    0.00   12714/160997      std::vector<Faction, std::allocator<Faction> >::at(unsigned long) [70]
                0.00    0.00    6357/167383      std::vector<Faction, std::allocator<Faction> >::size() const [68]
                0.00    0.00    6357/8917        Cell::init(int) [93]
                0.00    0.00    6357/6357        Faction::getHealth() [95]
                0.00    0.00    6357/106223      Move::Move(int, int, int, int) [73]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[25]     0.0    0.00    0.00       1         Board::init() [25]
                0.00    0.00    2560/2309189     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long) [8]
                0.00    0.00    2560/2009591     std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [12]
                0.00    0.00      21/6357        Board::setCell(int, int, int, int) [24]
                0.00    0.00    2560/8917        Cell::init(int) [93]
                0.00    0.00       9/167383      std::vector<Faction, std::allocator<Faction> >::size() const [68]
                0.00    0.00       7/160997      std::vector<Faction, std::allocator<Faction> >::at(unsigned long) [70]
                0.00    0.00       7/7           Faction::init(int) [289]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[26]     0.0    0.00    0.00       1         Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&) [26]
                0.00    0.00    2560/2309189     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long) [8]
                0.00    0.00    2560/2009591     std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [12]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[27]     0.0    0.00    0.00       1         Board::Board(int, int, int, int, int, XColor*) [27]
                0.00    0.00    2560/2560        std::vector<Cell, std::allocator<Cell> >::push_back(Cell const&) [28]
                0.00    0.00      64/64          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::push_back(std::vector<Cell, std::allocator<Cell> > const&) [31]
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [35]
                0.00    0.00       1/1           std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [43]
                0.00    0.00    2560/2560        Cell::Cell(int, int) [112]
                0.00    0.00      64/64          std::vector<Cell, std::allocator<Cell> >::vector() [181]
                0.00    0.00      64/255         std::vector<Cell, std::allocator<Cell> >::~vector() [145]
                0.00    0.00       7/7           void std::vector<Faction, std::allocator<Faction> >::emplace_back<>() [303]
                0.00    0.00       2/2           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::vector() [351]
                0.00    0.00       1/1           std::vector<Move, std::allocator<Move> >::vector() [379]
                0.00    0.00       1/1           std::vector<Faction, std::allocator<Faction> >::vector() [381]
                0.00    0.00       1/2           std::vector<Move, std::allocator<Move> >::~vector() [350]
                0.00    0.00       1/2           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector() [352]
-----------------------------------------------
                0.00    0.00    2560/2560        Board::Board(int, int, int, int, int, XColor*) [27]
[28]     0.0    0.00    0.00    2560         std::vector<Cell, std::allocator<Cell> >::push_back(Cell const&) [28]
                0.00    0.00     448/448         void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [29]
                0.00    0.00    2112/2560        void std::allocator_traits<std::allocator<Cell> >::construct<Cell, Cell const&>(std::allocator<Cell>&, Cell*, Cell const&) [114]
-----------------------------------------------
                0.00    0.00     448/448         std::vector<Cell, std::allocator<Cell> >::push_back(Cell const&) [28]
[29]     0.0    0.00    0.00     448         void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [29]
                0.00    0.00     448/448         std::vector<Cell, std::allocator<Cell> >::_M_check_len(unsigned long, char const*) const [30]
                0.00    0.00     448/2311557     std::vector<Cell, std::allocator<Cell> >::size() const [13]
                0.00    0.00     896/1342        std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() [116]
                0.00    0.00     448/576         std::_Vector_base<Cell, std::allocator<Cell> >::_M_allocate(unsigned long) [128]
                0.00    0.00     448/10688       Cell const& std::forward<Cell const&>(std::remove_reference<Cell const&>::type&) [89]
                0.00    0.00     448/2560        void std::allocator_traits<std::allocator<Cell> >::construct<Cell, Cell const&>(std::allocator<Cell>&, Cell*, Cell const&) [114]
                0.00    0.00     448/448         Cell* std::__uninitialized_move_if_noexcept_a<Cell*, Cell*, std::allocator<Cell> >(Cell*, Cell*, Cell*, std::allocator<Cell>&) [136]
                0.00    0.00     448/703         void std::_Destroy<Cell*, Cell>(Cell*, Cell*, std::allocator<Cell>&) [125]
                0.00    0.00     448/703         std::_Vector_base<Cell, std::allocator<Cell> >::_M_deallocate(Cell*, unsigned long) [123]
-----------------------------------------------
                0.00    0.00     448/448         void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [29]
[30]     0.0    0.00    0.00     448         std::vector<Cell, std::allocator<Cell> >::_M_check_len(unsigned long, char const*) const [30]
                0.00    0.00    1792/2311557     std::vector<Cell, std::allocator<Cell> >::size() const [13]
                0.00    0.00     896/896         std::vector<Cell, std::allocator<Cell> >::max_size() const [118]
                0.00    0.00     448/500         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [132]
-----------------------------------------------
                0.00    0.00      64/64          Board::Board(int, int, int, int, int, XColor*) [27]
[31]     0.0    0.00    0.00      64         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::push_back(std::vector<Cell, std::allocator<Cell> > const&) [31]
                0.00    0.00       7/7           void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [33]
                0.00    0.00      57/64          void std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [37]
-----------------------------------------------
                0.00    0.00      64/128         void __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [36]
                0.00    0.00      64/128         void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [38]
[32]     0.0    0.00    0.00     128         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [32]
                0.00    0.00     128/2311557     std::vector<Cell, std::allocator<Cell> >::size() const [13]
                0.00    0.00     128/1024        std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() const [117]
                0.00    0.00     128/128         __gnu_cxx::__alloc_traits<std::allocator<Cell> >::_S_select_on_copy(std::allocator<Cell> const&) [155]
                0.00    0.00     128/128         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(unsigned long, std::allocator<Cell> const&) [160]
                0.00    0.00     128/383         std::allocator<Cell>::~allocator() [138]
                0.00    0.00     128/1342        std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() [116]
                0.00    0.00     128/128         std::vector<Cell, std::allocator<Cell> >::end() const [156]
                0.00    0.00     128/128         std::vector<Cell, std::allocator<Cell> >::begin() const [157]
                0.00    0.00     128/128         Cell* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, Cell>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, std::allocator<Cell>&) [164]
-----------------------------------------------
                0.00    0.00       7/7           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::push_back(std::vector<Cell, std::allocator<Cell> > const&) [31]
[33]     0.0    0.00    0.00       7         void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [33]
                0.00    0.00       7/7           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_check_len(unsigned long, char const*) const [34]
                0.00    0.00       7/2603898     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const [9]
                0.00    0.00       7/64          void std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [37]
                0.00    0.00      14/18          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() [243]
                0.00    0.00       7/8           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate(unsigned long) [281]
                0.00    0.00       7/199         std::vector<Cell, std::allocator<Cell> > const& std::forward<std::vector<Cell, std::allocator<Cell> > const&>(std::remove_reference<std::vector<Cell, std::allocator<Cell> > const&>::type&) [148]
                0.00    0.00       7/7           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_move_if_noexcept_a<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [313]
                0.00    0.00       7/10          void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [273]
                0.00    0.00       7/10          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [271]
-----------------------------------------------
                0.00    0.00       7/7           void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [33]
[34]     0.0    0.00    0.00       7         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_check_len(unsigned long, char const*) const [34]
                0.00    0.00      28/2603898     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const [9]
                0.00    0.00      14/14          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size() const [253]
                0.00    0.00       7/500         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [132]
-----------------------------------------------
                0.00    0.00       1/1           Board::Board(int, int, int, int, int, XColor*) [27]
[35]     0.0    0.00    0.00       1         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [35]
                0.00    0.00       1/1           std::vector<Cell, std::allocator<Cell> >* std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > >(unsigned long, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >) [40]
                0.00    0.00       1/2603898     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const [9]
                0.00    0.00       1/1           __gnu_cxx::__alloc_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_S_propagate_on_copy_assign() [361]
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::capacity() const [364]
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::end() const [362]
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::begin() const [363]
                0.00    0.00       1/18          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() [243]
                0.00    0.00       1/10          void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [273]
                0.00    0.00       1/10          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [271]
-----------------------------------------------
                0.00    0.00      64/64          void std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [37]
[36]     0.0    0.00    0.00      64         void __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [36]
                0.00    0.00      64/128         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [32]
                0.00    0.00      64/199         std::vector<Cell, std::allocator<Cell> > const& std::forward<std::vector<Cell, std::allocator<Cell> > const&>(std::remove_reference<std::vector<Cell, std::allocator<Cell> > const&>::type&) [148]
                0.00    0.00      64/122270      operator new(unsigned long, void*) [72]
-----------------------------------------------
                0.00    0.00       7/64          void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [33]
                0.00    0.00      57/64          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::push_back(std::vector<Cell, std::allocator<Cell> > const&) [31]
[37]     0.0    0.00    0.00      64         void std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [37]
                0.00    0.00      64/64          void __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [36]
                0.00    0.00      64/199         std::vector<Cell, std::allocator<Cell> > const& std::forward<std::vector<Cell, std::allocator<Cell> > const&>(std::remove_reference<std::vector<Cell, std::allocator<Cell> > const&>::type&) [148]
-----------------------------------------------
                0.00    0.00      64/64          std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [39]
[38]     0.0    0.00    0.00      64         void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [38]
                0.00    0.00      64/128         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [32]
                0.00    0.00      64/199         std::vector<Cell, std::allocator<Cell> > const& std::forward<std::vector<Cell, std::allocator<Cell> > const&>(std::remove_reference<std::vector<Cell, std::allocator<Cell> > const&>::type&) [148]
                0.00    0.00      64/122270      operator new(unsigned long, void*) [72]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [41]
[39]     0.0    0.00    0.00       1         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [39]
                0.00    0.00      64/64          void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [38]
                0.00    0.00      65/65          bool __gnu_cxx::operator!=<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&) [174]
                0.00    0.00      64/64          __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator*() const [177]
                0.00    0.00      64/318         std::vector<Cell, std::allocator<Cell> >* std::__addressof<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >&) [141]
                0.00    0.00      64/64          __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator++() [176]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [35]
[40]     0.0    0.00    0.00       1         std::vector<Cell, std::allocator<Cell> >* std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > >(unsigned long, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >) [40]
                0.00    0.00       1/1           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [42]
                0.00    0.00       1/8           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate(unsigned long) [281]
                0.00    0.00       1/18          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() [243]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [42]
[41]     0.0    0.00    0.00       1         std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [41]
                0.00    0.00       1/1           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [39]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Cell, std::allocator<Cell> >* std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > >(unsigned long, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >) [40]
[42]     0.0    0.00    0.00       1         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [42]
                0.00    0.00       1/1           std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [41]
-----------------------------------------------
                0.00    0.00       1/1           Board::Board(int, int, int, int, int, XColor*) [27]
[43]     0.0    0.00    0.00       1         std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [43]
                0.00    0.00       1/209852      std::vector<Move, std::allocator<Move> >::begin() [14]
                0.00    0.00       1/2           std::remove_reference<std::vector<Move, std::allocator<Move> >&>::type&& std::move<std::vector<Move, std::allocator<Move> >&>(std::vector<Move, std::allocator<Move> >&) [354]
                0.00    0.00       1/209852      std::vector<Move, std::allocator<Move> >::end() [61]
                0.00    0.00       1/1           std::vector<Move, std::allocator<Move> >::vector(std::vector<Move, std::allocator<Move> >&&) [380]
                0.00    0.00       1/1           void std::make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [384]
-----------------------------------------------
                0.00    0.00  106223/5230515     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator-(long) const [76]
                0.00    0.00  209852/5230515     std::vector<Move, std::allocator<Move> >::begin() [14]
                0.00    0.00  209852/5230515     std::vector<Move, std::allocator<Move> >::end() [61]
                0.00    0.00 4704588/5230515     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator+(long) const [7]
[50]     0.0    0.00    0.00 5230515         __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move* const&) [50]
-----------------------------------------------
                0.00    0.00  106223/5121695     void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [23]
                0.00    0.00  210781/5121695     bool __gnu_cxx::__ops::_Iter_comp_val<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move&) [60]
                0.00    0.00  211717/5121695     void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>) [22]
                0.00    0.00  310884/5121695     void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [4]
                0.00    0.00 2140992/5121695     bool __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >) [55]
                0.00    0.00 2141098/5121695     void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [5]
[51]     0.0    0.00    0.00 5121695         __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [51]
-----------------------------------------------
                0.00    0.00  106223/2120737     std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [21]
                0.00    0.00  106223/2120737     std::vector<Move, std::allocator<Move> >::push_back(Move&&) [79]
                0.00    0.00  210784/2120737     void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>) [22]
                0.00    0.00  212446/2120737     void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [23]
                0.00    0.00  310884/2120737     void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [4]
                0.00    0.00 1174177/2120737     void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [5]
[52]     0.0    0.00    0.00 2120737         std::remove_reference<Move&>::type&& std::move<Move&>(Move&) [52]
-----------------------------------------------
                0.00    0.00 2009591/2009591     std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [12]
[53]     0.0    0.00    0.00 2009591         std::vector<Cell, std::allocator<Cell> >::operator[](unsigned long) [53]
-----------------------------------------------
                0.00    0.00  210781/1281277     bool __gnu_cxx::__ops::_Iter_comp_val<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move&) [60]
                0.00    0.00 1070496/1281277     bool __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >) [55]
[54]     0.0    0.00    0.00 1281277         compareMove::operator()(Move, Move) [54]
-----------------------------------------------
                0.00    0.00 1070496/1070496     void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [5]
[55]     0.0    0.00    0.00 1070496         bool __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >) [55]
                0.00    0.00 2140992/5121695     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [51]
                0.00    0.00 1070496/1281277     compareMove::operator()(Move, Move) [54]
-----------------------------------------------
                0.00    0.00  798928/798928      Board::step(int) [2]
[56]     0.0    0.00    0.00  798928         Cell::Cell() [56]
-----------------------------------------------
                0.00    0.00  626960/626960      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&) [59]
[57]     0.0    0.00    0.00  626960         __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::base() const [57]
-----------------------------------------------
                0.00    0.00      13/322777      void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [264]
                0.00    0.00    4095/322777      void std::_Construct<Move, Move>(Move*, Move&&) [106]
                0.00    0.00  106223/322777      void std::vector<Move, std::allocator<Move> >::emplace_back<Move>(Move&&) [78]
                0.00    0.00  106223/322777      void std::allocator_traits<std::allocator<Move> >::construct<Move, Move>(std::allocator<Move>&, Move*, Move&&) [77]
                0.00    0.00  106223/322777      void __gnu_cxx::new_allocator<Move>::construct<Move, Move>(Move*, Move&&) [74]
[58]     0.0    0.00    0.00  322777         Move&& std::forward<Move>(std::remove_reference<Move>::type&) [58]
-----------------------------------------------
                0.00    0.00       1/313480      void std::__make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [383]
                0.00    0.00  103628/313480      void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [6]
                0.00    0.00  103628/313480      void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [4]
                0.00    0.00  106223/313480      void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [23]
[59]     0.0    0.00    0.00  313480         __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&) [59]
                0.00    0.00  626960/626960      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::base() const [57]
-----------------------------------------------
                0.00    0.00  210781/210781      void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>) [22]
[60]     0.0    0.00    0.00  210781         bool __gnu_cxx::__ops::_Iter_comp_val<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move&) [60]
                0.00    0.00  210781/5121695     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [51]
                0.00    0.00  210781/1281277     compareMove::operator()(Move, Move) [54]
-----------------------------------------------
                0.00    0.00       1/209852      std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [43]
                0.00    0.00  103628/209852      std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop() [3]
                0.00    0.00  106223/209852      std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [21]
[61]     0.0    0.00    0.00  209852         std::vector<Move, std::allocator<Move> >::end() [61]
                0.00    0.00  209852/5230515     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move* const&) [50]
-----------------------------------------------
                0.00    0.00  103628/209851      __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(__gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [83]
                0.00    0.00  106223/209851      __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(compareMove) [75]
[62]     0.0    0.00    0.00  209851         __gnu_cxx::__ops::_Iter_comp_val<compareMove>::_Iter_comp_val(compareMove) [62]
-----------------------------------------------
                0.00    0.00  203762/203762      std::vector<Move, std::allocator<Move> >::begin() const [66]
[63]     0.0    0.00    0.00  203762         __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move const* const&) [63]
-----------------------------------------------
                0.00    0.00  203762/203762      std::vector<Move, std::allocator<Move> >::front() const [67]
[64]     0.0    0.00    0.00  203762         __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::operator*() const [64]
-----------------------------------------------
                0.00    0.00  100000/203762      main [1]
                0.00    0.00  103762/203762      Board::step(int) [2]
[65]     0.0    0.00    0.00  203762         std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::top() const [65]
                0.00    0.00  203762/203762      std::vector<Move, std::allocator<Move> >::front() const [67]
-----------------------------------------------
                0.00    0.00  203762/203762      std::vector<Move, std::allocator<Move> >::front() const [67]
[66]     0.0    0.00    0.00  203762         std::vector<Move, std::allocator<Move> >::begin() const [66]
                0.00    0.00  203762/203762      __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move const* const&) [63]
-----------------------------------------------
                0.00    0.00  203762/203762      std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::top() const [65]
[67]     0.0    0.00    0.00  203762         std::vector<Move, std::allocator<Move> >::front() const [67]
                0.00    0.00  203762/203762      std::vector<Move, std::allocator<Move> >::begin() const [66]
                0.00    0.00  203762/203762      __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::operator*() const [64]
-----------------------------------------------
                0.00    0.00       4/167383      void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [329]
                0.00    0.00       9/167383      Board::init() [25]
                0.00    0.00      16/167383      std::vector<Faction, std::allocator<Faction> >::_M_check_len(unsigned long, char const*) const [323]
                0.00    0.00    6357/167383      Board::setCell(int, int, int, int) [24]
                0.00    0.00  160997/167383      std::vector<Faction, std::allocator<Faction> >::_M_range_check(unsigned long) const [69]
[68]     0.0    0.00    0.00  167383         std::vector<Faction, std::allocator<Faction> >::size() const [68]
-----------------------------------------------
                0.00    0.00  160997/160997      std::vector<Faction, std::allocator<Faction> >::at(unsigned long) [70]
[69]     0.0    0.00    0.00  160997         std::vector<Faction, std::allocator<Faction> >::_M_range_check(unsigned long) const [69]
                0.00    0.00  160997/167383      std::vector<Faction, std::allocator<Faction> >::size() const [68]
-----------------------------------------------
                0.00    0.00       7/160997      Board::init() [25]
                0.00    0.00   12714/160997      Board::setCell(int, int, int, int) [24]
                0.00    0.00  148276/160997      Board::step(int) [2]
[70]     0.0    0.00    0.00  160997         std::vector<Faction, std::allocator<Faction> >::at(unsigned long) [70]
                0.00    0.00  160997/160997      std::vector<Faction, std::allocator<Faction> >::_M_range_check(unsigned long) const [69]
                0.00    0.00  160997/160997      std::vector<Faction, std::allocator<Faction> >::operator[](unsigned long) [71]
-----------------------------------------------
                0.00    0.00  160997/160997      std::vector<Faction, std::allocator<Faction> >::at(unsigned long) [70]
[71]     0.0    0.00    0.00  160997         std::vector<Faction, std::allocator<Faction> >::operator[](unsigned long) [71]
-----------------------------------------------
                0.00    0.00       7/122270      void __gnu_cxx::new_allocator<Faction>::construct<Faction>(Faction*) [290]
                0.00    0.00      42/122270      void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [203]
                0.00    0.00      63/122270      void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >&&) [189]
                0.00    0.00      64/122270      void __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [36]
                0.00    0.00      64/122270      void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [38]
                0.00    0.00    2560/122270      void __gnu_cxx::new_allocator<Cell>::construct<Cell, Cell const&>(Cell*, Cell const&) [113]
                0.00    0.00    4032/122270      void std::_Construct<Cell, Cell>(Cell*, Cell&&) [110]
                0.00    0.00    4095/122270      void std::_Construct<Move, Move>(Move*, Move&&) [106]
                0.00    0.00    5120/122270      void std::_Construct<Cell, Cell const&>(Cell*, Cell const&) [99]
                0.00    0.00  106223/122270      void __gnu_cxx::new_allocator<Move>::construct<Move, Move>(Move*, Move&&) [74]
[72]     0.0    0.00    0.00  122270         operator new(unsigned long, void*) [72]
-----------------------------------------------
                0.00    0.00    6357/106223      Board::setCell(int, int, int, int) [24]
                0.00    0.00   99866/106223      Board::step(int) [2]
[73]     0.0    0.00    0.00  106223         Move::Move(int, int, int, int) [73]
-----------------------------------------------
                0.00    0.00  106223/106223      void std::allocator_traits<std::allocator<Move> >::construct<Move, Move>(std::allocator<Move>&, Move*, Move&&) [77]
[74]     0.0    0.00    0.00  106223         void __gnu_cxx::new_allocator<Move>::construct<Move, Move>(Move*, Move&&) [74]
                0.00    0.00  106223/322777      Move&& std::forward<Move>(std::remove_reference<Move>::type&) [58]
                0.00    0.00  106223/122270      operator new(unsigned long, void*) [72]
-----------------------------------------------
                0.00    0.00  106223/106223      void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [23]
[75]     0.0    0.00    0.00  106223         __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(compareMove) [75]
                0.00    0.00  106223/209851      __gnu_cxx::__ops::_Iter_comp_val<compareMove>::_Iter_comp_val(compareMove) [62]
-----------------------------------------------
                0.00    0.00  106223/106223      void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [23]
[76]     0.0    0.00    0.00  106223         __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator-(long) const [76]
                0.00    0.00  106223/5230515     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move* const&) [50]
-----------------------------------------------
                0.00    0.00      13/106223      void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [264]
                0.00    0.00  106210/106223      void std::vector<Move, std::allocator<Move> >::emplace_back<Move>(Move&&) [78]
[77]     0.0    0.00    0.00  106223         void std::allocator_traits<std::allocator<Move> >::construct<Move, Move>(std::allocator<Move>&, Move*, Move&&) [77]
                0.00    0.00  106223/322777      Move&& std::forward<Move>(std::remove_reference<Move>::type&) [58]
                0.00    0.00  106223/106223      void __gnu_cxx::new_allocator<Move>::construct<Move, Move>(Move*, Move&&) [74]
-----------------------------------------------
                0.00    0.00  106223/106223      std::vector<Move, std::allocator<Move> >::push_back(Move&&) [79]
[78]     0.0    0.00    0.00  106223         void std::vector<Move, std::allocator<Move> >::emplace_back<Move>(Move&&) [78]
                0.00    0.00  106223/322777      Move&& std::forward<Move>(std::remove_reference<Move>::type&) [58]
                0.00    0.00  106210/106223      void std::allocator_traits<std::allocator<Move> >::construct<Move, Move>(std::allocator<Move>&, Move*, Move&&) [77]
                0.00    0.00      13/13          void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [264]
-----------------------------------------------
                0.00    0.00  106223/106223      std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [21]
[79]     0.0    0.00    0.00  106223         std::vector<Move, std::allocator<Move> >::push_back(Move&&) [79]
                0.00    0.00  106223/2120737     std::remove_reference<Move&>::type&& std::move<Move&>(Move&) [52]
                0.00    0.00  106223/106223      void std::vector<Move, std::allocator<Move> >::emplace_back<Move>(Move&&) [78]
-----------------------------------------------
                0.00    0.00  103629/103629      __gnu_cxx::__ops::_Iter_comp_iter<compareMove> __gnu_cxx::__ops::__iter_comp_iter<compareMove>(compareMove) [81]
[80]     0.0    0.00    0.00  103629         __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::_Iter_comp_iter(compareMove) [80]
-----------------------------------------------
                0.00    0.00       1/103629      void std::make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [384]
                0.00    0.00  103628/103629      void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [6]
[81]     0.0    0.00    0.00  103629         __gnu_cxx::__ops::_Iter_comp_iter<compareMove> __gnu_cxx::__ops::__iter_comp_iter<compareMove>(compareMove) [81]
                0.00    0.00  103629/103629      __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::_Iter_comp_iter(compareMove) [80]
-----------------------------------------------
                0.00    0.00  103628/103628      void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [6]
[82]     0.0    0.00    0.00  103628         __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator--() [82]
-----------------------------------------------
                0.00    0.00  103628/103628      void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [5]
[83]     0.0    0.00    0.00  103628         __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(__gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [83]
                0.00    0.00  103628/209851      __gnu_cxx::__ops::_Iter_comp_val<compareMove>::_Iter_comp_val(compareMove) [62]
-----------------------------------------------
                0.00    0.00      13/100065      void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [264]
                0.00    0.00      52/100065      std::vector<Move, std::allocator<Move> >::_M_check_len(unsigned long, char const*) const [259]
                0.00    0.00  100000/100065      std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::size() const [85]
[84]     0.0    0.00    0.00  100065         std::vector<Move, std::allocator<Move> >::size() const [84]
-----------------------------------------------
                0.00    0.00  100000/100000      Board::step(int) [2]
[85]     0.0    0.00    0.00  100000         std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::size() const [85]
                0.00    0.00  100000/100065      std::vector<Move, std::allocator<Move> >::size() const [84]
-----------------------------------------------
                0.00    0.00   16983/16983       Board::step(int) [2]
[86]     0.0    0.00    0.00   16983         Faction::getAccuracy() [86]
-----------------------------------------------
                0.00    0.00   16983/16983       Board::step(int) [2]
[87]     0.0    0.00    0.00   16983         Faction::getStrength() [87]
-----------------------------------------------
                0.00    0.00   14444/14444       Board::step(int) [2]
[88]     0.0    0.00    0.00   14444         Faction::getArmor() [88]
-----------------------------------------------
                0.00    0.00     448/10688       void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [29]
                0.00    0.00    2560/10688       void std::allocator_traits<std::allocator<Cell> >::construct<Cell, Cell const&>(std::allocator<Cell>&, Cell*, Cell const&) [114]
                0.00    0.00    2560/10688       void __gnu_cxx::new_allocator<Cell>::construct<Cell, Cell const&>(Cell*, Cell const&) [113]
                0.00    0.00    5120/10688       void std::_Construct<Cell, Cell const&>(Cell*, Cell const&) [99]
[89]     0.0    0.00    0.00   10688         Cell const& std::forward<Cell const&>(std::remove_reference<Cell const&>::type&) [89]
-----------------------------------------------
                0.00    0.00   10496/10496       bool __gnu_cxx::operator!=<Cell const*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&) [96]
[90]     0.0    0.00    0.00   10496         __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::base() const [90]
-----------------------------------------------
                0.00    0.00    4032/9152        Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [133]
                0.00    0.00    5120/9152        Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [162]
[91]     0.0    0.00    0.00    9152         Cell* std::__addressof<Cell>(Cell&) [91]
-----------------------------------------------
                0.00    0.00    8960/8960        bool std::operator==<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&) [100]
[92]     0.0    0.00    0.00    8960         std::move_iterator<Cell*>::base() const [92]
-----------------------------------------------
                0.00    0.00    2560/8917        Board::init() [25]
                0.00    0.00    6357/8917        Board::setCell(int, int, int, int) [24]
[93]     0.0    0.00    0.00    8917         Cell::init(int) [93]
-----------------------------------------------
                0.00    0.00    8216/8216        bool std::operator==<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&) [102]
[94]     0.0    0.00    0.00    8216         std::move_iterator<Move*>::base() const [94]
-----------------------------------------------
                0.00    0.00    6357/6357        Board::setCell(int, int, int, int) [24]
[95]     0.0    0.00    0.00    6357         Faction::getHealth() [95]
-----------------------------------------------
                0.00    0.00    5248/5248        Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [162]
[96]     0.0    0.00    0.00    5248         bool __gnu_cxx::operator!=<Cell const*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&) [96]
                0.00    0.00   10496/10496       __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::base() const [90]
-----------------------------------------------
                0.00    0.00    5120/5120        Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [162]
[97]     0.0    0.00    0.00    5120         __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator++() [97]
-----------------------------------------------
                0.00    0.00    5120/5120        Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [162]
[98]     0.0    0.00    0.00    5120         __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator*() const [98]
-----------------------------------------------
                0.00    0.00    5120/5120        Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [162]
[99]     0.0    0.00    0.00    5120         void std::_Construct<Cell, Cell const&>(Cell*, Cell const&) [99]
                0.00    0.00    5120/10688       Cell const& std::forward<Cell const&>(std::remove_reference<Cell const&>::type&) [89]
                0.00    0.00    5120/122270      operator new(unsigned long, void*) [72]
-----------------------------------------------
                0.00    0.00    4480/4480        bool std::operator!=<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&) [101]
[100]    0.0    0.00    0.00    4480         bool std::operator==<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&) [100]
                0.00    0.00    8960/8960        std::move_iterator<Cell*>::base() const [92]
-----------------------------------------------
                0.00    0.00    4480/4480        Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [133]
[101]    0.0    0.00    0.00    4480         bool std::operator!=<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&) [101]
                0.00    0.00    4480/4480        bool std::operator==<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&) [100]
-----------------------------------------------
                0.00    0.00    4108/4108        bool std::operator!=<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&) [103]
[102]    0.0    0.00    0.00    4108         bool std::operator==<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&) [102]
                0.00    0.00    8216/8216        std::move_iterator<Move*>::base() const [94]
-----------------------------------------------
                0.00    0.00    4108/4108        Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [263]
[103]    0.0    0.00    0.00    4108         bool std::operator!=<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&) [103]
                0.00    0.00    4108/4108        bool std::operator==<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&) [102]
-----------------------------------------------
                0.00    0.00    4095/4095        Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [263]
[104]    0.0    0.00    0.00    4095         std::move_iterator<Move*>::operator*() const [104]
-----------------------------------------------
                0.00    0.00    4095/4095        Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [263]
[105]    0.0    0.00    0.00    4095         std::move_iterator<Move*>::operator++() [105]
-----------------------------------------------
                0.00    0.00    4095/4095        Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [263]
[106]    0.0    0.00    0.00    4095         void std::_Construct<Move, Move>(Move*, Move&&) [106]
                0.00    0.00    4095/322777      Move&& std::forward<Move>(std::remove_reference<Move>::type&) [58]
                0.00    0.00    4095/122270      operator new(unsigned long, void*) [72]
-----------------------------------------------
                0.00    0.00    4095/4095        Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [263]
[107]    0.0    0.00    0.00    4095         Move* std::__addressof<Move>(Move&) [107]
-----------------------------------------------
                0.00    0.00    4032/4032        Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [133]
[108]    0.0    0.00    0.00    4032         std::move_iterator<Cell*>::operator*() const [108]
-----------------------------------------------
                0.00    0.00    4032/4032        Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [133]
[109]    0.0    0.00    0.00    4032         std::move_iterator<Cell*>::operator++() [109]
-----------------------------------------------
                0.00    0.00    4032/4032        Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [133]
[110]    0.0    0.00    0.00    4032         void std::_Construct<Cell, Cell>(Cell*, Cell&&) [110]
                0.00    0.00    4032/4032        Cell&& std::forward<Cell>(std::remove_reference<Cell>::type&) [111]
                0.00    0.00    4032/122270      operator new(unsigned long, void*) [72]
-----------------------------------------------
                0.00    0.00    4032/4032        void std::_Construct<Cell, Cell>(Cell*, Cell&&) [110]
[111]    0.0    0.00    0.00    4032         Cell&& std::forward<Cell>(std::remove_reference<Cell>::type&) [111]
-----------------------------------------------
                0.00    0.00    2560/2560        Board::Board(int, int, int, int, int, XColor*) [27]
[112]    0.0    0.00    0.00    2560         Cell::Cell(int, int) [112]
-----------------------------------------------
                0.00    0.00    2560/2560        void std::allocator_traits<std::allocator<Cell> >::construct<Cell, Cell const&>(std::allocator<Cell>&, Cell*, Cell const&) [114]
[113]    0.0    0.00    0.00    2560         void __gnu_cxx::new_allocator<Cell>::construct<Cell, Cell const&>(Cell*, Cell const&) [113]
                0.00    0.00    2560/10688       Cell const& std::forward<Cell const&>(std::remove_reference<Cell const&>::type&) [89]
                0.00    0.00    2560/122270      operator new(unsigned long, void*) [72]
-----------------------------------------------
                0.00    0.00     448/2560        void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [29]
                0.00    0.00    2112/2560        std::vector<Cell, std::allocator<Cell> >::push_back(Cell const&) [28]
[114]    0.0    0.00    0.00    2560         void std::allocator_traits<std::allocator<Cell> >::construct<Cell, Cell const&>(std::allocator<Cell>&, Cell*, Cell const&) [114]
                0.00    0.00    2560/10688       Cell const& std::forward<Cell const&>(std::remove_reference<Cell const&>::type&) [89]
                0.00    0.00    2560/2560        void __gnu_cxx::new_allocator<Cell>::construct<Cell, Cell const&>(Cell*, Cell const&) [113]
-----------------------------------------------
                0.00    0.00     576/1472        __gnu_cxx::new_allocator<Cell>::allocate(unsigned long, void const*) [127]
                0.00    0.00     896/1472        std::allocator_traits<std::allocator<Cell> >::max_size(std::allocator<Cell> const&) [120]
[115]    0.0    0.00    0.00    1472         __gnu_cxx::new_allocator<Cell>::max_size() const [115]
-----------------------------------------------
                0.00    0.00      63/1342        std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&) [185]
                0.00    0.00     128/1342        std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [32]
                0.00    0.00     255/1342        std::vector<Cell, std::allocator<Cell> >::~vector() [145]
                0.00    0.00     896/1342        void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [29]
[116]    0.0    0.00    0.00    1342         std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() [116]
-----------------------------------------------
                0.00    0.00     128/1024        std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [32]
                0.00    0.00     896/1024        std::vector<Cell, std::allocator<Cell> >::max_size() const [118]
[117]    0.0    0.00    0.00    1024         std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() const [117]
-----------------------------------------------
                0.00    0.00     896/896         std::vector<Cell, std::allocator<Cell> >::_M_check_len(unsigned long, char const*) const [30]
[118]    0.0    0.00    0.00     896         std::vector<Cell, std::allocator<Cell> >::max_size() const [118]
                0.00    0.00     896/1024        std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() const [117]
                0.00    0.00     896/896         std::allocator_traits<std::allocator<Cell> >::max_size(std::allocator<Cell> const&) [120]
-----------------------------------------------
                0.00    0.00     896/896         std::move_iterator<Cell*> std::__make_move_if_noexcept_iterator<Cell, std::move_iterator<Cell*> >(Cell*) [121]
[119]    0.0    0.00    0.00     896         std::move_iterator<Cell*>::move_iterator(Cell*) [119]
-----------------------------------------------
                0.00    0.00     896/896         std::vector<Cell, std::allocator<Cell> >::max_size() const [118]
[120]    0.0    0.00    0.00     896         std::allocator_traits<std::allocator<Cell> >::max_size(std::allocator<Cell> const&) [120]
                0.00    0.00     896/1472        __gnu_cxx::new_allocator<Cell>::max_size() const [115]
-----------------------------------------------
                0.00    0.00     896/896         Cell* std::__uninitialized_move_if_noexcept_a<Cell*, Cell*, std::allocator<Cell> >(Cell*, Cell*, Cell*, std::allocator<Cell>&) [136]
[121]    0.0    0.00    0.00     896         std::move_iterator<Cell*> std::__make_move_if_noexcept_iterator<Cell, std::move_iterator<Cell*> >(Cell*) [121]
                0.00    0.00     896/896         std::move_iterator<Cell*>::move_iterator(Cell*) [119]
-----------------------------------------------
                0.00    0.00     703/703         void std::_Destroy<Cell*>(Cell*, Cell*) [124]
[122]    0.0    0.00    0.00     703         void std::_Destroy_aux<true>::__destroy<Cell*>(Cell*, Cell*) [122]
-----------------------------------------------
                0.00    0.00     255/703         std::_Vector_base<Cell, std::allocator<Cell> >::~_Vector_base() [144]
                0.00    0.00     448/703         void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [29]
[123]    0.0    0.00    0.00     703         std::_Vector_base<Cell, std::allocator<Cell> >::_M_deallocate(Cell*, unsigned long) [123]
                0.00    0.00     576/576         std::allocator_traits<std::allocator<Cell> >::deallocate(std::allocator<Cell>&, Cell*, unsigned long) [129]
-----------------------------------------------
                0.00    0.00     703/703         void std::_Destroy<Cell*, Cell>(Cell*, Cell*, std::allocator<Cell>&) [125]
[124]    0.0    0.00    0.00     703         void std::_Destroy<Cell*>(Cell*, Cell*) [124]
                0.00    0.00     703/703         void std::_Destroy_aux<true>::__destroy<Cell*>(Cell*, Cell*) [122]
-----------------------------------------------
                0.00    0.00     255/703         std::vector<Cell, std::allocator<Cell> >::~vector() [145]
                0.00    0.00     448/703         void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [29]
[125]    0.0    0.00    0.00     703         void std::_Destroy<Cell*, Cell>(Cell*, Cell*, std::allocator<Cell>&) [125]
                0.00    0.00     703/703         void std::_Destroy<Cell*>(Cell*, Cell*) [124]
-----------------------------------------------
                0.00    0.00     576/576         std::allocator_traits<std::allocator<Cell> >::deallocate(std::allocator<Cell>&, Cell*, unsigned long) [129]
[126]    0.0    0.00    0.00     576         __gnu_cxx::new_allocator<Cell>::deallocate(Cell*, unsigned long) [126]
-----------------------------------------------
                0.00    0.00     576/576         std::allocator_traits<std::allocator<Cell> >::allocate(std::allocator<Cell>&, unsigned long) [130]
[127]    0.0    0.00    0.00     576         __gnu_cxx::new_allocator<Cell>::allocate(unsigned long, void const*) [127]
                0.00    0.00     576/1472        __gnu_cxx::new_allocator<Cell>::max_size() const [115]
-----------------------------------------------
                0.00    0.00     128/576         std::_Vector_base<Cell, std::allocator<Cell> >::_M_create_storage(unsigned long) [159]
                0.00    0.00     448/576         void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [29]
[128]    0.0    0.00    0.00     576         std::_Vector_base<Cell, std::allocator<Cell> >::_M_allocate(unsigned long) [128]
                0.00    0.00     576/576         std::allocator_traits<std::allocator<Cell> >::allocate(std::allocator<Cell>&, unsigned long) [130]
-----------------------------------------------
                0.00    0.00     576/576         std::_Vector_base<Cell, std::allocator<Cell> >::_M_deallocate(Cell*, unsigned long) [123]
[129]    0.0    0.00    0.00     576         std::allocator_traits<std::allocator<Cell> >::deallocate(std::allocator<Cell>&, Cell*, unsigned long) [129]
                0.00    0.00     576/576         __gnu_cxx::new_allocator<Cell>::deallocate(Cell*, unsigned long) [126]
-----------------------------------------------
                0.00    0.00     576/576         std::_Vector_base<Cell, std::allocator<Cell> >::_M_allocate(unsigned long) [128]
[130]    0.0    0.00    0.00     576         std::allocator_traits<std::allocator<Cell> >::allocate(std::allocator<Cell>&, unsigned long) [130]
                0.00    0.00     576/576         __gnu_cxx::new_allocator<Cell>::allocate(unsigned long, void const*) [127]
-----------------------------------------------
                0.00    0.00     567/567         std::enable_if<std::__and_<std::is_move_constructible<Cell*>, std::is_move_assignable<Cell*> >::value, void>::type std::swap<Cell*>(Cell*&, Cell*&) [150]
[131]    0.0    0.00    0.00     567         std::remove_reference<Cell*&>::type&& std::move<Cell*&>(Cell*&) [131]
-----------------------------------------------
                0.00    0.00       4/500         std::vector<Faction, std::allocator<Faction> >::_M_check_len(unsigned long, char const*) const [323]
                0.00    0.00       7/500         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_check_len(unsigned long, char const*) const [34]
                0.00    0.00      13/500         std::vector<Move, std::allocator<Move> >::_M_check_len(unsigned long, char const*) const [259]
                0.00    0.00      28/500         std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [218]
                0.00    0.00     448/500         std::vector<Cell, std::allocator<Cell> >::_M_check_len(unsigned long, char const*) const [30]
[132]    0.0    0.00    0.00     500         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [132]
-----------------------------------------------
                0.00    0.00     448/448         Cell* std::uninitialized_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [134]
[133]    0.0    0.00    0.00     448         Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [133]
                0.00    0.00    4480/4480        bool std::operator!=<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&) [101]
                0.00    0.00    4032/4032        std::move_iterator<Cell*>::operator*() const [108]
                0.00    0.00    4032/9152        Cell* std::__addressof<Cell>(Cell&) [91]
                0.00    0.00    4032/4032        void std::_Construct<Cell, Cell>(Cell*, Cell&&) [110]
                0.00    0.00    4032/4032        std::move_iterator<Cell*>::operator++() [109]
-----------------------------------------------
                0.00    0.00     448/448         Cell* std::__uninitialized_copy_a<std::move_iterator<Cell*>, Cell*, Cell>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*, std::allocator<Cell>&) [135]
[134]    0.0    0.00    0.00     448         Cell* std::uninitialized_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [134]
                0.00    0.00     448/448         Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [133]
-----------------------------------------------
                0.00    0.00     448/448         Cell* std::__uninitialized_move_if_noexcept_a<Cell*, Cell*, std::allocator<Cell> >(Cell*, Cell*, Cell*, std::allocator<Cell>&) [136]
[135]    0.0    0.00    0.00     448         Cell* std::__uninitialized_copy_a<std::move_iterator<Cell*>, Cell*, Cell>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*, std::allocator<Cell>&) [135]
                0.00    0.00     448/448         Cell* std::uninitialized_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [134]
-----------------------------------------------
                0.00    0.00     448/448         void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [29]
[136]    0.0    0.00    0.00     448         Cell* std::__uninitialized_move_if_noexcept_a<Cell*, Cell*, std::allocator<Cell> >(Cell*, Cell*, Cell*, std::allocator<Cell>&) [136]
                0.00    0.00     896/896         std::move_iterator<Cell*> std::__make_move_if_noexcept_iterator<Cell, std::move_iterator<Cell*> >(Cell*) [121]
                0.00    0.00     448/448         Cell* std::__uninitialized_copy_a<std::move_iterator<Cell*>, Cell*, Cell>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*, std::allocator<Cell>&) [135]
-----------------------------------------------
                0.00    0.00     383/383         std::allocator<Cell>::~allocator() [138]
[137]    0.0    0.00    0.00     383         __gnu_cxx::new_allocator<Cell>::~new_allocator() [137]
-----------------------------------------------
                0.00    0.00     128/383         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [32]
                0.00    0.00     255/383         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::~_Vector_impl() [143]
[138]    0.0    0.00    0.00     383         std::allocator<Cell>::~allocator() [138]
                0.00    0.00     383/383         __gnu_cxx::new_allocator<Cell>::~new_allocator() [137]
-----------------------------------------------
                0.00    0.00     319/319         std::allocator<Cell>::allocator(std::allocator<Cell> const&) [140]
[139]    0.0    0.00    0.00     319         __gnu_cxx::new_allocator<Cell>::new_allocator(__gnu_cxx::new_allocator<Cell> const&) [139]
-----------------------------------------------
                0.00    0.00      63/319         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell>&&) [184]
                0.00    0.00     128/319         std::allocator_traits<std::allocator<Cell> >::select_on_container_copy_construction(std::allocator<Cell> const&) [161]
                0.00    0.00     128/319         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell> const&) [158]
[140]    0.0    0.00    0.00     319         std::allocator<Cell>::allocator(std::allocator<Cell> const&) [140]
                0.00    0.00     319/319         __gnu_cxx::new_allocator<Cell>::new_allocator(__gnu_cxx::new_allocator<Cell> const&) [139]
-----------------------------------------------
                0.00    0.00      63/318         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [302]
                0.00    0.00      64/318         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [39]
                0.00    0.00     191/318         void std::_Destroy_aux<false>::__destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [270]
[141]    0.0    0.00    0.00     318         std::vector<Cell, std::allocator<Cell> >* std::__addressof<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >&) [141]
-----------------------------------------------
                0.00    0.00     128/256         std::vector<Cell, std::allocator<Cell> >::begin() const [157]
                0.00    0.00     128/256         std::vector<Cell, std::allocator<Cell> >::end() const [156]
[142]    0.0    0.00    0.00     256         __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::__normal_iterator(Cell const* const&) [142]
-----------------------------------------------
                0.00    0.00     255/255         std::_Vector_base<Cell, std::allocator<Cell> >::~_Vector_base() [144]
[143]    0.0    0.00    0.00     255         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::~_Vector_impl() [143]
                0.00    0.00     255/383         std::allocator<Cell>::~allocator() [138]
-----------------------------------------------
                0.00    0.00     255/255         std::vector<Cell, std::allocator<Cell> >::~vector() [145]
[144]    0.0    0.00    0.00     255         std::_Vector_base<Cell, std::allocator<Cell> >::~_Vector_base() [144]
                0.00    0.00     255/255         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::~_Vector_impl() [143]
                0.00    0.00     255/703         std::_Vector_base<Cell, std::allocator<Cell> >::_M_deallocate(Cell*, unsigned long) [123]
-----------------------------------------------
                0.00    0.00      64/255         Board::Board(int, int, int, int, int, XColor*) [27]
                0.00    0.00     191/255         void std::_Destroy<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*) [149]
[145]    0.0    0.00    0.00     255         std::vector<Cell, std::allocator<Cell> >::~vector() [145]
                0.00    0.00     255/1342        std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() [116]
                0.00    0.00     255/703         void std::_Destroy<Cell*, Cell>(Cell*, Cell*, std::allocator<Cell>&) [125]
                0.00    0.00     255/255         std::_Vector_base<Cell, std::allocator<Cell> >::~_Vector_base() [144]
-----------------------------------------------
                0.00    0.00      28/252         void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [224]
                0.00    0.00      42/252         Faction::init(int) [289]
                0.00    0.00      70/252         std::vector<int, std::allocator<int> >::_M_range_check(unsigned long) const [169]
                0.00    0.00     112/252         std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [218]
[146]    0.0    0.00    0.00     252         std::vector<int, std::allocator<int> >::size() const [146]
-----------------------------------------------
                0.00    0.00      14/199         bool __gnu_cxx::operator==<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [294]
                0.00    0.00      42/199         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [240]
                0.00    0.00      45/199         int* std::__niter_base<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [202]
                0.00    0.00      98/199         bool __gnu_cxx::operator!=<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [201]
[147]    0.0    0.00    0.00     199         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [147]
-----------------------------------------------
                0.00    0.00       7/199         void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [33]
                0.00    0.00      64/199         void std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [37]
                0.00    0.00      64/199         void __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [36]
                0.00    0.00      64/199         void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [38]
[148]    0.0    0.00    0.00     199         std::vector<Cell, std::allocator<Cell> > const& std::forward<std::vector<Cell, std::allocator<Cell> > const&>(std::remove_reference<std::vector<Cell, std::allocator<Cell> > const&>::type&) [148]
-----------------------------------------------
                0.00    0.00     191/191         void std::_Destroy_aux<false>::__destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [270]
[149]    0.0    0.00    0.00     191         void std::_Destroy<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*) [149]
                0.00    0.00     191/255         std::vector<Cell, std::allocator<Cell> >::~vector() [145]
-----------------------------------------------
                0.00    0.00     189/189         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_M_swap_data(std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl&) [183]
[150]    0.0    0.00    0.00     189         std::enable_if<std::__and_<std::is_move_constructible<Cell*>, std::is_move_assignable<Cell*> >::value, void>::type std::swap<Cell*>(Cell*&, Cell*&) [150]
                0.00    0.00     567/567         std::remove_reference<Cell*&>::type&& std::move<Cell*&>(Cell*&) [131]
-----------------------------------------------
                0.00    0.00      27/181         bool __gnu_cxx::__ops::_Val_less_iter::operator()<int, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(int&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [232]
                0.00    0.00      30/181         void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [308]
                0.00    0.00      54/181         void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter) [242]
                0.00    0.00      70/181         bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [209]
[151]    0.0    0.00    0.00     181         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [151]
-----------------------------------------------
                0.00    0.00      28/154         void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [224]
                0.00    0.00      42/154         void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [205]
                0.00    0.00      42/154         void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [204]
                0.00    0.00      42/154         void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [203]
[152]    0.0    0.00    0.00     154         int&& std::forward<int>(std::remove_reference<int>::type&) [152]
-----------------------------------------------
                0.00    0.00     140/140         bool std::operator==<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&) [172]
[153]    0.0    0.00    0.00     140         std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::base() const [153]
-----------------------------------------------
                0.00    0.00     130/130         bool __gnu_cxx::operator!=<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&) [174]
[154]    0.0    0.00    0.00     130         __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::base() const [154]
-----------------------------------------------
                0.00    0.00     128/128         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [32]
[155]    0.0    0.00    0.00     128         __gnu_cxx::__alloc_traits<std::allocator<Cell> >::_S_select_on_copy(std::allocator<Cell> const&) [155]
                0.00    0.00     128/128         std::allocator_traits<std::allocator<Cell> >::select_on_container_copy_construction(std::allocator<Cell> const&) [161]
-----------------------------------------------
                0.00    0.00     128/128         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [32]
[156]    0.0    0.00    0.00     128         std::vector<Cell, std::allocator<Cell> >::end() const [156]
                0.00    0.00     128/256         __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::__normal_iterator(Cell const* const&) [142]
-----------------------------------------------
                0.00    0.00     128/128         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [32]
[157]    0.0    0.00    0.00     128         std::vector<Cell, std::allocator<Cell> >::begin() const [157]
                0.00    0.00     128/256         __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::__normal_iterator(Cell const* const&) [142]
-----------------------------------------------
                0.00    0.00     128/128         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(unsigned long, std::allocator<Cell> const&) [160]
[158]    0.0    0.00    0.00     128         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell> const&) [158]
                0.00    0.00     128/319         std::allocator<Cell>::allocator(std::allocator<Cell> const&) [140]
-----------------------------------------------
                0.00    0.00     128/128         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(unsigned long, std::allocator<Cell> const&) [160]
[159]    0.0    0.00    0.00     128         std::_Vector_base<Cell, std::allocator<Cell> >::_M_create_storage(unsigned long) [159]
                0.00    0.00     128/576         std::_Vector_base<Cell, std::allocator<Cell> >::_M_allocate(unsigned long) [128]
-----------------------------------------------
                0.00    0.00     128/128         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [32]
[160]    0.0    0.00    0.00     128         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(unsigned long, std::allocator<Cell> const&) [160]
                0.00    0.00     128/128         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell> const&) [158]
                0.00    0.00     128/128         std::_Vector_base<Cell, std::allocator<Cell> >::_M_create_storage(unsigned long) [159]
-----------------------------------------------
                0.00    0.00     128/128         __gnu_cxx::__alloc_traits<std::allocator<Cell> >::_S_select_on_copy(std::allocator<Cell> const&) [155]
[161]    0.0    0.00    0.00     128         std::allocator_traits<std::allocator<Cell> >::select_on_container_copy_construction(std::allocator<Cell> const&) [161]
                0.00    0.00     128/319         std::allocator<Cell>::allocator(std::allocator<Cell> const&) [140]
-----------------------------------------------
                0.00    0.00     128/128         Cell* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [163]
[162]    0.0    0.00    0.00     128         Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [162]
                0.00    0.00    5248/5248        bool __gnu_cxx::operator!=<Cell const*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&) [96]
                0.00    0.00    5120/5120        __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator*() const [98]
                0.00    0.00    5120/5120        void std::_Construct<Cell, Cell const&>(Cell*, Cell const&) [99]
                0.00    0.00    5120/9152        Cell* std::__addressof<Cell>(Cell&) [91]
                0.00    0.00    5120/5120        __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator++() [97]
-----------------------------------------------
                0.00    0.00     128/128         Cell* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, Cell>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, std::allocator<Cell>&) [164]
[163]    0.0    0.00    0.00     128         Cell* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [163]
                0.00    0.00     128/128         Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [162]
-----------------------------------------------
                0.00    0.00     128/128         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [32]
[164]    0.0    0.00    0.00     128         Cell* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, Cell>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, std::allocator<Cell>&) [164]
                0.00    0.00     128/128         Cell* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [163]
-----------------------------------------------
                0.00    0.00      63/126         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&) [185]
                0.00    0.00      63/126         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell>&&) [184]
[165]    0.0    0.00    0.00     126         std::remove_reference<std::allocator<Cell>&>::type&& std::move<std::allocator<Cell>&>(std::allocator<Cell>&) [165]
-----------------------------------------------
                0.00    0.00      30/119         void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [308]
                0.00    0.00      42/119         std::vector<int, std::allocator<int> >::push_back(int&&) [206]
                0.00    0.00      47/119         void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter) [242]
[166]    0.0    0.00    0.00     119         std::remove_reference<int&>::type&& std::move<int&>(int&) [166]
-----------------------------------------------
                0.00    0.00      28/84          __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [217]
                0.00    0.00      56/84          std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [196]
[167]    0.0    0.00    0.00      84         __gnu_cxx::new_allocator<int>::max_size() const [167]
-----------------------------------------------
                0.00    0.00      84/84          int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*) [226]
[168]    0.0    0.00    0.00      84         int* std::__niter_base<int*>(int*) [168]
-----------------------------------------------
                0.00    0.00      70/70          std::vector<int, std::allocator<int> >::at(unsigned long) [170]
[169]    0.0    0.00    0.00      70         std::vector<int, std::allocator<int> >::_M_range_check(unsigned long) const [169]
                0.00    0.00      70/252         std::vector<int, std::allocator<int> >::size() const [146]
-----------------------------------------------
                0.00    0.00      70/70          Faction::init(int) [289]
[170]    0.0    0.00    0.00      70         std::vector<int, std::allocator<int> >::at(unsigned long) [170]
                0.00    0.00      70/70          std::vector<int, std::allocator<int> >::_M_range_check(unsigned long) const [169]
                0.00    0.00      70/70          std::vector<int, std::allocator<int> >::operator[](unsigned long) [171]
-----------------------------------------------
                0.00    0.00      70/70          std::vector<int, std::allocator<int> >::at(unsigned long) [170]
[171]    0.0    0.00    0.00      70         std::vector<int, std::allocator<int> >::operator[](unsigned long) [171]
-----------------------------------------------
                0.00    0.00      70/70          bool std::operator!=<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&) [173]
[172]    0.0    0.00    0.00      70         bool std::operator==<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&) [172]
                0.00    0.00     140/140         std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::base() const [153]
-----------------------------------------------
                0.00    0.00      70/70          std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [302]
[173]    0.0    0.00    0.00      70         bool std::operator!=<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&) [173]
                0.00    0.00      70/70          bool std::operator==<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&) [172]
-----------------------------------------------
                0.00    0.00      65/65          std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [39]
[174]    0.0    0.00    0.00      65         bool __gnu_cxx::operator!=<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&) [174]
                0.00    0.00     130/130         __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::base() const [154]
-----------------------------------------------
                0.00    0.00      64/64          std::allocator<Cell>::allocator() [178]
[175]    0.0    0.00    0.00      64         __gnu_cxx::new_allocator<Cell>::new_allocator() [175]
-----------------------------------------------
                0.00    0.00      64/64          std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [39]
[176]    0.0    0.00    0.00      64         __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator++() [176]
-----------------------------------------------
                0.00    0.00      64/64          std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [39]
[177]    0.0    0.00    0.00      64         __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator*() const [177]
-----------------------------------------------
                0.00    0.00      64/64          std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl() [179]
[178]    0.0    0.00    0.00      64         std::allocator<Cell>::allocator() [178]
                0.00    0.00      64/64          __gnu_cxx::new_allocator<Cell>::new_allocator() [175]
-----------------------------------------------
                0.00    0.00      64/64          std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base() [180]
[179]    0.0    0.00    0.00      64         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl() [179]
                0.00    0.00      64/64          std::allocator<Cell>::allocator() [178]
-----------------------------------------------
                0.00    0.00      64/64          std::vector<Cell, std::allocator<Cell> >::vector() [181]
[180]    0.0    0.00    0.00      64         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base() [180]
                0.00    0.00      64/64          std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl() [179]
-----------------------------------------------
                0.00    0.00      64/64          Board::Board(int, int, int, int, int, XColor*) [27]
[181]    0.0    0.00    0.00      64         std::vector<Cell, std::allocator<Cell> >::vector() [181]
                0.00    0.00      64/64          std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base() [180]
-----------------------------------------------
                0.00    0.00      63/63          std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [302]
[182]    0.0    0.00    0.00      63         std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator*() const [182]
-----------------------------------------------
                0.00    0.00      63/63          std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&) [185]
[183]    0.0    0.00    0.00      63         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_M_swap_data(std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl&) [183]
                0.00    0.00     189/189         std::enable_if<std::__and_<std::is_move_constructible<Cell*>, std::is_move_assignable<Cell*> >::value, void>::type std::swap<Cell*>(Cell*&, Cell*&) [150]
-----------------------------------------------
                0.00    0.00      63/63          std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&) [185]
[184]    0.0    0.00    0.00      63         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell>&&) [184]
                0.00    0.00      63/126         std::remove_reference<std::allocator<Cell>&>::type&& std::move<std::allocator<Cell>&>(std::allocator<Cell>&) [165]
                0.00    0.00      63/319         std::allocator<Cell>::allocator(std::allocator<Cell> const&) [140]
-----------------------------------------------
                0.00    0.00      63/63          std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> >&&) [188]
[185]    0.0    0.00    0.00      63         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&) [185]
                0.00    0.00      63/1342        std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() [116]
                0.00    0.00      63/126         std::remove_reference<std::allocator<Cell>&>::type&& std::move<std::allocator<Cell>&>(std::allocator<Cell>&) [165]
                0.00    0.00      63/63          std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell>&&) [184]
                0.00    0.00      63/63          std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_M_swap_data(std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl&) [183]
-----------------------------------------------
                0.00    0.00       7/63          std::vector<int, std::allocator<int> >::~vector() [307]
                0.00    0.00      56/63          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [224]
[186]    0.0    0.00    0.00      63         std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [186]
-----------------------------------------------
                0.00    0.00      63/63          std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [302]
[187]    0.0    0.00    0.00      63         std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator++() [187]
-----------------------------------------------
                0.00    0.00      63/63          void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >&&) [189]
[188]    0.0    0.00    0.00      63         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> >&&) [188]
                0.00    0.00      63/63          std::remove_reference<std::vector<Cell, std::allocator<Cell> >&>::type&& std::move<std::vector<Cell, std::allocator<Cell> >&>(std::vector<Cell, std::allocator<Cell> >&) [190]
                0.00    0.00      63/63          std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&) [185]
-----------------------------------------------
                0.00    0.00      63/63          std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [302]
[189]    0.0    0.00    0.00      63         void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >&&) [189]
                0.00    0.00      63/63          std::vector<Cell, std::allocator<Cell> >&& std::forward<std::vector<Cell, std::allocator<Cell> > >(std::remove_reference<std::vector<Cell, std::allocator<Cell> > >::type&) [191]
                0.00    0.00      63/122270      operator new(unsigned long, void*) [72]
                0.00    0.00      63/63          std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> >&&) [188]
-----------------------------------------------
                0.00    0.00      63/63          std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> >&&) [188]
[190]    0.0    0.00    0.00      63         std::remove_reference<std::vector<Cell, std::allocator<Cell> >&>::type&& std::move<std::vector<Cell, std::allocator<Cell> >&>(std::vector<Cell, std::allocator<Cell> >&) [190]
-----------------------------------------------
                0.00    0.00      63/63          void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >&&) [189]
[191]    0.0    0.00    0.00      63         std::vector<Cell, std::allocator<Cell> >&& std::forward<std::vector<Cell, std::allocator<Cell> > >(std::remove_reference<std::vector<Cell, std::allocator<Cell> > >::type&) [191]
-----------------------------------------------
                0.00    0.00      56/56          std::vector<int, std::allocator<int> >::max_size() const [194]
[192]    0.0    0.00    0.00      56         std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [192]
-----------------------------------------------
                0.00    0.00      56/56          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>) [197]
[193]    0.0    0.00    0.00      56         std::move_iterator<int*>::base() const [193]
-----------------------------------------------
                0.00    0.00      56/56          std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [218]
[194]    0.0    0.00    0.00      56         std::vector<int, std::allocator<int> >::max_size() const [194]
                0.00    0.00      56/56          std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [196]
                0.00    0.00      56/56          std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [192]
-----------------------------------------------
                0.00    0.00      56/56          std::move_iterator<int*> std::__make_move_if_noexcept_iterator<int, std::move_iterator<int*> >(int*) [199]
[195]    0.0    0.00    0.00      56         std::move_iterator<int*>::move_iterator(int*) [195]
-----------------------------------------------
                0.00    0.00      56/56          std::vector<int, std::allocator<int> >::max_size() const [194]
[196]    0.0    0.00    0.00      56         std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [196]
                0.00    0.00      56/84          __gnu_cxx::new_allocator<int>::max_size() const [167]
-----------------------------------------------
                0.00    0.00      56/56          int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [230]
[197]    0.0    0.00    0.00      56         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>) [197]
                0.00    0.00      56/56          int* std::__miter_base<int*>(int*) [198]
                0.00    0.00      56/56          std::move_iterator<int*>::base() const [193]
-----------------------------------------------
                0.00    0.00      56/56          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>) [197]
[198]    0.0    0.00    0.00      56         int* std::__miter_base<int*>(int*) [198]
-----------------------------------------------
                0.00    0.00      56/56          int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [229]
[199]    0.0    0.00    0.00      56         std::move_iterator<int*> std::__make_move_if_noexcept_iterator<int, std::move_iterator<int*> >(int*) [199]
                0.00    0.00      56/56          std::move_iterator<int*>::move_iterator(int*) [195]
-----------------------------------------------
                0.00    0.00       7/51          std::vector<int, std::allocator<int> >::begin() [305]
                0.00    0.00       7/51          std::vector<int, std::allocator<int> >::end() [304]
                0.00    0.00      15/51          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [249]
                0.00    0.00      22/51          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator+(long) const [239]
[200]    0.0    0.00    0.00      51         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [200]
-----------------------------------------------
                0.00    0.00       7/49          void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [316]
                0.00    0.00      42/49          void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [308]
[201]    0.0    0.00    0.00      49         bool __gnu_cxx::operator!=<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [201]
                0.00    0.00      98/199         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [147]
-----------------------------------------------
                0.00    0.00      45/45          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [249]
[202]    0.0    0.00    0.00      45         int* std::__niter_base<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [202]
                0.00    0.00      45/199         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [147]
-----------------------------------------------
                0.00    0.00      42/42          void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [204]
[203]    0.0    0.00    0.00      42         void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [203]
                0.00    0.00      42/154         int&& std::forward<int>(std::remove_reference<int>::type&) [152]
                0.00    0.00      42/122270      operator new(unsigned long, void*) [72]
-----------------------------------------------
                0.00    0.00      14/42          void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [205]
                0.00    0.00      28/42          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [224]
[204]    0.0    0.00    0.00      42         void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [204]
                0.00    0.00      42/154         int&& std::forward<int>(std::remove_reference<int>::type&) [152]
                0.00    0.00      42/42          void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [203]
-----------------------------------------------
                0.00    0.00      42/42          std::vector<int, std::allocator<int> >::push_back(int&&) [206]
[205]    0.0    0.00    0.00      42         void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [205]
                0.00    0.00      42/154         int&& std::forward<int>(std::remove_reference<int>::type&) [152]
                0.00    0.00      28/28          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [224]
                0.00    0.00      14/42          void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [204]
-----------------------------------------------
                0.00    0.00      42/42          Faction::init(int) [289]
[206]    0.0    0.00    0.00      42         std::vector<int, std::allocator<int> >::push_back(int&&) [206]
                0.00    0.00      42/119         std::remove_reference<int&>::type&& std::move<int&>(int&) [166]
                0.00    0.00      42/42          void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [205]
-----------------------------------------------
                0.00    0.00      13/39          __gnu_cxx::new_allocator<Move>::allocate(unsigned long, void const*) [258]
                0.00    0.00      26/39          std::allocator_traits<std::allocator<Move> >::max_size(std::allocator<Move> const&) [236]
[207]    0.0    0.00    0.00      39         __gnu_cxx::new_allocator<Move>::max_size() const [207]
-----------------------------------------------
                0.00    0.00      35/35          void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [308]
[208]    0.0    0.00    0.00      35         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator++() [208]
-----------------------------------------------
                0.00    0.00      35/35          void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [308]
[209]    0.0    0.00    0.00      35         bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [209]
                0.00    0.00      70/181         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [151]
-----------------------------------------------
                0.00    0.00      35/35          void std::_Destroy<int*>(int*, int*) [212]
[210]    0.0    0.00    0.00      35         void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [210]
-----------------------------------------------
                0.00    0.00       7/35          std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [300]
                0.00    0.00      28/35          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [224]
[211]    0.0    0.00    0.00      35         std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [211]
                0.00    0.00      28/28          std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [221]
-----------------------------------------------
                0.00    0.00      35/35          void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [213]
[212]    0.0    0.00    0.00      35         void std::_Destroy<int*>(int*, int*) [212]
                0.00    0.00      35/35          void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [210]
-----------------------------------------------
                0.00    0.00       7/35          std::vector<int, std::allocator<int> >::~vector() [307]
                0.00    0.00      28/35          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [224]
[213]    0.0    0.00    0.00      35         void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [213]
                0.00    0.00      35/35          void std::_Destroy<int*>(int*, int*) [212]
-----------------------------------------------
                0.00    0.00      30/30          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::move_backward<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [247]
[214]    0.0    0.00    0.00      30         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__miter_base<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [214]
-----------------------------------------------
                0.00    0.00       1/29          std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&) [372]
                0.00    0.00       2/29          std::vector<Move, std::allocator<Move> >::~vector() [350]
                0.00    0.00      26/29          void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [264]
[215]    0.0    0.00    0.00      29         std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() [215]
-----------------------------------------------
                0.00    0.00      28/28          std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [221]
[216]    0.0    0.00    0.00      28         __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [216]
-----------------------------------------------
                0.00    0.00      28/28          std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [222]
[217]    0.0    0.00    0.00      28         __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [217]
                0.00    0.00      28/84          __gnu_cxx::new_allocator<int>::max_size() const [167]
-----------------------------------------------
                0.00    0.00      28/28          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [224]
[218]    0.0    0.00    0.00      28         std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [218]
                0.00    0.00     112/252         std::vector<int, std::allocator<int> >::size() const [146]
                0.00    0.00      56/56          std::vector<int, std::allocator<int> >::max_size() const [194]
                0.00    0.00      28/500         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [132]
-----------------------------------------------
                0.00    0.00      28/28          int* std::__copy_move_a<true, int*, int*>(int*, int*, int*) [225]
[219]    0.0    0.00    0.00      28         int* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) [219]
-----------------------------------------------
                0.00    0.00      28/28          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [224]
[220]    0.0    0.00    0.00      28         std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [220]
                0.00    0.00      28/28          std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [222]
-----------------------------------------------
                0.00    0.00      28/28          std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [211]
[221]    0.0    0.00    0.00      28         std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [221]
                0.00    0.00      28/28          __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [216]
-----------------------------------------------
                0.00    0.00      28/28          std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [220]
[222]    0.0    0.00    0.00      28         std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [222]
                0.00    0.00      28/28          __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [217]
-----------------------------------------------
                0.00    0.00      28/28          int* std::uninitialized_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [227]
[223]    0.0    0.00    0.00      28         int* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [223]
                0.00    0.00      28/28          int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [230]
-----------------------------------------------
                0.00    0.00      28/28          void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [205]
[224]    0.0    0.00    0.00      28         void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [224]
                0.00    0.00      56/63          std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [186]
                0.00    0.00      28/28          std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [218]
                0.00    0.00      28/28          std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [220]
                0.00    0.00      28/252         std::vector<int, std::allocator<int> >::size() const [146]
                0.00    0.00      28/154         int&& std::forward<int>(std::remove_reference<int>::type&) [152]
                0.00    0.00      28/42          void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [204]
                0.00    0.00      28/28          int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [229]
                0.00    0.00      28/35          void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [213]
                0.00    0.00      28/35          std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [211]
-----------------------------------------------
                0.00    0.00      28/28          int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*) [226]
[225]    0.0    0.00    0.00      28         int* std::__copy_move_a<true, int*, int*>(int*, int*, int*) [225]
                0.00    0.00      28/28          int* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) [219]
-----------------------------------------------
                0.00    0.00      28/28          int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [230]
[226]    0.0    0.00    0.00      28         int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*) [226]
                0.00    0.00      84/84          int* std::__niter_base<int*>(int*) [168]
                0.00    0.00      28/28          int* std::__copy_move_a<true, int*, int*>(int*, int*, int*) [225]
-----------------------------------------------
                0.00    0.00      28/28          int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&) [228]
[227]    0.0    0.00    0.00      28         int* std::uninitialized_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [227]
                0.00    0.00      28/28          int* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [223]
-----------------------------------------------
                0.00    0.00      28/28          int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [229]
[228]    0.0    0.00    0.00      28         int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&) [228]
                0.00    0.00      28/28          int* std::uninitialized_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [227]
-----------------------------------------------
                0.00    0.00      28/28          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [224]
[229]    0.0    0.00    0.00      28         int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [229]
                0.00    0.00      56/56          std::move_iterator<int*> std::__make_move_if_noexcept_iterator<int, std::move_iterator<int*> >(int*) [199]
                0.00    0.00      28/28          int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&) [228]
-----------------------------------------------
                0.00    0.00      28/28          int* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [223]
[230]    0.0    0.00    0.00      28         int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [230]
                0.00    0.00      56/56          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>) [197]
                0.00    0.00      28/28          int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*) [226]
-----------------------------------------------
                0.00    0.00      27/27          void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter) [242]
[231]    0.0    0.00    0.00      27         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator--() [231]
-----------------------------------------------
                0.00    0.00      27/27          void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter) [242]
[232]    0.0    0.00    0.00      27         bool __gnu_cxx::__ops::_Val_less_iter::operator()<int, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(int&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [232]
                0.00    0.00      27/181         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [151]
-----------------------------------------------
                0.00    0.00      26/26          std::vector<Move, std::allocator<Move> >::max_size() const [234]
[233]    0.0    0.00    0.00      26         std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() const [233]
-----------------------------------------------
                0.00    0.00      26/26          std::vector<Move, std::allocator<Move> >::_M_check_len(unsigned long, char const*) const [259]
[234]    0.0    0.00    0.00      26         std::vector<Move, std::allocator<Move> >::max_size() const [234]
                0.00    0.00      26/26          std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() const [233]
                0.00    0.00      26/26          std::allocator_traits<std::allocator<Move> >::max_size(std::allocator<Move> const&) [236]
-----------------------------------------------
                0.00    0.00      26/26          std::move_iterator<Move*> std::__make_move_if_noexcept_iterator<Move, std::move_iterator<Move*> >(Move*) [237]
[235]    0.0    0.00    0.00      26         std::move_iterator<Move*>::move_iterator(Move*) [235]
-----------------------------------------------
                0.00    0.00      26/26          std::vector<Move, std::allocator<Move> >::max_size() const [234]
[236]    0.0    0.00    0.00      26         std::allocator_traits<std::allocator<Move> >::max_size(std::allocator<Move> const&) [236]
                0.00    0.00      26/39          __gnu_cxx::new_allocator<Move>::max_size() const [207]
-----------------------------------------------
                0.00    0.00      26/26          Move* std::__uninitialized_move_if_noexcept_a<Move*, Move*, std::allocator<Move> >(Move*, Move*, Move*, std::allocator<Move>&) [267]
[237]    0.0    0.00    0.00      26         std::move_iterator<Move*> std::__make_move_if_noexcept_iterator<Move, std::move_iterator<Move*> >(Move*) [237]
                0.00    0.00      26/26          std::move_iterator<Move*>::move_iterator(Move*) [235]
-----------------------------------------------
                0.00    0.00       8/22          __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::allocate(unsigned long, void const*) [277]
                0.00    0.00      14/22          std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size(std::allocator<std::vector<Cell, std::allocator<Cell> > > const&) [255]
[238]    0.0    0.00    0.00      22         __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::max_size() const [238]
-----------------------------------------------
                0.00    0.00      22/22          void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [308]
[239]    0.0    0.00    0.00      22         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator+(long) const [239]
                0.00    0.00      22/51          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [200]
-----------------------------------------------
                0.00    0.00       7/21          void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [316]
                0.00    0.00       7/21          void std::__introsort_loop<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter) [309]
                0.00    0.00       7/21          void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [311]
[240]    0.0    0.00    0.00      21         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [240]
                0.00    0.00      42/199         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [147]
-----------------------------------------------
                0.00    0.00      20/20          void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [308]
[241]    0.0    0.00    0.00      20         __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter) [241]
-----------------------------------------------
                0.00    0.00      20/20          void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [308]
[242]    0.0    0.00    0.00      20         void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter) [242]
                0.00    0.00      54/181         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [151]
                0.00    0.00      47/119         std::remove_reference<int&>::type&& std::move<int&>(int&) [166]
                0.00    0.00      27/27          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator--() [231]
                0.00    0.00      27/27          bool __gnu_cxx::__ops::_Val_less_iter::operator()<int, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(int&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [232]
-----------------------------------------------
                0.00    0.00       1/18          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [35]
                0.00    0.00       1/18          std::vector<Cell, std::allocator<Cell> >* std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > >(unsigned long, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >) [40]
                0.00    0.00       2/18          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector() [352]
                0.00    0.00      14/18          void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [33]
[243]    0.0    0.00    0.00      18         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() [243]
-----------------------------------------------
                0.00    0.00      15/15          void std::_Destroy<Move*>(Move*, Move*) [250]
[244]    0.0    0.00    0.00      15         void std::_Destroy_aux<true>::__destroy<Move*>(Move*, Move*) [244]
-----------------------------------------------
                0.00    0.00       2/15          std::_Vector_base<Move, std::allocator<Move> >::~_Vector_base() [345]
                0.00    0.00      13/15          void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [264]
[245]    0.0    0.00    0.00      15         std::_Vector_base<Move, std::allocator<Move> >::_M_deallocate(Move*, unsigned long) [245]
                0.00    0.00      13/13          std::allocator_traits<std::allocator<Move> >::deallocate(std::allocator<Move>&, Move*, unsigned long) [261]
-----------------------------------------------
                0.00    0.00      15/15          int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*) [248]
[246]    0.0    0.00    0.00      15         int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*) [246]
-----------------------------------------------
                0.00    0.00      15/15          void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [308]
[247]    0.0    0.00    0.00      15         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::move_backward<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [247]
                0.00    0.00      30/30          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__miter_base<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [214]
                0.00    0.00      15/15          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [249]
-----------------------------------------------
                0.00    0.00      15/15          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [249]
[248]    0.0    0.00    0.00      15         int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*) [248]
                0.00    0.00      15/15          int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*) [246]
-----------------------------------------------
                0.00    0.00      15/15          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::move_backward<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [247]
[249]    0.0    0.00    0.00      15         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [249]
                0.00    0.00      45/45          int* std::__niter_base<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [202]
                0.00    0.00      15/15          int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*) [248]
                0.00    0.00      15/51          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [200]
-----------------------------------------------
                0.00    0.00      15/15          void std::_Destroy<Move*, Move>(Move*, Move*, std::allocator<Move>&) [251]
[250]    0.0    0.00    0.00      15         void std::_Destroy<Move*>(Move*, Move*) [250]
                0.00    0.00      15/15          void std::_Destroy_aux<true>::__destroy<Move*>(Move*, Move*) [244]
-----------------------------------------------
                0.00    0.00       2/15          std::vector<Move, std::allocator<Move> >::~vector() [350]
                0.00    0.00      13/15          void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [264]
[251]    0.0    0.00    0.00      15         void std::_Destroy<Move*, Move>(Move*, Move*, std::allocator<Move>&) [251]
                0.00    0.00      15/15          void std::_Destroy<Move*>(Move*, Move*) [250]
-----------------------------------------------
                0.00    0.00      14/14          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size() const [253]
[252]    0.0    0.00    0.00      14         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() const [252]
-----------------------------------------------
                0.00    0.00      14/14          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_check_len(unsigned long, char const*) const [34]
[253]    0.0    0.00    0.00      14         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size() const [253]
                0.00    0.00      14/14          std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size(std::allocator<std::vector<Cell, std::allocator<Cell> > > const&) [255]
                0.00    0.00      14/14          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() const [252]
-----------------------------------------------
                0.00    0.00      14/14          std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> std::__make_move_if_noexcept_iterator<std::vector<Cell, std::allocator<Cell> >, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> >(std::vector<Cell, std::allocator<Cell> >*) [256]
[254]    0.0    0.00    0.00      14         std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::move_iterator(std::vector<Cell, std::allocator<Cell> >*) [254]
-----------------------------------------------
                0.00    0.00      14/14          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size() const [253]
[255]    0.0    0.00    0.00      14         std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size(std::allocator<std::vector<Cell, std::allocator<Cell> > > const&) [255]
                0.00    0.00      14/22          __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::max_size() const [238]
-----------------------------------------------
                0.00    0.00      14/14          std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_move_if_noexcept_a<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [313]
[256]    0.0    0.00    0.00      14         std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> std::__make_move_if_noexcept_iterator<std::vector<Cell, std::allocator<Cell> >, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> >(std::vector<Cell, std::allocator<Cell> >*) [256]
                0.00    0.00      14/14          std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::move_iterator(std::vector<Cell, std::allocator<Cell> >*) [254]
-----------------------------------------------
                0.00    0.00      13/13          std::allocator_traits<std::allocator<Move> >::deallocate(std::allocator<Move>&, Move*, unsigned long) [261]
[257]    0.0    0.00    0.00      13         __gnu_cxx::new_allocator<Move>::deallocate(Move*, unsigned long) [257]
-----------------------------------------------
                0.00    0.00      13/13          std::allocator_traits<std::allocator<Move> >::allocate(std::allocator<Move>&, unsigned long) [262]
[258]    0.0    0.00    0.00      13         __gnu_cxx::new_allocator<Move>::allocate(unsigned long, void const*) [258]
                0.00    0.00      13/39          __gnu_cxx::new_allocator<Move>::max_size() const [207]
-----------------------------------------------
                0.00    0.00      13/13          void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [264]
[259]    0.0    0.00    0.00      13         std::vector<Move, std::allocator<Move> >::_M_check_len(unsigned long, char const*) const [259]
                0.00    0.00      52/100065      std::vector<Move, std::allocator<Move> >::size() const [84]
                0.00    0.00      26/26          std::vector<Move, std::allocator<Move> >::max_size() const [234]
                0.00    0.00      13/500         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [132]
-----------------------------------------------
                0.00    0.00      13/13          void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [264]
[260]    0.0    0.00    0.00      13         std::_Vector_base<Move, std::allocator<Move> >::_M_allocate(unsigned long) [260]
                0.00    0.00      13/13          std::allocator_traits<std::allocator<Move> >::allocate(std::allocator<Move>&, unsigned long) [262]
-----------------------------------------------
                0.00    0.00      13/13          std::_Vector_base<Move, std::allocator<Move> >::_M_deallocate(Move*, unsigned long) [245]
[261]    0.0    0.00    0.00      13         std::allocator_traits<std::allocator<Move> >::deallocate(std::allocator<Move>&, Move*, unsigned long) [261]
                0.00    0.00      13/13          __gnu_cxx::new_allocator<Move>::deallocate(Move*, unsigned long) [257]
-----------------------------------------------
                0.00    0.00      13/13          std::_Vector_base<Move, std::allocator<Move> >::_M_allocate(unsigned long) [260]
[262]    0.0    0.00    0.00      13         std::allocator_traits<std::allocator<Move> >::allocate(std::allocator<Move>&, unsigned long) [262]
                0.00    0.00      13/13          __gnu_cxx::new_allocator<Move>::allocate(unsigned long, void const*) [258]
-----------------------------------------------
                0.00    0.00      13/13          Move* std::uninitialized_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [265]
[263]    0.0    0.00    0.00      13         Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [263]
                0.00    0.00    4108/4108        bool std::operator!=<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&) [103]
                0.00    0.00    4095/4095        std::move_iterator<Move*>::operator*() const [104]
                0.00    0.00    4095/4095        void std::_Construct<Move, Move>(Move*, Move&&) [106]
                0.00    0.00    4095/4095        Move* std::__addressof<Move>(Move&) [107]
                0.00    0.00    4095/4095        std::move_iterator<Move*>::operator++() [105]
-----------------------------------------------
                0.00    0.00      13/13          void std::vector<Move, std::allocator<Move> >::emplace_back<Move>(Move&&) [78]
[264]    0.0    0.00    0.00      13         void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [264]
                0.00    0.00      26/29          std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() [215]
                0.00    0.00      13/13          std::vector<Move, std::allocator<Move> >::_M_check_len(unsigned long, char const*) const [259]
                0.00    0.00      13/13          std::_Vector_base<Move, std::allocator<Move> >::_M_allocate(unsigned long) [260]
                0.00    0.00      13/322777      Move&& std::forward<Move>(std::remove_reference<Move>::type&) [58]
                0.00    0.00      13/100065      std::vector<Move, std::allocator<Move> >::size() const [84]
                0.00    0.00      13/106223      void std::allocator_traits<std::allocator<Move> >::construct<Move, Move>(std::allocator<Move>&, Move*, Move&&) [77]
                0.00    0.00      13/13          Move* std::__uninitialized_move_if_noexcept_a<Move*, Move*, std::allocator<Move> >(Move*, Move*, Move*, std::allocator<Move>&) [267]
                0.00    0.00      13/15          void std::_Destroy<Move*, Move>(Move*, Move*, std::allocator<Move>&) [251]
                0.00    0.00      13/15          std::_Vector_base<Move, std::allocator<Move> >::_M_deallocate(Move*, unsigned long) [245]
-----------------------------------------------
                0.00    0.00      13/13          Move* std::__uninitialized_copy_a<std::move_iterator<Move*>, Move*, Move>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*, std::allocator<Move>&) [266]
[265]    0.0    0.00    0.00      13         Move* std::uninitialized_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [265]
                0.00    0.00      13/13          Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [263]
-----------------------------------------------
                0.00    0.00      13/13          Move* std::__uninitialized_move_if_noexcept_a<Move*, Move*, std::allocator<Move> >(Move*, Move*, Move*, std::allocator<Move>&) [267]
[266]    0.0    0.00    0.00      13         Move* std::__uninitialized_copy_a<std::move_iterator<Move*>, Move*, Move>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*, std::allocator<Move>&) [266]
                0.00    0.00      13/13          Move* std::uninitialized_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [265]
-----------------------------------------------
                0.00    0.00      13/13          void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [264]
[267]    0.0    0.00    0.00      13         Move* std::__uninitialized_move_if_noexcept_a<Move*, Move*, std::allocator<Move> >(Move*, Move*, Move*, std::allocator<Move>&) [267]
                0.00    0.00      26/26          std::move_iterator<Move*> std::__make_move_if_noexcept_iterator<Move, std::move_iterator<Move*> >(Move*) [237]
                0.00    0.00      13/13          Move* std::__uninitialized_copy_a<std::move_iterator<Move*>, Move*, Move>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*, std::allocator<Move>&) [266]
-----------------------------------------------
                0.00    0.00       4/12          __gnu_cxx::new_allocator<Faction>::allocate(unsigned long, void const*) [322]
                0.00    0.00       8/12          std::allocator_traits<std::allocator<Faction> >::max_size(std::allocator<Faction> const&) [283]
[268]    0.0    0.00    0.00      12         __gnu_cxx::new_allocator<Faction>::max_size() const [268]
-----------------------------------------------
                0.00    0.00      12/12          Faction* std::__copy_move_a2<true, Faction*, Faction*>(Faction*, Faction*, Faction*) [331]
[269]    0.0    0.00    0.00      12         Faction* std::__niter_base<Faction*>(Faction*) [269]
-----------------------------------------------
                0.00    0.00      10/10          void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [272]
[270]    0.0    0.00    0.00      10         void std::_Destroy_aux<false>::__destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [270]
                0.00    0.00     191/191         void std::_Destroy<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*) [149]
                0.00    0.00     191/318         std::vector<Cell, std::allocator<Cell> >* std::__addressof<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >&) [141]
-----------------------------------------------
                0.00    0.00       1/10          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [35]
                0.00    0.00       2/10          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~_Vector_base() [349]
                0.00    0.00       7/10          void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [33]
[271]    0.0    0.00    0.00      10         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [271]
                0.00    0.00       8/8           std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::deallocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, unsigned long) [284]
-----------------------------------------------
                0.00    0.00      10/10          void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [273]
[272]    0.0    0.00    0.00      10         void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [272]
                0.00    0.00      10/10          void std::_Destroy_aux<false>::__destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [270]
-----------------------------------------------
                0.00    0.00       1/10          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [35]
                0.00    0.00       2/10          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector() [352]
                0.00    0.00       7/10          void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [33]
[273]    0.0    0.00    0.00      10         void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [273]
                0.00    0.00      10/10          void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [272]
-----------------------------------------------
                0.00    0.00       1/9           std::vector<Faction, std::allocator<Faction> >::~vector() [382]
                0.00    0.00       8/9           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [329]
[274]    0.0    0.00    0.00       9         std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() [274]
-----------------------------------------------
                0.00    0.00       9/9           std::enable_if<std::__and_<std::is_move_constructible<Move*>, std::is_move_assignable<Move*> >::value, void>::type std::swap<Move*>(Move*&, Move*&) [336]
[275]    0.0    0.00    0.00       9         std::remove_reference<Move*&>::type&& std::move<Move*&>(Move*&) [275]
-----------------------------------------------
                0.00    0.00       8/8           std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::deallocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, unsigned long) [284]
[276]    0.0    0.00    0.00       8         __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [276]
-----------------------------------------------
                0.00    0.00       8/8           std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::allocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, unsigned long) [285]
[277]    0.0    0.00    0.00       8         __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::allocate(unsigned long, void const*) [277]
                0.00    0.00       8/22          __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::max_size() const [238]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Faction, std::allocator<Faction> >::max_size() const [280]
[278]    0.0    0.00    0.00       8         std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() const [278]
-----------------------------------------------
                0.00    0.00       8/8           decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Faction*>(std::move_iterator<Faction*>) [286]
[279]    0.0    0.00    0.00       8         std::move_iterator<Faction*>::base() const [279]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Faction, std::allocator<Faction> >::_M_check_len(unsigned long, char const*) const [323]
[280]    0.0    0.00    0.00       8         std::vector<Faction, std::allocator<Faction> >::max_size() const [280]
                0.00    0.00       8/8           std::allocator_traits<std::allocator<Faction> >::max_size(std::allocator<Faction> const&) [283]
                0.00    0.00       8/8           std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() const [278]
-----------------------------------------------
                0.00    0.00       1/8           std::vector<Cell, std::allocator<Cell> >* std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > >(unsigned long, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >) [40]
                0.00    0.00       7/8           void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [33]
[281]    0.0    0.00    0.00       8         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate(unsigned long) [281]
                0.00    0.00       8/8           std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::allocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, unsigned long) [285]
-----------------------------------------------
                0.00    0.00       8/8           std::move_iterator<Faction*> std::__make_move_if_noexcept_iterator<Faction, std::move_iterator<Faction*> >(Faction*) [288]
[282]    0.0    0.00    0.00       8         std::move_iterator<Faction*>::move_iterator(Faction*) [282]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Faction, std::allocator<Faction> >::max_size() const [280]
[283]    0.0    0.00    0.00       8         std::allocator_traits<std::allocator<Faction> >::max_size(std::allocator<Faction> const&) [283]
                0.00    0.00       8/12          __gnu_cxx::new_allocator<Faction>::max_size() const [268]
-----------------------------------------------
                0.00    0.00       8/8           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [271]
[284]    0.0    0.00    0.00       8         std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::deallocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, unsigned long) [284]
                0.00    0.00       8/8           __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [276]
-----------------------------------------------
                0.00    0.00       8/8           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate(unsigned long) [281]
[285]    0.0    0.00    0.00       8         std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::allocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, unsigned long) [285]
                0.00    0.00       8/8           __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::allocate(unsigned long, void const*) [277]
-----------------------------------------------
                0.00    0.00       8/8           Faction* std::copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [335]
[286]    0.0    0.00    0.00       8         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Faction*>(std::move_iterator<Faction*>) [286]
                0.00    0.00       8/8           Faction* std::__miter_base<Faction*>(Faction*) [287]
                0.00    0.00       8/8           std::move_iterator<Faction*>::base() const [279]
-----------------------------------------------
                0.00    0.00       8/8           decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Faction*>(std::move_iterator<Faction*>) [286]
[287]    0.0    0.00    0.00       8         Faction* std::__miter_base<Faction*>(Faction*) [287]
-----------------------------------------------
                0.00    0.00       8/8           Faction* std::__uninitialized_move_if_noexcept_a<Faction*, Faction*, std::allocator<Faction> >(Faction*, Faction*, Faction*, std::allocator<Faction>&) [334]
[288]    0.0    0.00    0.00       8         std::move_iterator<Faction*> std::__make_move_if_noexcept_iterator<Faction, std::move_iterator<Faction*> >(Faction*) [288]
                0.00    0.00       8/8           std::move_iterator<Faction*>::move_iterator(Faction*) [282]
-----------------------------------------------
                0.00    0.00       7/7           Board::init() [25]
[289]    0.0    0.00    0.00       7         Faction::init(int) [289]
                0.00    0.00      70/70          std::vector<int, std::allocator<int> >::at(unsigned long) [170]
                0.00    0.00      42/42          std::vector<int, std::allocator<int> >::push_back(int&&) [206]
                0.00    0.00      42/252         std::vector<int, std::allocator<int> >::size() const [146]
                0.00    0.00       7/7           std::vector<int, std::allocator<int> >::vector() [306]
                0.00    0.00       7/7           std::vector<int, std::allocator<int> >::end() [304]
                0.00    0.00       7/7           std::vector<int, std::allocator<int> >::begin() [305]
                0.00    0.00       7/7           void std::sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [315]
                0.00    0.00       7/7           std::vector<int, std::allocator<int> >::~vector() [307]
-----------------------------------------------
                0.00    0.00       7/7           void std::allocator_traits<std::allocator<Faction> >::construct<Faction>(std::allocator<Faction>&, Faction*) [301]
[290]    0.0    0.00    0.00       7         void __gnu_cxx::new_allocator<Faction>::construct<Faction>(Faction*) [290]
                0.00    0.00       7/122270      operator new(unsigned long, void*) [72]
-----------------------------------------------
                0.00    0.00       7/7           std::allocator<int>::allocator() [295]
[291]    0.0    0.00    0.00       7         __gnu_cxx::new_allocator<int>::new_allocator() [291]
-----------------------------------------------
                0.00    0.00       7/7           std::allocator<int>::~allocator() [296]
[292]    0.0    0.00    0.00       7         __gnu_cxx::new_allocator<int>::~new_allocator() [292]
-----------------------------------------------
                0.00    0.00       7/7           void std::sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [315]
[293]    0.0    0.00    0.00       7         __gnu_cxx::__ops::__iter_less_iter() [293]
-----------------------------------------------
                0.00    0.00       7/7           void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [308]
[294]    0.0    0.00    0.00       7         bool __gnu_cxx::operator==<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [294]
                0.00    0.00      14/199         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [147]
-----------------------------------------------
                0.00    0.00       7/7           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [297]
[295]    0.0    0.00    0.00       7         std::allocator<int>::allocator() [295]
                0.00    0.00       7/7           __gnu_cxx::new_allocator<int>::new_allocator() [291]
-----------------------------------------------
                0.00    0.00       7/7           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [298]
[296]    0.0    0.00    0.00       7         std::allocator<int>::~allocator() [296]
                0.00    0.00       7/7           __gnu_cxx::new_allocator<int>::~new_allocator() [292]
-----------------------------------------------
                0.00    0.00       7/7           std::_Vector_base<int, std::allocator<int> >::_Vector_base() [299]
[297]    0.0    0.00    0.00       7         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [297]
                0.00    0.00       7/7           std::allocator<int>::allocator() [295]
-----------------------------------------------
                0.00    0.00       7/7           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [300]
[298]    0.0    0.00    0.00       7         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [298]
                0.00    0.00       7/7           std::allocator<int>::~allocator() [296]
-----------------------------------------------
                0.00    0.00       7/7           std::vector<int, std::allocator<int> >::vector() [306]
[299]    0.0    0.00    0.00       7         std::_Vector_base<int, std::allocator<int> >::_Vector_base() [299]
                0.00    0.00       7/7           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [297]
-----------------------------------------------
                0.00    0.00       7/7           std::vector<int, std::allocator<int> >::~vector() [307]
[300]    0.0    0.00    0.00       7         std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [300]
                0.00    0.00       7/7           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [298]
                0.00    0.00       7/35          std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [211]
-----------------------------------------------
                0.00    0.00       3/7           void std::vector<Faction, std::allocator<Faction> >::emplace_back<>() [303]
                0.00    0.00       4/7           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [329]
[301]    0.0    0.00    0.00       7         void std::allocator_traits<std::allocator<Faction> >::construct<Faction>(std::allocator<Faction>&, Faction*) [301]
                0.00    0.00       7/7           void __gnu_cxx::new_allocator<Faction>::construct<Faction>(Faction*) [290]
-----------------------------------------------
                0.00    0.00       7/7           std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [310]
[302]    0.0    0.00    0.00       7         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [302]
                0.00    0.00      70/70          bool std::operator!=<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&) [173]
                0.00    0.00      63/63          std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator*() const [182]
                0.00    0.00      63/63          void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >&&) [189]
                0.00    0.00      63/318         std::vector<Cell, std::allocator<Cell> >* std::__addressof<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >&) [141]
                0.00    0.00      63/63          std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator++() [187]
-----------------------------------------------
                0.00    0.00       7/7           Board::Board(int, int, int, int, int, XColor*) [27]
[303]    0.0    0.00    0.00       7         void std::vector<Faction, std::allocator<Faction> >::emplace_back<>() [303]
                0.00    0.00       4/4           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [329]
                0.00    0.00       3/7           void std::allocator_traits<std::allocator<Faction> >::construct<Faction>(std::allocator<Faction>&, Faction*) [301]
-----------------------------------------------
                0.00    0.00       7/7           Faction::init(int) [289]
[304]    0.0    0.00    0.00       7         std::vector<int, std::allocator<int> >::end() [304]
                0.00    0.00       7/51          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [200]
-----------------------------------------------
                0.00    0.00       7/7           Faction::init(int) [289]
[305]    0.0    0.00    0.00       7         std::vector<int, std::allocator<int> >::begin() [305]
                0.00    0.00       7/51          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [200]
-----------------------------------------------
                0.00    0.00       7/7           Faction::init(int) [289]
[306]    0.0    0.00    0.00       7         std::vector<int, std::allocator<int> >::vector() [306]
                0.00    0.00       7/7           std::_Vector_base<int, std::allocator<int> >::_Vector_base() [299]
-----------------------------------------------
                0.00    0.00       7/7           Faction::init(int) [289]
[307]    0.0    0.00    0.00       7         std::vector<int, std::allocator<int> >::~vector() [307]
                0.00    0.00       7/63          std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [186]
                0.00    0.00       7/7           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [300]
                0.00    0.00       7/35          void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [213]
-----------------------------------------------
                0.00    0.00       7/7           void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [311]
[308]    0.0    0.00    0.00       7         void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [308]
                0.00    0.00      42/49          bool __gnu_cxx::operator!=<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [201]
                0.00    0.00      35/35          bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [209]
                0.00    0.00      35/35          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator++() [208]
                0.00    0.00      30/181         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [151]
                0.00    0.00      30/119         std::remove_reference<int&>::type&& std::move<int&>(int&) [166]
                0.00    0.00      22/22          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator+(long) const [239]
                0.00    0.00      20/20          __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter) [241]
                0.00    0.00      20/20          void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter) [242]
                0.00    0.00      15/15          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::move_backward<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [247]
                0.00    0.00       7/7           bool __gnu_cxx::operator==<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [294]
-----------------------------------------------
                0.00    0.00       7/7           void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [316]
[309]    0.0    0.00    0.00       7         void std::__introsort_loop<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter) [309]
                0.00    0.00       7/21          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [240]
-----------------------------------------------
                0.00    0.00       7/7           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [312]
[310]    0.0    0.00    0.00       7         std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [310]
                0.00    0.00       7/7           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [302]
-----------------------------------------------
                0.00    0.00       7/7           void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [316]
[311]    0.0    0.00    0.00       7         void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [311]
                0.00    0.00       7/21          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [240]
                0.00    0.00       7/7           void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [308]
-----------------------------------------------
                0.00    0.00       7/7           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_move_if_noexcept_a<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [313]
[312]    0.0    0.00    0.00       7         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [312]
                0.00    0.00       7/7           std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [310]
-----------------------------------------------
                0.00    0.00       7/7           void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [33]
[313]    0.0    0.00    0.00       7         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_move_if_noexcept_a<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [313]
                0.00    0.00      14/14          std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> std::__make_move_if_noexcept_iterator<std::vector<Cell, std::allocator<Cell> >, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> >(std::vector<Cell, std::allocator<Cell> >*) [256]
                0.00    0.00       7/7           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [312]
-----------------------------------------------
                0.00    0.00       7/7           void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [316]
[314]    0.0    0.00    0.00       7         std::__lg(long) [314]
-----------------------------------------------
                0.00    0.00       7/7           Faction::init(int) [289]
[315]    0.0    0.00    0.00       7         void std::sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [315]
                0.00    0.00       7/7           __gnu_cxx::__ops::__iter_less_iter() [293]
                0.00    0.00       7/7           void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [316]
-----------------------------------------------
                0.00    0.00       7/7           void std::sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [315]
[316]    0.0    0.00    0.00       7         void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [316]
                0.00    0.00       7/49          bool __gnu_cxx::operator!=<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [201]
                0.00    0.00       7/7           std::__lg(long) [314]
                0.00    0.00       7/21          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [240]
                0.00    0.00       7/7           void std::__introsort_loop<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter) [309]
                0.00    0.00       7/7           void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [311]
-----------------------------------------------
                0.00    0.00       5/5           void std::_Destroy<Faction*>(Faction*, Faction*) [319]
[317]    0.0    0.00    0.00       5         void std::_Destroy_aux<true>::__destroy<Faction*>(Faction*, Faction*) [317]
-----------------------------------------------
                0.00    0.00       1/5           std::_Vector_base<Faction, std::allocator<Faction> >::~_Vector_base() [377]
                0.00    0.00       4/5           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [329]
[318]    0.0    0.00    0.00       5         std::_Vector_base<Faction, std::allocator<Faction> >::_M_deallocate(Faction*, unsigned long) [318]
                0.00    0.00       4/4           std::allocator_traits<std::allocator<Faction> >::deallocate(std::allocator<Faction>&, Faction*, unsigned long) [326]
-----------------------------------------------
                0.00    0.00       5/5           void std::_Destroy<Faction*, Faction>(Faction*, Faction*, std::allocator<Faction>&) [320]
[319]    0.0    0.00    0.00       5         void std::_Destroy<Faction*>(Faction*, Faction*) [319]
                0.00    0.00       5/5           void std::_Destroy_aux<true>::__destroy<Faction*>(Faction*, Faction*) [317]
-----------------------------------------------
                0.00    0.00       1/5           std::vector<Faction, std::allocator<Faction> >::~vector() [382]
                0.00    0.00       4/5           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [329]
[320]    0.0    0.00    0.00       5         void std::_Destroy<Faction*, Faction>(Faction*, Faction*, std::allocator<Faction>&) [320]
                0.00    0.00       5/5           void std::_Destroy<Faction*>(Faction*, Faction*) [319]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator_traits<std::allocator<Faction> >::deallocate(std::allocator<Faction>&, Faction*, unsigned long) [326]
[321]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<Faction>::deallocate(Faction*, unsigned long) [321]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator_traits<std::allocator<Faction> >::allocate(std::allocator<Faction>&, unsigned long) [327]
[322]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<Faction>::allocate(unsigned long, void const*) [322]
                0.00    0.00       4/12          __gnu_cxx::new_allocator<Faction>::max_size() const [268]
-----------------------------------------------
                0.00    0.00       4/4           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [329]
[323]    0.0    0.00    0.00       4         std::vector<Faction, std::allocator<Faction> >::_M_check_len(unsigned long, char const*) const [323]
                0.00    0.00      16/167383      std::vector<Faction, std::allocator<Faction> >::size() const [68]
                0.00    0.00       8/8           std::vector<Faction, std::allocator<Faction> >::max_size() const [280]
                0.00    0.00       4/500         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [132]
-----------------------------------------------
                0.00    0.00       4/4           Faction* std::__copy_move_a<true, Faction*, Faction*>(Faction*, Faction*, Faction*) [330]
[324]    0.0    0.00    0.00       4         Faction* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Faction>(Faction const*, Faction const*, Faction*) [324]
-----------------------------------------------
                0.00    0.00       4/4           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [329]
[325]    0.0    0.00    0.00       4         std::_Vector_base<Faction, std::allocator<Faction> >::_M_allocate(unsigned long) [325]
                0.00    0.00       4/4           std::allocator_traits<std::allocator<Faction> >::allocate(std::allocator<Faction>&, unsigned long) [327]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<Faction, std::allocator<Faction> >::_M_deallocate(Faction*, unsigned long) [318]
[326]    0.0    0.00    0.00       4         std::allocator_traits<std::allocator<Faction> >::deallocate(std::allocator<Faction>&, Faction*, unsigned long) [326]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<Faction>::deallocate(Faction*, unsigned long) [321]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<Faction, std::allocator<Faction> >::_M_allocate(unsigned long) [325]
[327]    0.0    0.00    0.00       4         std::allocator_traits<std::allocator<Faction> >::allocate(std::allocator<Faction>&, unsigned long) [327]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<Faction>::allocate(unsigned long, void const*) [322]
-----------------------------------------------
                0.00    0.00       4/4           Faction* std::uninitialized_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [332]
[328]    0.0    0.00    0.00       4         Faction* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [328]
                0.00    0.00       4/4           Faction* std::copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [335]
-----------------------------------------------
                0.00    0.00       4/4           void std::vector<Faction, std::allocator<Faction> >::emplace_back<>() [303]
[329]    0.0    0.00    0.00       4         void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [329]
                0.00    0.00       8/9           std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() [274]
                0.00    0.00       4/4           std::vector<Faction, std::allocator<Faction> >::_M_check_len(unsigned long, char const*) const [323]
                0.00    0.00       4/4           std::_Vector_base<Faction, std::allocator<Faction> >::_M_allocate(unsigned long) [325]
                0.00    0.00       4/167383      std::vector<Faction, std::allocator<Faction> >::size() const [68]
                0.00    0.00       4/7           void std::allocator_traits<std::allocator<Faction> >::construct<Faction>(std::allocator<Faction>&, Faction*) [301]
                0.00    0.00       4/4           Faction* std::__uninitialized_move_if_noexcept_a<Faction*, Faction*, std::allocator<Faction> >(Faction*, Faction*, Faction*, std::allocator<Faction>&) [334]
                0.00    0.00       4/5           void std::_Destroy<Faction*, Faction>(Faction*, Faction*, std::allocator<Faction>&) [320]
                0.00    0.00       4/5           std::_Vector_base<Faction, std::allocator<Faction> >::_M_deallocate(Faction*, unsigned long) [318]
-----------------------------------------------
                0.00    0.00       4/4           Faction* std::__copy_move_a2<true, Faction*, Faction*>(Faction*, Faction*, Faction*) [331]
[330]    0.0    0.00    0.00       4         Faction* std::__copy_move_a<true, Faction*, Faction*>(Faction*, Faction*, Faction*) [330]
                0.00    0.00       4/4           Faction* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Faction>(Faction const*, Faction const*, Faction*) [324]
-----------------------------------------------
                0.00    0.00       4/4           Faction* std::copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [335]
[331]    0.0    0.00    0.00       4         Faction* std::__copy_move_a2<true, Faction*, Faction*>(Faction*, Faction*, Faction*) [331]
                0.00    0.00      12/12          Faction* std::__niter_base<Faction*>(Faction*) [269]
                0.00    0.00       4/4           Faction* std::__copy_move_a<true, Faction*, Faction*>(Faction*, Faction*, Faction*) [330]
-----------------------------------------------
                0.00    0.00       4/4           Faction* std::__uninitialized_copy_a<std::move_iterator<Faction*>, Faction*, Faction>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*, std::allocator<Faction>&) [333]
[332]    0.0    0.00    0.00       4         Faction* std::uninitialized_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [332]
                0.00    0.00       4/4           Faction* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [328]
-----------------------------------------------
                0.00    0.00       4/4           Faction* std::__uninitialized_move_if_noexcept_a<Faction*, Faction*, std::allocator<Faction> >(Faction*, Faction*, Faction*, std::allocator<Faction>&) [334]
[333]    0.0    0.00    0.00       4         Faction* std::__uninitialized_copy_a<std::move_iterator<Faction*>, Faction*, Faction>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*, std::allocator<Faction>&) [333]
                0.00    0.00       4/4           Faction* std::uninitialized_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [332]
-----------------------------------------------
                0.00    0.00       4/4           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [329]
[334]    0.0    0.00    0.00       4         Faction* std::__uninitialized_move_if_noexcept_a<Faction*, Faction*, std::allocator<Faction> >(Faction*, Faction*, Faction*, std::allocator<Faction>&) [334]
                0.00    0.00       8/8           std::move_iterator<Faction*> std::__make_move_if_noexcept_iterator<Faction, std::move_iterator<Faction*> >(Faction*) [288]
                0.00    0.00       4/4           Faction* std::__uninitialized_copy_a<std::move_iterator<Faction*>, Faction*, Faction>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*, std::allocator<Faction>&) [333]
-----------------------------------------------
                0.00    0.00       4/4           Faction* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [328]
[335]    0.0    0.00    0.00       4         Faction* std::copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [335]
                0.00    0.00       8/8           decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Faction*>(std::move_iterator<Faction*>) [286]
                0.00    0.00       4/4           Faction* std::__copy_move_a2<true, Faction*, Faction*>(Faction*, Faction*, Faction*) [331]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_M_swap_data(std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl&) [369]
[336]    0.0    0.00    0.00       3         std::enable_if<std::__and_<std::is_move_constructible<Move*>, std::is_move_assignable<Move*> >::value, void>::type std::swap<Move*>(Move*&, Move*&) [336]
                0.00    0.00       9/9           std::remove_reference<Move*&>::type&& std::move<Move*&>(Move*&) [275]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<Move>::~allocator() [341]
[337]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<Move>::~new_allocator() [337]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::vector<Cell, std::allocator<Cell> > >::allocator() [342]
[338]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::new_allocator() [338]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::vector<Cell, std::allocator<Cell> > >::~allocator() [343]
[339]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::~new_allocator() [339]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::begin() const [363]
                0.00    0.00       1/2           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::end() const [362]
[340]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::__normal_iterator(std::vector<Cell, std::allocator<Cell> > const* const&) [340]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::~_Vector_impl() [344]
[341]    0.0    0.00    0.00       2         std::allocator<Move>::~allocator() [341]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<Move>::~new_allocator() [337]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::_Vector_impl() [346]
[342]    0.0    0.00    0.00       2         std::allocator<std::vector<Cell, std::allocator<Cell> > >::allocator() [342]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::new_allocator() [338]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::~_Vector_impl() [347]
[343]    0.0    0.00    0.00       2         std::allocator<std::vector<Cell, std::allocator<Cell> > >::~allocator() [343]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::~new_allocator() [339]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Move, std::allocator<Move> >::~_Vector_base() [345]
[344]    0.0    0.00    0.00       2         std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::~_Vector_impl() [344]
                0.00    0.00       2/2           std::allocator<Move>::~allocator() [341]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Move, std::allocator<Move> >::~vector() [350]
[345]    0.0    0.00    0.00       2         std::_Vector_base<Move, std::allocator<Move> >::~_Vector_base() [345]
                0.00    0.00       2/2           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::~_Vector_impl() [344]
                0.00    0.00       2/15          std::_Vector_base<Move, std::allocator<Move> >::_M_deallocate(Move*, unsigned long) [245]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_base() [348]
[346]    0.0    0.00    0.00       2         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::_Vector_impl() [346]
                0.00    0.00       2/2           std::allocator<std::vector<Cell, std::allocator<Cell> > >::allocator() [342]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~_Vector_base() [349]
[347]    0.0    0.00    0.00       2         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::~_Vector_impl() [347]
                0.00    0.00       2/2           std::allocator<std::vector<Cell, std::allocator<Cell> > >::~allocator() [343]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::vector() [351]
[348]    0.0    0.00    0.00       2         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_base() [348]
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::_Vector_impl() [346]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector() [352]
[349]    0.0    0.00    0.00       2         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~_Vector_base() [349]
                0.00    0.00       2/10          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [271]
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::~_Vector_impl() [347]
-----------------------------------------------
                0.00    0.00       1/2           Board::Board(int, int, int, int, int, XColor*) [27]
                0.00    0.00       1/2           std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::~priority_queue() [378]
[350]    0.0    0.00    0.00       2         std::vector<Move, std::allocator<Move> >::~vector() [350]
                0.00    0.00       2/29          std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() [215]
                0.00    0.00       2/2           std::_Vector_base<Move, std::allocator<Move> >::~_Vector_base() [345]
                0.00    0.00       2/15          void std::_Destroy<Move*, Move>(Move*, Move*, std::allocator<Move>&) [251]
-----------------------------------------------
                0.00    0.00       2/2           Board::Board(int, int, int, int, int, XColor*) [27]
[351]    0.0    0.00    0.00       2         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::vector() [351]
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_base() [348]
-----------------------------------------------
                0.00    0.00       1/2           Board::Board(int, int, int, int, int, XColor*) [27]
                0.00    0.00       1/2           Board::~Board() [356]
[352]    0.0    0.00    0.00       2         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector() [352]
                0.00    0.00       2/18          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() [243]
                0.00    0.00       2/10          void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [273]
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~_Vector_base() [349]
-----------------------------------------------
                0.00    0.00       1/2           std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&) [372]
                0.00    0.00       1/2           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl(std::allocator<Move>&&) [371]
[353]    0.0    0.00    0.00       2         std::remove_reference<std::allocator<Move>&>::type&& std::move<std::allocator<Move>&>(std::allocator<Move>&) [353]
-----------------------------------------------
                0.00    0.00       1/2           std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [43]
                0.00    0.00       1/2           std::vector<Move, std::allocator<Move> >::vector(std::vector<Move, std::allocator<Move> >&&) [380]
[354]    0.0    0.00    0.00       2         std::remove_reference<std::vector<Move, std::allocator<Move> >&>::type&& std::move<std::vector<Move, std::allocator<Move> >&>(std::vector<Move, std::allocator<Move> >&) [354]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[355]    0.0    0.00    0.00       1         VirtualRootWindowOfScreen(Screen*) [355]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[356]    0.0    0.00    0.00       1         Board::~Board() [356]
                0.00    0.00       1/1           std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::~priority_queue() [378]
                0.00    0.00       1/2           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector() [352]
                0.00    0.00       1/1           std::vector<Faction, std::allocator<Faction> >::~vector() [382]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Move>::allocator() [366]
[357]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Move>::new_allocator() [357]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Move>::allocator(std::allocator<Move> const&) [365]
[358]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Move>::new_allocator(__gnu_cxx::new_allocator<Move> const&) [358]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Faction>::allocator() [367]
[359]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Faction>::new_allocator() [359]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Faction>::~allocator() [368]
[360]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Faction>::~new_allocator() [360]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [35]
[361]    0.0    0.00    0.00       1         __gnu_cxx::__alloc_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_S_propagate_on_copy_assign() [361]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [35]
[362]    0.0    0.00    0.00       1         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::end() const [362]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::__normal_iterator(std::vector<Cell, std::allocator<Cell> > const* const&) [340]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [35]
[363]    0.0    0.00    0.00       1         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::begin() const [363]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::__normal_iterator(std::vector<Cell, std::allocator<Cell> > const* const&) [340]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [35]
[364]    0.0    0.00    0.00       1         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::capacity() const [364]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl(std::allocator<Move>&&) [371]
[365]    0.0    0.00    0.00       1         std::allocator<Move>::allocator(std::allocator<Move> const&) [365]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Move>::new_allocator(__gnu_cxx::new_allocator<Move> const&) [358]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl() [370]
[366]    0.0    0.00    0.00       1         std::allocator<Move>::allocator() [366]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Move>::new_allocator() [357]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::_Vector_impl() [374]
[367]    0.0    0.00    0.00       1         std::allocator<Faction>::allocator() [367]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Faction>::new_allocator() [359]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::~_Vector_impl() [375]
[368]    0.0    0.00    0.00       1         std::allocator<Faction>::~allocator() [368]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Faction>::~new_allocator() [360]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&) [372]
[369]    0.0    0.00    0.00       1         std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_M_swap_data(std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl&) [369]
                0.00    0.00       3/3           std::enable_if<std::__and_<std::is_move_constructible<Move*>, std::is_move_assignable<Move*> >::value, void>::type std::swap<Move*>(Move*&, Move*&) [336]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_base() [373]
[370]    0.0    0.00    0.00       1         std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl() [370]
                0.00    0.00       1/1           std::allocator<Move>::allocator() [366]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&) [372]
[371]    0.0    0.00    0.00       1         std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl(std::allocator<Move>&&) [371]
                0.00    0.00       1/2           std::remove_reference<std::allocator<Move>&>::type&& std::move<std::allocator<Move>&>(std::allocator<Move>&) [353]
                0.00    0.00       1/1           std::allocator<Move>::allocator(std::allocator<Move> const&) [365]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Move, std::allocator<Move> >::vector(std::vector<Move, std::allocator<Move> >&&) [380]
[372]    0.0    0.00    0.00       1         std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&) [372]
                0.00    0.00       1/2           std::remove_reference<std::allocator<Move>&>::type&& std::move<std::allocator<Move>&>(std::allocator<Move>&) [353]
                0.00    0.00       1/29          std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() [215]
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl(std::allocator<Move>&&) [371]
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_M_swap_data(std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl&) [369]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Move, std::allocator<Move> >::vector() [379]
[373]    0.0    0.00    0.00       1         std::_Vector_base<Move, std::allocator<Move> >::_Vector_base() [373]
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl() [370]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_base() [376]
[374]    0.0    0.00    0.00       1         std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::_Vector_impl() [374]
                0.00    0.00       1/1           std::allocator<Faction>::allocator() [367]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::~_Vector_base() [377]
[375]    0.0    0.00    0.00       1         std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::~_Vector_impl() [375]
                0.00    0.00       1/1           std::allocator<Faction>::~allocator() [368]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Faction, std::allocator<Faction> >::vector() [381]
[376]    0.0    0.00    0.00       1         std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_base() [376]
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::_Vector_impl() [374]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Faction, std::allocator<Faction> >::~vector() [382]
[377]    0.0    0.00    0.00       1         std::_Vector_base<Faction, std::allocator<Faction> >::~_Vector_base() [377]
                0.00    0.00       1/5           std::_Vector_base<Faction, std::allocator<Faction> >::_M_deallocate(Faction*, unsigned long) [318]
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::~_Vector_impl() [375]
-----------------------------------------------
                0.00    0.00       1/1           Board::~Board() [356]
[378]    0.0    0.00    0.00       1         std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::~priority_queue() [378]
                0.00    0.00       1/2           std::vector<Move, std::allocator<Move> >::~vector() [350]
-----------------------------------------------
                0.00    0.00       1/1           Board::Board(int, int, int, int, int, XColor*) [27]
[379]    0.0    0.00    0.00       1         std::vector<Move, std::allocator<Move> >::vector() [379]
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_base() [373]
-----------------------------------------------
                0.00    0.00       1/1           std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [43]
[380]    0.0    0.00    0.00       1         std::vector<Move, std::allocator<Move> >::vector(std::vector<Move, std::allocator<Move> >&&) [380]
                0.00    0.00       1/2           std::remove_reference<std::vector<Move, std::allocator<Move> >&>::type&& std::move<std::vector<Move, std::allocator<Move> >&>(std::vector<Move, std::allocator<Move> >&) [354]
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&) [372]
-----------------------------------------------
                0.00    0.00       1/1           Board::Board(int, int, int, int, int, XColor*) [27]
[381]    0.0    0.00    0.00       1         std::vector<Faction, std::allocator<Faction> >::vector() [381]
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_base() [376]
-----------------------------------------------
                0.00    0.00       1/1           Board::~Board() [356]
[382]    0.0    0.00    0.00       1         std::vector<Faction, std::allocator<Faction> >::~vector() [382]
                0.00    0.00       1/9           std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() [274]
                0.00    0.00       1/5           void std::_Destroy<Faction*, Faction>(Faction*, Faction*, std::allocator<Faction>&) [320]
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::~_Vector_base() [377]
-----------------------------------------------
                0.00    0.00       1/1           void std::make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [384]
[383]    0.0    0.00    0.00       1         void std::__make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [383]
                0.00    0.00       1/313480      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&) [59]
-----------------------------------------------
                0.00    0.00       1/1           std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [43]
[384]    0.0    0.00    0.00       1         void std::make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [384]
                0.00    0.00       1/103629      __gnu_cxx::__ops::_Iter_comp_iter<compareMove> __gnu_cxx::__ops::__iter_comp_iter<compareMove>(compareMove) [81]
                0.00    0.00       1/1           void std::__make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [383]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2017 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [355] VirtualRootWindowOfScreen(Screen*) [9] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const [79] std::vector<Move, std::allocator<Move> >::push_back(Move&&)
  [54] compareMove::operator()(Move, Move) [363] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::begin() const [379] std::vector<Move, std::allocator<Move> >::vector()
  [93] Cell::init(int)       [364] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::capacity() const [380] std::vector<Move, std::allocator<Move> >::vector(std::vector<Move, std::allocator<Move> >&&)
  [56] Cell::Cell()          [253] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size() const [350] std::vector<Move, std::allocator<Move> >::~vector()
 [112] Cell::Cell(int, int)  [218] std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [303] void std::vector<Faction, std::allocator<Faction> >::emplace_back<>()
  [73] Move::Move(int, int, int, int) [169] std::vector<int, std::allocator<int> >::_M_range_check(unsigned long) const [329] void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>()
  [25] Board::init()         [146] std::vector<int, std::allocator<int> >::size() const [70] std::vector<Faction, std::allocator<Faction> >::at(unsigned long)
   [2] Board::step(int)      [194] std::vector<int, std::allocator<int> >::max_size() const [381] std::vector<Faction, std::allocator<Faction> >::vector()
  [24] Board::setCell(int, int, int, int) [178] std::allocator<Cell>::allocator() [382] std::vector<Faction, std::allocator<Faction> >::~vector()
  [26] Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&) [140] std::allocator<Cell>::allocator(std::allocator<Cell> const&) [71] std::vector<Faction, std::allocator<Faction> >::operator[](unsigned long)
  [11] Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&, int, int) [138] std::allocator<Cell>::~allocator() [33] void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&)
  [27] Board::Board(int, int, int, int, int, XColor*) [365] std::allocator<Move>::allocator(std::allocator<Move> const&) [40] std::vector<Cell, std::allocator<Cell> >* std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > >(unsigned long, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >)
 [356] Board::~Board()       [366] std::allocator<Move>::allocator() [8] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long)
  [86] Faction::getAccuracy() [341] std::allocator<Move>::~allocator() [31] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::push_back(std::vector<Cell, std::allocator<Cell> > const&)
  [87] Faction::getStrength() [367] std::allocator<Faction>::allocator() [351] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::vector()
 [289] Faction::init(int)    [368] std::allocator<Faction>::~allocator() [352] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector()
  [88] Faction::getArmor()   [342] std::allocator<std::vector<Cell, std::allocator<Cell> > >::allocator() [35] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&)
  [15] Faction::getSpeed()   [343] std::allocator<std::vector<Cell, std::allocator<Cell> > >::~allocator() [19] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator[](unsigned long)
  [95] Faction::getHealth()  [295] std::allocator<int>::allocator() [205] void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&)
 [126] __gnu_cxx::new_allocator<Cell>::deallocate(Cell*, unsigned long) [296] std::allocator<int>::~allocator() [224] void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&)
 [127] __gnu_cxx::new_allocator<Cell>::allocate(unsigned long, void const*) [324] Faction* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Faction>(Faction const*, Faction const*, Faction*) [170] std::vector<int, std::allocator<int> >::at(unsigned long)
 [113] void __gnu_cxx::new_allocator<Cell>::construct<Cell, Cell const&>(Cell*, Cell const&) [219] int* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) [304] std::vector<int, std::allocator<int> >::end()
 [139] __gnu_cxx::new_allocator<Cell>::new_allocator(__gnu_cxx::new_allocator<Cell> const&) [270] void std::_Destroy_aux<false>::__destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [305] std::vector<int, std::allocator<int> >::begin()
 [175] __gnu_cxx::new_allocator<Cell>::new_allocator() [122] void std::_Destroy_aux<true>::__destroy<Cell*>(Cell*, Cell*) [206] std::vector<int, std::allocator<int> >::push_back(int&&)
 [137] __gnu_cxx::new_allocator<Cell>::~new_allocator() [244] void std::_Destroy_aux<true>::__destroy<Move*>(Move*, Move*) [306] std::vector<int, std::allocator<int> >::vector()
 [257] __gnu_cxx::new_allocator<Move>::deallocate(Move*, unsigned long) [317] void std::_Destroy_aux<true>::__destroy<Faction*>(Faction*, Faction*) [307] std::vector<int, std::allocator<int> >::~vector()
  [16] void __gnu_cxx::new_allocator<Move>::destroy<Move>(Move*) [210] void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [171] std::vector<int, std::allocator<int> >::operator[](unsigned long)
 [258] __gnu_cxx::new_allocator<Move>::allocate(unsigned long, void const*) [128] std::_Vector_base<Cell, std::allocator<Cell> >::_M_allocate(unsigned long) [99] void std::_Construct<Cell, Cell const&>(Cell*, Cell const&)
  [74] void __gnu_cxx::new_allocator<Move>::construct<Move, Move>(Move*, Move&&) [183] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_M_swap_data(std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl&) [110] void std::_Construct<Cell, Cell>(Cell*, Cell&&)
 [357] __gnu_cxx::new_allocator<Move>::new_allocator() [158] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell> const&) [106] void std::_Construct<Move, Move>(Move*, Move&&)
 [358] __gnu_cxx::new_allocator<Move>::new_allocator(__gnu_cxx::new_allocator<Move> const&) [179] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl() [38] void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&)
 [337] __gnu_cxx::new_allocator<Move>::~new_allocator() [184] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell>&&) [189] void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >&&)
 [321] __gnu_cxx::new_allocator<Faction>::deallocate(Faction*, unsigned long) [143] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::~_Vector_impl() [4] void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>)
 [322] __gnu_cxx::new_allocator<Faction>::allocate(unsigned long, void const*) [123] std::_Vector_base<Cell, std::allocator<Cell> >::_M_deallocate(Cell*, unsigned long) [91] Cell* std::__addressof<Cell>(Cell&)
 [290] void __gnu_cxx::new_allocator<Faction>::construct<Faction>(Faction*) [159] std::_Vector_base<Cell, std::allocator<Cell> >::_M_create_storage(unsigned long) [107] Move* std::__addressof<Move>(Move&)
 [359] __gnu_cxx::new_allocator<Faction>::new_allocator() [116] std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() [141] std::vector<Cell, std::allocator<Cell> >* std::__addressof<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >&)
 [360] __gnu_cxx::new_allocator<Faction>::~new_allocator() [185] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&) [383] void std::__make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>)
 [276] __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [160] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(unsigned long, std::allocator<Cell> const&) [22] void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>)
 [277] __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::allocate(unsigned long, void const*) [180] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base() [214] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__miter_base<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  [36] void __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [144] std::_Vector_base<Cell, std::allocator<Cell> >::~_Vector_base() [286] decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Faction*>(std::move_iterator<Faction*>)
 [338] __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::new_allocator() [260] std::_Vector_base<Move, std::allocator<Move> >::_M_allocate(unsigned long) [287] Faction* std::__miter_base<Faction*>(Faction*)
 [339] __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::~new_allocator() [369] std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_M_swap_data(std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl&) [197] decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>)
 [216] __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [370] std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl() [198] int* std::__miter_base<int*>(int*)
 [217] __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [371] std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl(std::allocator<Move>&&) [269] Faction* std::__niter_base<Faction*>(Faction*)
 [203] void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [344] std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::~_Vector_impl() [168] int* std::__niter_base<int*>(int*)
 [291] __gnu_cxx::new_allocator<int>::new_allocator() [245] std::_Vector_base<Move, std::allocator<Move> >::_M_deallocate(Move*, unsigned long) [202] int* std::__niter_base<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
 [292] __gnu_cxx::new_allocator<int>::~new_allocator() [215] std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() [5] void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>)
 [155] __gnu_cxx::__alloc_traits<std::allocator<Cell> >::_S_select_on_copy(std::allocator<Cell> const&) [372] std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&) [330] Faction* std::__copy_move_a<true, Faction*, Faction*>(Faction*, Faction*, Faction*)
 [361] __gnu_cxx::__alloc_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_S_propagate_on_copy_assign() [373] std::_Vector_base<Move, std::allocator<Move> >::_Vector_base() [225] int* std::__copy_move_a<true, int*, int*>(int*, int*, int*)
  [50] __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move* const&) [345] std::_Vector_base<Move, std::allocator<Move> >::~_Vector_base() [247] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::move_backward<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  [82] __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator--() [325] std::_Vector_base<Faction, std::allocator<Faction> >::_M_allocate(unsigned long) [331] Faction* std::__copy_move_a2<true, Faction*, Faction*>(Faction*, Faction*, Faction*)
 [142] __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::__normal_iterator(Cell const* const&) [374] std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::_Vector_impl() [226] int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*)
  [97] __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator++() [375] std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::~_Vector_impl() [308] void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter)
  [63] __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move const* const&) [318] std::_Vector_base<Faction, std::allocator<Faction> >::_M_deallocate(Faction*, unsigned long) [309] void std::__introsort_loop<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter)
 [340] __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::__normal_iterator(std::vector<Cell, std::allocator<Cell> > const* const&) [274] std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() [163] Cell* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*)
 [176] __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator++() [376] std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_base() [41] std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*)
 [200] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [377] std::_Vector_base<Faction, std::allocator<Faction> >::~_Vector_base() [134] Cell* std::uninitialized_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*)
 [231] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator--() [281] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate(unsigned long) [265] Move* std::uninitialized_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*)
 [208] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator++() [346] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::_Vector_impl() [332] Faction* std::uninitialized_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*)
  [62] __gnu_cxx::__ops::_Iter_comp_val<compareMove>::_Iter_comp_val(compareMove) [347] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::~_Vector_impl() [310] std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*)
  [60] bool __gnu_cxx::__ops::_Iter_comp_val<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move&) [271] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [227] int* std::uninitialized_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)
  [80] __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::_Iter_comp_iter(compareMove) [243] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() [248] int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*)
  [55] bool __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >) [348] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_base() [311] void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter)
  [83] __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(__gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [349] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~_Vector_base() [164] Cell* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, Cell>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, std::allocator<Cell>&)
  [75] __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(compareMove) [220] std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [42] std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
 [241] __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter) [297] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [135] Cell* std::__uninitialized_copy_a<std::move_iterator<Cell*>, Cell*, Cell>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*, std::allocator<Cell>&)
  [81] __gnu_cxx::__ops::_Iter_comp_iter<compareMove> __gnu_cxx::__ops::__iter_comp_iter<compareMove>(compareMove) [298] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [266] Move* std::__uninitialized_copy_a<std::move_iterator<Move*>, Move*, Move>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*, std::allocator<Move>&)
 [293] __gnu_cxx::__ops::__iter_less_iter() [211] std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [333] Faction* std::__uninitialized_copy_a<std::move_iterator<Faction*>, Faction*, Faction>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*, std::allocator<Faction>&)
 [294] bool __gnu_cxx::operator==<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [186] std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [312] std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
  [59] __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&) [299] std::_Vector_base<int, std::allocator<int> >::_Vector_base() [228] int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&)
 [240] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [300] std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [249] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  [96] bool __gnu_cxx::operator!=<Cell const*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&) [119] std::move_iterator<Cell*>::move_iterator(Cell*) [242] void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter)
 [174] bool __gnu_cxx::operator!=<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&) [109] std::move_iterator<Cell*>::operator++() [121] std::move_iterator<Cell*> std::__make_move_if_noexcept_iterator<Cell, std::move_iterator<Cell*> >(Cell*)
 [201] bool __gnu_cxx::operator!=<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [235] std::move_iterator<Move*>::move_iterator(Move*) [237] std::move_iterator<Move*> std::__make_move_if_noexcept_iterator<Move, std::move_iterator<Move*> >(Move*)
 [115] __gnu_cxx::new_allocator<Cell>::max_size() const [105] std::move_iterator<Move*>::operator++() [288] std::move_iterator<Faction*> std::__make_move_if_noexcept_iterator<Faction, std::move_iterator<Faction*> >(Faction*)
 [207] __gnu_cxx::new_allocator<Move>::max_size() const [282] std::move_iterator<Faction*>::move_iterator(Faction*) [256] std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> std::__make_move_if_noexcept_iterator<std::vector<Cell, std::allocator<Cell> >, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> >(std::vector<Cell, std::allocator<Cell> >*)
 [268] __gnu_cxx::new_allocator<Faction>::max_size() const [254] std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::move_iterator(std::vector<Cell, std::allocator<Cell> >*) [199] std::move_iterator<int*> std::__make_move_if_noexcept_iterator<int, std::move_iterator<int*> >(int*)
 [238] __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::max_size() const [187] std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator++() [136] Cell* std::__uninitialized_move_if_noexcept_a<Cell*, Cell*, std::allocator<Cell> >(Cell*, Cell*, Cell*, std::allocator<Cell>&)
 [167] __gnu_cxx::new_allocator<int>::max_size() const [195] std::move_iterator<int*>::move_iterator(int*) [267] Move* std::__uninitialized_move_if_noexcept_a<Move*, Move*, std::allocator<Move> >(Move*, Move*, Move*, std::allocator<Move>&)
  [57] __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::base() const [3] std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop() [334] Faction* std::__uninitialized_move_if_noexcept_a<Faction*, Faction*, std::allocator<Faction> >(Faction*, Faction*, Faction*, std::allocator<Faction>&)
  [51] __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [21] std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [313] std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_move_if_noexcept_a<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
  [76] __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator-(long) const [43] std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [229] int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
   [7] __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator+(long) const [378] std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::~priority_queue() [132] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  [90] __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::base() const [129] std::allocator_traits<std::allocator<Cell> >::deallocate(std::allocator<Cell>&, Cell*, unsigned long) [314] std::__lg(long)
  [98] __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator*() const [161] std::allocator_traits<std::allocator<Cell> >::select_on_container_copy_construction(std::allocator<Cell> const&) [335] Faction* std::copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*)
  [64] __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::operator*() const [130] std::allocator_traits<std::allocator<Cell> >::allocate(std::allocator<Cell>&, unsigned long) [230] int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)
 [154] __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::base() const [120] std::allocator_traits<std::allocator<Cell> >::max_size(std::allocator<Cell> const&) [52] std::remove_reference<Move&>::type&& std::move<Move&>(Move&)
 [177] __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator*() const [114] void std::allocator_traits<std::allocator<Cell> >::construct<Cell, Cell const&>(std::allocator<Cell>&, Cell*, Cell const&) [131] std::remove_reference<Cell*&>::type&& std::move<Cell*&>(Cell*&)
 [147] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [261] std::allocator_traits<std::allocator<Move> >::deallocate(std::allocator<Move>&, Move*, unsigned long) [275] std::remove_reference<Move*&>::type&& std::move<Move*&>(Move*&)
 [151] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [17] void std::allocator_traits<std::allocator<Move> >::destroy<Move>(std::allocator<Move>&, Move*) [165] std::remove_reference<std::allocator<Cell>&>::type&& std::move<std::allocator<Cell>&>(std::allocator<Cell>&)
 [239] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator+(long) const [262] std::allocator_traits<std::allocator<Move> >::allocate(std::allocator<Move>&, unsigned long) [353] std::remove_reference<std::allocator<Move>&>::type&& std::move<std::allocator<Move>&>(std::allocator<Move>&)
 [232] bool __gnu_cxx::__ops::_Val_less_iter::operator()<int, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(int&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [236] std::allocator_traits<std::allocator<Move> >::max_size(std::allocator<Move> const&) [190] std::remove_reference<std::vector<Cell, std::allocator<Cell> >&>::type&& std::move<std::vector<Cell, std::allocator<Cell> >&>(std::vector<Cell, std::allocator<Cell> >&)
 [209] bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [77] void std::allocator_traits<std::allocator<Move> >::construct<Move, Move>(std::allocator<Move>&, Move*, Move&&) [354] std::remove_reference<std::vector<Move, std::allocator<Move> >&>::type&& std::move<std::vector<Move, std::allocator<Move> >&>(std::vector<Move, std::allocator<Move> >&)
 [117] std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() const [326] std::allocator_traits<std::allocator<Faction> >::deallocate(std::allocator<Faction>&, Faction*, unsigned long) [166] std::remove_reference<int&>::type&& std::move<int&>(int&)
 [233] std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() const [327] std::allocator_traits<std::allocator<Faction> >::allocate(std::allocator<Faction>&, unsigned long) [315] void std::sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
 [278] std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() const [283] std::allocator_traits<std::allocator<Faction> >::max_size(std::allocator<Faction> const&) [150] std::enable_if<std::__and_<std::is_move_constructible<Cell*>, std::is_move_assignable<Cell*> >::value, void>::type std::swap<Cell*>(Cell*&, Cell*&)
 [252] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() const [301] void std::allocator_traits<std::allocator<Faction> >::construct<Faction>(std::allocator<Faction>&, Faction*) [336] std::enable_if<std::__and_<std::is_move_constructible<Move*>, std::is_move_assignable<Move*> >::value, void>::type std::swap<Move*>(Move*&, Move*&)
 [192] std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [284] std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::deallocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, unsigned long) [316] void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter)
  [92] std::move_iterator<Cell*>::base() const [285] std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::allocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, unsigned long) [111] Cell&& std::forward<Cell>(std::remove_reference<Cell>::type&)
 [108] std::move_iterator<Cell*>::operator*() const [255] std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size(std::allocator<std::vector<Cell, std::allocator<Cell> > > const&) [58] Move&& std::forward<Move>(std::remove_reference<Move>::type&)
  [94] std::move_iterator<Move*>::base() const [37] void std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [89] Cell const& std::forward<Cell const&>(std::remove_reference<Cell const&>::type&)
 [104] std::move_iterator<Move*>::operator*() const [221] std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [148] std::vector<Cell, std::allocator<Cell> > const& std::forward<std::vector<Cell, std::allocator<Cell> > const&>(std::remove_reference<std::vector<Cell, std::allocator<Cell> > const&>::type&)
 [279] std::move_iterator<Faction*>::base() const [222] std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [191] std::vector<Cell, std::allocator<Cell> >&& std::forward<std::vector<Cell, std::allocator<Cell> > >(std::remove_reference<std::vector<Cell, std::allocator<Cell> > >::type&)
 [153] std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::base() const [196] std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [152] int&& std::forward<int>(std::remove_reference<int>::type&)
 [182] std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator*() const [204] void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [124] void std::_Destroy<Cell*>(Cell*, Cell*)
 [193] std::move_iterator<int*>::base() const [246] int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*) [125] void std::_Destroy<Cell*, Cell>(Cell*, Cell*, std::allocator<Cell>&)
  [65] std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::top() const [162] Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [250] void std::_Destroy<Move*>(Move*, Move*)
  [85] std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::size() const [39] std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [251] void std::_Destroy<Move*, Move>(Move*, Move*, std::allocator<Move>&)
  [30] std::vector<Cell, std::allocator<Cell> >::_M_check_len(unsigned long, char const*) const [133] Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [319] void std::_Destroy<Faction*>(Faction*, Faction*)
  [20] std::vector<Cell, std::allocator<Cell> >::_M_range_check(unsigned long) const [263] Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [320] void std::_Destroy<Faction*, Faction>(Faction*, Faction*, std::allocator<Faction>&)
 [156] std::vector<Cell, std::allocator<Cell> >::end() const [302] std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [272] void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*)
  [13] std::vector<Cell, std::allocator<Cell> >::size() const [328] Faction* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [273] void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
 [157] std::vector<Cell, std::allocator<Cell> >::begin() const [223] int* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [212] void std::_Destroy<int*>(int*, int*)
 [118] std::vector<Cell, std::allocator<Cell> >::max_size() const [29] void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [213] void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
 [259] std::vector<Move, std::allocator<Move> >::_M_check_len(unsigned long, char const*) const [12] std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [149] void std::_Destroy<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*)
  [84] std::vector<Move, std::allocator<Move> >::size() const [28] std::vector<Cell, std::allocator<Cell> >::push_back(Cell const&) [6] void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove)
  [66] std::vector<Move, std::allocator<Move> >::begin() const [32] std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [384] void std::make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove)
  [67] std::vector<Move, std::allocator<Move> >::front() const [181] std::vector<Cell, std::allocator<Cell> >::vector() [23] void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove)
 [234] std::vector<Move, std::allocator<Move> >::max_size() const [188] std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> >&&) [100] bool std::operator==<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&)
 [323] std::vector<Faction, std::allocator<Faction> >::_M_check_len(unsigned long, char const*) const [145] std::vector<Cell, std::allocator<Cell> >::~vector() [102] bool std::operator==<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&)
  [69] std::vector<Faction, std::allocator<Faction> >::_M_range_check(unsigned long) const [53] std::vector<Cell, std::allocator<Cell> >::operator[](unsigned long) [172] bool std::operator==<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&)
  [68] std::vector<Faction, std::allocator<Faction> >::size() const [78] void std::vector<Move, std::allocator<Move> >::emplace_back<Move>(Move&&) [101] bool std::operator!=<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&)
 [280] std::vector<Faction, std::allocator<Faction> >::max_size() const [264] void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [103] bool std::operator!=<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&)
  [34] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_check_len(unsigned long, char const*) const [61] std::vector<Move, std::allocator<Move> >::end() [173] bool std::operator!=<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&)
  [10] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_range_check(unsigned long) const [14] std::vector<Move, std::allocator<Move> >::begin() [72] operator new(unsigned long, void*)
 [362] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::end() const [18] std::vector<Move, std::allocator<Move> >::pop_back()
