Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
  8.87      0.11     0.11 54107057     0.00     0.00  __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator+(long) const
  8.07      0.21     0.10  1013224     0.00     0.00  void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>)
  6.86      0.30     0.09 23012842     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long)
  6.45      0.38     0.08 25988155     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const
  6.45      0.46     0.08  1000000     0.00     0.00  Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&, int, int)
  5.65      0.53     0.07  1000000     0.00     0.00  Board::step(int)
  4.03      0.58     0.05 23018218     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::size() const
  3.63      0.62     0.05 59203983     0.00     0.00  __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move* const&)
  3.63      0.67     0.05 58170221     0.00     0.00  __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const
  3.23      0.71     0.04 23012842     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator[](unsigned long)
  3.23      0.75     0.04 20012845     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::_M_range_check(unsigned long) const
  3.23      0.79     0.04 20012845     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::at(unsigned long)
  3.23      0.83     0.04 20012845     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::operator[](unsigned long)
  2.82      0.86     0.04 22692647     0.00     0.00  std::remove_reference<Move&>::type&& std::move<Move&>(Move&)
  2.82      0.90     0.04  1013224     0.00     0.00  void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>)
  2.42      0.93     0.03 12506569     0.00     0.00  bool __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >)
  1.61      0.95     0.02 23012842     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_range_check(unsigned long) const
  1.61      0.97     0.02  2039069     0.00     0.00  bool __gnu_cxx::__ops::_Iter_comp_val<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move&)
  1.61      0.99     0.02  1023492     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(compareMove)
  1.61      1.01     0.02  1013224     0.00     0.00  std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop()
  1.61      1.03     0.02        4     5.00     5.00  void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>()
  1.21      1.04     0.02 14545638     0.00     0.00  compareMove::operator()(Move, Move)
  1.21      1.06     0.02  2036717     0.00     0.00  std::vector<Move, std::allocator<Move> >::begin()
  1.21      1.07     0.02  1312470     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::at(unsigned long)
  0.81      1.08     0.01  7999992     0.00     0.00  Cell::Cell()
  0.81      1.09     0.01  6099882     0.00     0.00  __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::base() const
  0.81      1.10     0.01  2036716     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_val<compareMove>::_Iter_comp_val(compareMove)
  0.81      1.11     0.01  2013225     0.00     0.00  std::vector<Move, std::allocator<Move> >::begin() const
  0.81      1.12     0.01  1335992     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::size() const
  0.81      1.13     0.01  1312470     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::_M_range_check(unsigned long) const
  0.81      1.14     0.01  1023492     0.00     0.00  Move::Move(int, int, int, int)
  0.81      1.15     0.01  1023492     0.00     0.00  Faction::getSpeed()
  0.81      1.16     0.01  1023492     0.00     0.00  void __gnu_cxx::new_allocator<Move>::construct<Move, Move>(Move*, Move&&)
  0.81      1.17     0.01  1023492     0.00     0.00  void std::vector<Move, std::allocator<Move> >::emplace_back<Move>(Move&&)
  0.81      1.18     0.01  1013225     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<compareMove> __gnu_cxx::__ops::__iter_comp_iter<compareMove>(compareMove)
  0.81      1.19     0.01  1013224     0.00     0.00  void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove)
  0.81      1.20     0.01        3     3.33     3.33  std::enable_if<std::__and_<std::is_move_constructible<Move*>, std::is_move_assignable<Move*> >::value, void>::type std::swap<Move*>(Move*&, Move*&)
  0.81      1.21     0.01                             main
  0.40      1.22     0.01  3049941     0.00     0.00  __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&)
  0.40      1.22     0.01  1087283     0.00     0.00  operator new(unsigned long, void*)
  0.40      1.23     0.01  1013224     0.00     0.00  void std::allocator_traits<std::allocator<Move> >::destroy<Move>(std::allocator<Move>&, Move*)
  0.40      1.23     0.01        7     0.71     3.57  void std::vector<Faction, std::allocator<Faction> >::emplace_back<>()
  0.40      1.24     0.01        1     5.00    15.00  std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&)
  0.40      1.24     0.01        1     5.00    20.00  std::vector<Move, std::allocator<Move> >::vector(std::vector<Move, std::allocator<Move> >&&)
  0.00      1.24     0.00  3086874     0.00     0.00  Move&& std::forward<Move>(std::remove_reference<Move>::type&)
  0.00      1.24     0.00  2036717     0.00     0.00  std::vector<Move, std::allocator<Move> >::end()
  0.00      1.24     0.00  2036716     0.00     0.00  void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>)
  0.00      1.24     0.00  2013225     0.00     0.00  __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move const* const&)
  0.00      1.24     0.00  2013225     0.00     0.00  __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::operator*() const
  0.00      1.24     0.00  2013225     0.00     0.00  std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::top() const
  0.00      1.24     0.00  2013225     0.00     0.00  std::vector<Move, std::allocator<Move> >::front() const
  0.00      1.24     0.00  1312470     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::operator[](unsigned long)
  0.00      1.24     0.00  1023492     0.00     0.00  __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator-(long) const
  0.00      1.24     0.00  1023492     0.00     0.00  std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&)
  0.00      1.24     0.00  1023492     0.00     0.00  void std::allocator_traits<std::allocator<Move> >::construct<Move, Move>(std::allocator<Move>&, Move*, Move&&)
  0.00      1.24     0.00  1023492     0.00     0.00  std::vector<Move, std::allocator<Move> >::push_back(Move&&)
  0.00      1.24     0.00  1023492     0.00     0.00  void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove)
  0.00      1.24     0.00  1013225     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::_Iter_comp_iter(compareMove)
  0.00      1.24     0.00  1013224     0.00     0.00  void __gnu_cxx::new_allocator<Move>::destroy<Move>(Move*)
  0.00      1.24     0.00  1013224     0.00     0.00  __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator--()
  0.00      1.24     0.00  1013224     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(__gnu_cxx::__ops::_Iter_comp_iter<compareMove>)
  0.00      1.24     0.00  1013224     0.00     0.00  std::vector<Move, std::allocator<Move> >::pop_back()
  0.00      1.24     0.00  1000075     0.00     0.00  std::vector<Move, std::allocator<Move> >::size() const
  0.00      1.24     0.00  1000000     0.00     0.00  std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::size() const
  0.00      1.24     0.00    91899     0.00     0.00  Faction::getAccuracy()
  0.00      1.24     0.00    91899     0.00     0.00  Faction::getStrength()
  0.00      1.24     0.00    81680     0.00     0.00  Faction::getArmor()
  0.00      1.24     0.00    41984     0.00     0.00  Cell const& std::forward<Cell const&>(std::remove_reference<Cell const&>::type&)
  0.00      1.24     0.00    41472     0.00     0.00  __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::base() const
  0.00      1.24     0.00    36736     0.00     0.00  Cell* std::__addressof<Cell>(Cell&)
  0.00      1.24     0.00    34560     0.00     0.00  std::move_iterator<Cell*>::base() const
  0.00      1.24     0.00    33733     0.00     0.00  Cell::init(int)
  0.00      1.24     0.00    32796     0.00     0.00  std::move_iterator<Move*>::base() const
  0.00      1.24     0.00    23493     0.00     0.00  Board::setCell(int, int, int, int)
  0.00      1.24     0.00    23493     0.00     0.00  Faction::getHealth()
  0.00      1.24     0.00    20736     0.00     0.00  bool __gnu_cxx::operator!=<Cell const*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&)
  0.00      1.24     0.00    20480     0.00     0.00  __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator++()
  0.00      1.24     0.00    20480     0.00     0.00  __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator*() const
  0.00      1.24     0.00    20480     0.00     0.00  void std::_Construct<Cell, Cell const&>(Cell*, Cell const&)
  0.00      1.24     0.00    17280     0.00     0.00  bool std::operator==<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&)
  0.00      1.24     0.00    17280     0.00     0.00  bool std::operator!=<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&)
  0.00      1.24     0.00    16398     0.00     0.00  bool std::operator==<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&)
  0.00      1.24     0.00    16398     0.00     0.00  bool std::operator!=<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&)
  0.00      1.24     0.00    16383     0.00     0.00  std::move_iterator<Move*>::operator*() const
  0.00      1.24     0.00    16383     0.00     0.00  std::move_iterator<Move*>::operator++()
  0.00      1.24     0.00    16383     0.00     0.00  void std::_Construct<Move, Move>(Move*, Move&&)
  0.00      1.24     0.00    16383     0.00     0.00  Move* std::__addressof<Move>(Move&)
  0.00      1.24     0.00    16256     0.00     0.00  std::move_iterator<Cell*>::operator*() const
  0.00      1.24     0.00    16256     0.00     0.00  std::move_iterator<Cell*>::operator++()
  0.00      1.24     0.00    16256     0.00     0.00  void std::_Construct<Cell, Cell>(Cell*, Cell&&)
  0.00      1.24     0.00    16256     0.00     0.00  Cell&& std::forward<Cell>(std::remove_reference<Cell>::type&)
  0.00      1.24     0.00    10240     0.00     0.00  Cell::Cell(int, int)
  0.00      1.24     0.00    10240     0.00     0.00  void __gnu_cxx::new_allocator<Cell>::construct<Cell, Cell const&>(Cell*, Cell const&)
  0.00      1.24     0.00    10240     0.00     0.00  void std::allocator_traits<std::allocator<Cell> >::construct<Cell, Cell const&>(std::allocator<Cell>&, Cell*, Cell const&)
  0.00      1.24     0.00    10240     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::push_back(Cell const&)
  0.00      1.24     0.00     3328     0.00     0.00  __gnu_cxx::new_allocator<Cell>::max_size() const
  0.00      1.24     0.00     2942     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator()
  0.00      1.24     0.00     2304     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() const
  0.00      1.24     0.00     2048     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::max_size() const
  0.00      1.24     0.00     2048     0.00     0.00  std::move_iterator<Cell*>::move_iterator(Cell*)
  0.00      1.24     0.00     2048     0.00     0.00  std::allocator_traits<std::allocator<Cell> >::max_size(std::allocator<Cell> const&)
  0.00      1.24     0.00     2048     0.00     0.00  std::move_iterator<Cell*> std::__make_move_if_noexcept_iterator<Cell, std::move_iterator<Cell*> >(Cell*)
  0.00      1.24     0.00     1535     0.00     0.00  void std::_Destroy_aux<true>::__destroy<Cell*>(Cell*, Cell*)
  0.00      1.24     0.00     1535     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_M_deallocate(Cell*, unsigned long)
  0.00      1.24     0.00     1535     0.00     0.00  void std::_Destroy<Cell*>(Cell*, Cell*)
  0.00      1.24     0.00     1535     0.00     0.00  void std::_Destroy<Cell*, Cell>(Cell*, Cell*, std::allocator<Cell>&)
  0.00      1.24     0.00     1280     0.00     0.00  __gnu_cxx::new_allocator<Cell>::deallocate(Cell*, unsigned long)
  0.00      1.24     0.00     1280     0.00     0.00  __gnu_cxx::new_allocator<Cell>::allocate(unsigned long, void const*)
  0.00      1.24     0.00     1280     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_M_allocate(unsigned long)
  0.00      1.24     0.00     1280     0.00     0.00  std::allocator_traits<std::allocator<Cell> >::deallocate(std::allocator<Cell>&, Cell*, unsigned long)
  0.00      1.24     0.00     1280     0.00     0.00  std::allocator_traits<std::allocator<Cell> >::allocate(std::allocator<Cell>&, unsigned long)
  0.00      1.24     0.00     1143     0.00     0.00  std::remove_reference<Cell*&>::type&& std::move<Cell*&>(Cell*&)
  0.00      1.24     0.00     1079     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      1.24     0.00     1024     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::_M_check_len(unsigned long, char const*) const
  0.00      1.24     0.00     1024     0.00     0.00  Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*)
  0.00      1.24     0.00     1024     0.00     0.00  void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&)
  0.00      1.24     0.00     1024     0.00     0.00  Cell* std::uninitialized_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*)
  0.00      1.24     0.00     1024     0.00     0.00  Cell* std::__uninitialized_copy_a<std::move_iterator<Cell*>, Cell*, Cell>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*, std::allocator<Cell>&)
  0.00      1.24     0.00     1024     0.00     0.00  Cell* std::__uninitialized_move_if_noexcept_a<Cell*, Cell*, std::allocator<Cell> >(Cell*, Cell*, Cell*, std::allocator<Cell>&)
  0.00      1.24     0.00      767     0.00     0.00  __gnu_cxx::new_allocator<Cell>::~new_allocator()
  0.00      1.24     0.00      767     0.00     0.00  std::allocator<Cell>::~allocator()
  0.00      1.24     0.00      639     0.00     0.00  __gnu_cxx::new_allocator<Cell>::new_allocator(__gnu_cxx::new_allocator<Cell> const&)
  0.00      1.24     0.00      639     0.00     0.00  std::allocator<Cell>::allocator(std::allocator<Cell> const&)
  0.00      1.24     0.00      638     0.00     0.00  std::vector<Cell, std::allocator<Cell> >* std::__addressof<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >&)
  0.00      1.24     0.00      512     0.00     0.00  __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::__normal_iterator(Cell const* const&)
  0.00      1.24     0.00      511     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::~_Vector_impl()
  0.00      1.24     0.00      511     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::~_Vector_base()
  0.00      1.24     0.00      511     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::~vector()
  0.00      1.24     0.00      392     0.00     0.00  std::vector<Cell, std::allocator<Cell> > const& std::forward<std::vector<Cell, std::allocator<Cell> > const&>(std::remove_reference<std::vector<Cell, std::allocator<Cell> > const&>::type&)
  0.00      1.24     0.00      383     0.00     0.00  void std::_Destroy<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*)
  0.00      1.24     0.00      381     0.00     0.00  std::enable_if<std::__and_<std::is_move_constructible<Cell*>, std::is_move_assignable<Cell*> >::value, void>::type std::swap<Cell*>(Cell*&, Cell*&)
  0.00      1.24     0.00      270     0.00     0.00  std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::base() const
  0.00      1.24     0.00      258     0.00     0.00  __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::base() const
  0.00      1.24     0.00      256     0.00     0.00  __gnu_cxx::__alloc_traits<std::allocator<Cell> >::_S_select_on_copy(std::allocator<Cell> const&)
  0.00      1.24     0.00      256     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::end() const
  0.00      1.24     0.00      256     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::begin() const
  0.00      1.24     0.00      256     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell> const&)
  0.00      1.24     0.00      256     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_M_create_storage(unsigned long)
  0.00      1.24     0.00      256     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(unsigned long, std::allocator<Cell> const&)
  0.00      1.24     0.00      256     0.00     0.00  std::allocator_traits<std::allocator<Cell> >::select_on_container_copy_construction(std::allocator<Cell> const&)
  0.00      1.24     0.00      256     0.00     0.00  Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*)
  0.00      1.24     0.00      256     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&)
  0.00      1.24     0.00      256     0.00     0.00  Cell* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*)
  0.00      1.24     0.00      256     0.00     0.00  Cell* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, Cell>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, std::allocator<Cell>&)
  0.00      1.24     0.00      254     0.00     0.00  std::remove_reference<std::allocator<Cell>&>::type&& std::move<std::allocator<Cell>&>(std::allocator<Cell>&)
  0.00      1.24     0.00      252     0.00     0.00  std::vector<int, std::allocator<int> >::size() const
  0.00      1.24     0.00      208     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
  0.00      1.24     0.00      184     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const
  0.00      1.24     0.00      154     0.00     0.00  int&& std::forward<int>(std::remove_reference<int>::type&)
  0.00      1.24     0.00      135     0.00     0.00  bool std::operator==<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&)
  0.00      1.24     0.00      135     0.00     0.00  bool std::operator!=<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&)
  0.00      1.24     0.00      129     0.00     0.00  bool __gnu_cxx::operator!=<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&)
  0.00      1.24     0.00      128     0.00     0.00  __gnu_cxx::new_allocator<Cell>::new_allocator()
  0.00      1.24     0.00      128     0.00     0.00  void __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&)
  0.00      1.24     0.00      128     0.00     0.00  __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator++()
  0.00      1.24     0.00      128     0.00     0.00  __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator*() const
  0.00      1.24     0.00      128     0.00     0.00  std::allocator<Cell>::allocator()
  0.00      1.24     0.00      128     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl()
  0.00      1.24     0.00      128     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base()
  0.00      1.24     0.00      128     0.00     0.00  void std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&)
  0.00      1.24     0.00      128     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::vector()
  0.00      1.24     0.00      128     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::push_back(std::vector<Cell, std::allocator<Cell> > const&)
  0.00      1.24     0.00      128     0.00     0.00  void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&)
  0.00      1.24     0.00      127     0.00     0.00  std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator*() const
  0.00      1.24     0.00      127     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_M_swap_data(std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl&)
  0.00      1.24     0.00      127     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell>&&)
  0.00      1.24     0.00      127     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&)
  0.00      1.24     0.00      127     0.00     0.00  std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator++()
  0.00      1.24     0.00      127     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> >&&)
  0.00      1.24     0.00      127     0.00     0.00  void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >&&)
  0.00      1.24     0.00      127     0.00     0.00  std::remove_reference<std::vector<Cell, std::allocator<Cell> >&>::type&& std::move<std::vector<Cell, std::allocator<Cell> >&>(std::vector<Cell, std::allocator<Cell> >&)
  0.00      1.24     0.00      127     0.00     0.00  std::vector<Cell, std::allocator<Cell> >&& std::forward<std::vector<Cell, std::allocator<Cell> > >(std::remove_reference<std::vector<Cell, std::allocator<Cell> > >::type&)
  0.00      1.24     0.00      121     0.00     0.00  std::remove_reference<int&>::type&& std::move<int&>(int&)
  0.00      1.24     0.00       84     0.00     0.00  __gnu_cxx::new_allocator<int>::max_size() const
  0.00      1.24     0.00       84     0.00     0.00  int* std::__niter_base<int*>(int*)
  0.00      1.24     0.00       70     0.00     0.00  std::vector<int, std::allocator<int> >::_M_range_check(unsigned long) const
  0.00      1.24     0.00       70     0.00     0.00  std::vector<int, std::allocator<int> >::at(unsigned long)
  0.00      1.24     0.00       70     0.00     0.00  std::vector<int, std::allocator<int> >::operator[](unsigned long)
  0.00      1.24     0.00       63     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
  0.00      1.24     0.00       57     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
  0.00      1.24     0.00       56     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
  0.00      1.24     0.00       56     0.00     0.00  std::move_iterator<int*>::base() const
  0.00      1.24     0.00       56     0.00     0.00  std::vector<int, std::allocator<int> >::max_size() const
  0.00      1.24     0.00       56     0.00     0.00  std::move_iterator<int*>::move_iterator(int*)
  0.00      1.24     0.00       56     0.00     0.00  std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
  0.00      1.24     0.00       56     0.00     0.00  decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>)
  0.00      1.24     0.00       56     0.00     0.00  int* std::__miter_base<int*>(int*)
  0.00      1.24     0.00       56     0.00     0.00  std::move_iterator<int*> std::__make_move_if_noexcept_iterator<int, std::move_iterator<int*> >(int*)
  0.00      1.24     0.00       54     0.00     0.00  int* std::__niter_base<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  0.00      1.24     0.00       49     0.00     0.00  bool __gnu_cxx::operator!=<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
  0.00      1.24     0.00       45     0.00     0.00  __gnu_cxx::new_allocator<Move>::max_size() const
  0.00      1.24     0.00       42     0.00     0.00  void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&)
  0.00      1.24     0.00       42     0.00     0.00  void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&)
  0.00      1.24     0.00       42     0.00     0.00  void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&)
  0.00      1.24     0.00       42     0.00     0.00  std::vector<int, std::allocator<int> >::push_back(int&&)
  0.00      1.24     0.00       36     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__miter_base<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  0.00      1.24     0.00       35     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator++()
  0.00      1.24     0.00       35     0.00     0.00  bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const
  0.00      1.24     0.00       35     0.00     0.00  void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
  0.00      1.24     0.00       35     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
  0.00      1.24     0.00       35     0.00     0.00  void std::_Destroy<int*>(int*, int*)
  0.00      1.24     0.00       35     0.00     0.00  void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
  0.00      1.24     0.00       33     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator()
  0.00      1.24     0.00       30     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() const
  0.00      1.24     0.00       30     0.00     0.00  std::vector<Move, std::allocator<Move> >::max_size() const
  0.00      1.24     0.00       30     0.00     0.00  std::move_iterator<Move*>::move_iterator(Move*)
  0.00      1.24     0.00       30     0.00     0.00  std::allocator_traits<std::allocator<Move> >::max_size(std::allocator<Move> const&)
  0.00      1.24     0.00       30     0.00     0.00  std::move_iterator<Move*> std::__make_move_if_noexcept_iterator<Move, std::move_iterator<Move*> >(Move*)
  0.00      1.24     0.00       28     0.00     0.00  __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
  0.00      1.24     0.00       28     0.00     0.00  __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
  0.00      1.24     0.00       28     0.00     0.00  std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
  0.00      1.24     0.00       28     0.00     0.00  int* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
  0.00      1.24     0.00       28     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
  0.00      1.24     0.00       28     0.00     0.00  std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long)
  0.00      1.24     0.00       28     0.00     0.00  std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long)
  0.00      1.24     0.00       28     0.00     0.00  int* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)
  0.00      1.24     0.00       28     0.00     0.00  void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&)
  0.00      1.24     0.00       28     0.00     0.00  int* std::__copy_move_a<true, int*, int*>(int*, int*, int*)
  0.00      1.24     0.00       28     0.00     0.00  int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*)
  0.00      1.24     0.00       28     0.00     0.00  int* std::uninitialized_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)
  0.00      1.24     0.00       28     0.00     0.00  int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&)
  0.00      1.24     0.00       28     0.00     0.00  int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
  0.00      1.24     0.00       28     0.00     0.00  int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)
  0.00      1.24     0.00       26     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator--()
  0.00      1.24     0.00       26     0.00     0.00  bool __gnu_cxx::__ops::_Val_less_iter::operator()<int, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(int&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const
  0.00      1.24     0.00       25     0.00     0.00  __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::max_size() const
  0.00      1.24     0.00       25     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator+(long) const
  0.00      1.24     0.00       21     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
  0.00      1.24     0.00       20     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator()
  0.00      1.24     0.00       18     0.00     0.00  int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*)
  0.00      1.24     0.00       18     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::move_backward<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  0.00      1.24     0.00       18     0.00     0.00  int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*)
  0.00      1.24     0.00       18     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  0.00      1.24     0.00       17     0.00     0.00  __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter)
  0.00      1.24     0.00       17     0.00     0.00  void std::_Destroy_aux<true>::__destroy<Move*>(Move*, Move*)
  0.00      1.24     0.00       17     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_M_deallocate(Move*, unsigned long)
  0.00      1.24     0.00       17     0.00     0.00  void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter)
  0.00      1.24     0.00       17     0.00     0.00  void std::_Destroy<Move*>(Move*, Move*)
  0.00      1.24     0.00       17     0.00     0.00  void std::_Destroy<Move*, Move>(Move*, Move*, std::allocator<Move>&)
  0.00      1.24     0.00       16     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() const
  0.00      1.24     0.00       16     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size() const
  0.00      1.24     0.00       16     0.00     0.00  std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::move_iterator(std::vector<Cell, std::allocator<Cell> >*)
  0.00      1.24     0.00       16     0.00     0.00  std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size(std::allocator<std::vector<Cell, std::allocator<Cell> > > const&)
  0.00      1.24     0.00       16     0.00     0.00  std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> std::__make_move_if_noexcept_iterator<std::vector<Cell, std::allocator<Cell> >, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> >(std::vector<Cell, std::allocator<Cell> >*)
  0.00      1.24     0.00       15     0.00     0.00  __gnu_cxx::new_allocator<Move>::deallocate(Move*, unsigned long)
  0.00      1.24     0.00       15     0.00     0.00  __gnu_cxx::new_allocator<Move>::allocate(unsigned long, void const*)
  0.00      1.24     0.00       15     0.00     0.00  std::vector<Move, std::allocator<Move> >::_M_check_len(unsigned long, char const*) const
  0.00      1.24     0.00       15     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_M_allocate(unsigned long)
  0.00      1.24     0.00       15     0.00     0.00  std::allocator_traits<std::allocator<Move> >::deallocate(std::allocator<Move>&, Move*, unsigned long)
  0.00      1.24     0.00       15     0.00     0.00  std::allocator_traits<std::allocator<Move> >::allocate(std::allocator<Move>&, unsigned long)
  0.00      1.24     0.00       15     0.00     0.01  Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*)
  0.00      1.24     0.00       15     0.00     0.01  void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&)
  0.00      1.24     0.00       15     0.00     0.01  Move* std::uninitialized_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*)
  0.00      1.24     0.00       15     0.00     0.01  Move* std::__uninitialized_copy_a<std::move_iterator<Move*>, Move*, Move>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*, std::allocator<Move>&)
  0.00      1.24     0.00       15     0.00     0.01  Move* std::__uninitialized_move_if_noexcept_a<Move*, Move*, std::allocator<Move> >(Move*, Move*, Move*, std::allocator<Move>&)
  0.00      1.24     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<Faction>::max_size() const
  0.00      1.24     0.00       12     0.00     0.00  Faction* std::__niter_base<Faction*>(Faction*)
  0.00      1.24     0.00       11     0.00     0.00  void std::_Destroy_aux<false>::__destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*)
  0.00      1.24     0.00       11     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long)
  0.00      1.24     0.00       11     0.00     0.00  void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*)
  0.00      1.24     0.00       11     0.00     0.00  void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
  0.00      1.24     0.00        9     0.00     0.00  __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long)
  0.00      1.24     0.00        9     0.00     0.00  __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::allocate(unsigned long, void const*)
  0.00      1.24     0.00        9     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator()
  0.00      1.24     0.00        9     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate(unsigned long)
  0.00      1.24     0.00        9     0.00     0.00  std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::deallocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, unsigned long)
  0.00      1.24     0.00        9     0.00     0.00  std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::allocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, unsigned long)
  0.00      1.24     0.00        9     0.00     0.00  std::remove_reference<Move*&>::type&& std::move<Move*&>(Move*&)
  0.00      1.24     0.00        8     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() const
  0.00      1.24     0.00        8     0.00     0.00  std::move_iterator<Faction*>::base() const
  0.00      1.24     0.00        8     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::max_size() const
  0.00      1.24     0.00        8     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_check_len(unsigned long, char const*) const
  0.00      1.24     0.00        8     0.00     0.00  std::move_iterator<Faction*>::move_iterator(Faction*)
  0.00      1.24     0.00        8     0.00     0.00  std::allocator_traits<std::allocator<Faction> >::max_size(std::allocator<Faction> const&)
  0.00      1.24     0.00        8     0.00     0.00  std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*)
  0.00      1.24     0.00        8     0.00     0.00  void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&)
  0.00      1.24     0.00        8     0.00     0.00  decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Faction*>(std::move_iterator<Faction*>)
  0.00      1.24     0.00        8     0.00     0.00  Faction* std::__miter_base<Faction*>(Faction*)
  0.00      1.24     0.00        8     0.00     0.00  std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*)
  0.00      1.24     0.00        8     0.00     0.00  std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
  0.00      1.24     0.00        8     0.00     0.00  std::move_iterator<Faction*> std::__make_move_if_noexcept_iterator<Faction, std::move_iterator<Faction*> >(Faction*)
  0.00      1.24     0.00        8     0.00     0.00  std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_move_if_noexcept_a<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
  0.00      1.24     0.00        7     0.00     0.00  Faction::init(int)
  0.00      1.24     0.00        7     0.00     0.00  void __gnu_cxx::new_allocator<Faction>::construct<Faction>(Faction*)
  0.00      1.24     0.00        7     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator()
  0.00      1.24     0.00        7     0.00     0.00  __gnu_cxx::new_allocator<int>::~new_allocator()
  0.00      1.24     0.00        7     0.00     0.00  __gnu_cxx::__ops::__iter_less_iter()
  0.00      1.24     0.00        7     0.00     0.00  bool __gnu_cxx::operator==<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
  0.00      1.24     0.00        7     0.00     0.00  std::allocator<int>::allocator()
  0.00      1.24     0.00        7     0.00     0.00  std::allocator<int>::~allocator()
  0.00      1.24     0.00        7     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl()
  0.00      1.24     0.00        7     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
  0.00      1.24     0.00        7     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_base()
  0.00      1.24     0.00        7     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
  0.00      1.24     0.00        7     0.00     0.00  void std::allocator_traits<std::allocator<Faction> >::construct<Faction>(std::allocator<Faction>&, Faction*)
  0.00      1.24     0.00        7     0.00     0.00  std::vector<int, std::allocator<int> >::end()
  0.00      1.24     0.00        7     0.00     0.00  std::vector<int, std::allocator<int> >::begin()
  0.00      1.24     0.00        7     0.00     0.00  std::vector<int, std::allocator<int> >::vector()
  0.00      1.24     0.00        7     0.00     0.00  std::vector<int, std::allocator<int> >::~vector()
  0.00      1.24     0.00        7     0.00     0.00  void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      1.24     0.00        7     0.00     0.00  void std::__introsort_loop<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      1.24     0.00        7     0.00     0.00  void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      1.24     0.00        7     0.00     0.00  std::__lg(long)
  0.00      1.24     0.00        7     0.00     0.00  void std::sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  0.00      1.24     0.00        7     0.00     0.00  void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      1.24     0.00        5     0.00     0.00  void std::_Destroy_aux<true>::__destroy<Faction*>(Faction*, Faction*)
  0.00      1.24     0.00        5     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::_M_deallocate(Faction*, unsigned long)
  0.00      1.24     0.00        5     0.00     0.00  void std::_Destroy<Faction*>(Faction*, Faction*)
  0.00      1.24     0.00        5     0.00     0.00  void std::_Destroy<Faction*, Faction>(Faction*, Faction*, std::allocator<Faction>&)
  0.00      1.24     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<Faction>::deallocate(Faction*, unsigned long)
  0.00      1.24     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<Faction>::allocate(unsigned long, void const*)
  0.00      1.24     0.00        4     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::_M_check_len(unsigned long, char const*) const
  0.00      1.24     0.00        4     0.00     0.00  Faction* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Faction>(Faction const*, Faction const*, Faction*)
  0.00      1.24     0.00        4     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::_M_allocate(unsigned long)
  0.00      1.24     0.00        4     0.00     0.00  std::allocator_traits<std::allocator<Faction> >::deallocate(std::allocator<Faction>&, Faction*, unsigned long)
  0.00      1.24     0.00        4     0.00     0.00  std::allocator_traits<std::allocator<Faction> >::allocate(std::allocator<Faction>&, unsigned long)
  0.00      1.24     0.00        4     0.00     0.00  Faction* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*)
  0.00      1.24     0.00        4     0.00     0.00  Faction* std::__copy_move_a<true, Faction*, Faction*>(Faction*, Faction*, Faction*)
  0.00      1.24     0.00        4     0.00     0.00  Faction* std::__copy_move_a2<true, Faction*, Faction*>(Faction*, Faction*, Faction*)
  0.00      1.24     0.00        4     0.00     0.00  Faction* std::uninitialized_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*)
  0.00      1.24     0.00        4     0.00     0.00  Faction* std::__uninitialized_copy_a<std::move_iterator<Faction*>, Faction*, Faction>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*, std::allocator<Faction>&)
  0.00      1.24     0.00        4     0.00     0.00  Faction* std::__uninitialized_move_if_noexcept_a<Faction*, Faction*, std::allocator<Faction> >(Faction*, Faction*, Faction*, std::allocator<Faction>&)
  0.00      1.24     0.00        4     0.00     0.00  Faction* std::copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*)
  0.00      1.24     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<Move>::~new_allocator()
  0.00      1.24     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::new_allocator()
  0.00      1.24     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::~new_allocator()
  0.00      1.24     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::__normal_iterator(std::vector<Cell, std::allocator<Cell> > const* const&)
  0.00      1.24     0.00        2     0.00     0.00  std::allocator<Move>::~allocator()
  0.00      1.24     0.00        2     0.00     0.00  std::allocator<std::vector<Cell, std::allocator<Cell> > >::allocator()
  0.00      1.24     0.00        2     0.00     0.00  std::allocator<std::vector<Cell, std::allocator<Cell> > >::~allocator()
  0.00      1.24     0.00        2     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::~_Vector_impl()
  0.00      1.24     0.00        2     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::~_Vector_base()
  0.00      1.24     0.00        2     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::_Vector_impl()
  0.00      1.24     0.00        2     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::~_Vector_impl()
  0.00      1.24     0.00        2     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_base()
  0.00      1.24     0.00        2     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~_Vector_base()
  0.00      1.24     0.00        2     0.00     0.00  std::vector<Move, std::allocator<Move> >::~vector()
  0.00      1.24     0.00        2     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::vector()
  0.00      1.24     0.00        2     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector()
  0.00      1.24     0.00        2     0.00     0.00  std::remove_reference<std::allocator<Move>&>::type&& std::move<std::allocator<Move>&>(std::allocator<Move>&)
  0.00      1.24     0.00        2     0.00     0.00  std::remove_reference<std::vector<Move, std::allocator<Move> >&>::type&& std::move<std::vector<Move, std::allocator<Move> >&>(std::vector<Move, std::allocator<Move> >&)
  0.00      1.24     0.00        1     0.00     0.00  VirtualRootWindowOfScreen(Screen*)
  0.00      1.24     0.00        1     0.00     0.18  Board::init()
  0.00      1.24     0.00        1     0.00     0.18  Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&)
  0.00      1.24     0.00        1     0.00    45.24  Board::Board(int, int, int, int, int, XColor*)
  0.00      1.24     0.00        1     0.00     0.00  Board::~Board()
  0.00      1.24     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Move>::new_allocator()
  0.00      1.24     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Move>::new_allocator(__gnu_cxx::new_allocator<Move> const&)
  0.00      1.24     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Faction>::new_allocator()
  0.00      1.24     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Faction>::~new_allocator()
  0.00      1.24     0.00        1     0.00     0.00  __gnu_cxx::__alloc_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_S_propagate_on_copy_assign()
  0.00      1.24     0.00        1     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::end() const
  0.00      1.24     0.00        1     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::begin() const
  0.00      1.24     0.00        1     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::capacity() const
  0.00      1.24     0.00        1     0.00     0.00  std::allocator<Move>::allocator(std::allocator<Move> const&)
  0.00      1.24     0.00        1     0.00     0.00  std::allocator<Move>::allocator()
  0.00      1.24     0.00        1     0.00     0.00  std::allocator<Faction>::allocator()
  0.00      1.24     0.00        1     0.00     0.00  std::allocator<Faction>::~allocator()
  0.00      1.24     0.00        1     0.00    10.00  std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_M_swap_data(std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl&)
  0.00      1.24     0.00        1     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl()
  0.00      1.24     0.00        1     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl(std::allocator<Move>&&)
  0.00      1.24     0.00        1     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_Vector_base()
  0.00      1.24     0.00        1     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::_Vector_impl()
  0.00      1.24     0.00        1     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::~_Vector_impl()
  0.00      1.24     0.00        1     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_base()
  0.00      1.24     0.00        1     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::~_Vector_base()
  0.00      1.24     0.00        1     0.00    20.00  std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&)
  0.00      1.24     0.00        1     0.00     0.00  std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::~priority_queue()
  0.00      1.24     0.00        1     0.00     0.05  std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*)
  0.00      1.24     0.00        1     0.00     0.00  std::vector<Move, std::allocator<Move> >::vector()
  0.00      1.24     0.00        1     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::vector()
  0.00      1.24     0.00        1     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::~vector()
  0.00      1.24     0.00        1     0.00     0.05  std::vector<Cell, std::allocator<Cell> >* std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > >(unsigned long, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >)
  0.00      1.24     0.00        1     0.00     0.05  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&)
  0.00      1.24     0.00        1     0.00     0.00  void std::__make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>)
  0.00      1.24     0.00        1     0.00     0.05  std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*)
  0.00      1.24     0.00        1     0.00     0.05  std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
  0.00      1.24     0.00        1     0.00     0.00  void std::make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2017 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.81% of 1.24 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.01    1.23                 main [1]
                0.07    0.87 1000000/1000000     Board::step(int) [2]
                0.08    0.16 1000000/1000000     Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&, int, int) [7]
                0.00    0.05       1/1           Board::Board(int, int, int, int, int, XColor*) [18]
                0.00    0.00 1000000/2013225     std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::top() const [44]
                0.00    0.00       1/1           Board::init() [60]
                0.00    0.00       1/1           Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&) [61]
                0.00    0.00       1/1           VirtualRootWindowOfScreen(Screen*) [360]
                0.00    0.00       1/1           Board::~Board() [361]
-----------------------------------------------
                0.07    0.87 1000000/1000000     main [1]
[2]     76.1    0.07    0.87 1000000         Board::step(int) [2]
                0.02    0.45 1013224/1013224     std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop() [3]
                0.05    0.08 14040104/23012842     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long) [8]
                0.02    0.07 11040107/20012845     std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [9]
                0.00    0.09  999999/1023492     std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [11]
                0.01    0.02 1265477/1312470     std::vector<Faction, std::allocator<Faction> >::at(unsigned long) [25]
                0.01    0.00 7999992/7999992     Cell::Cell() [41]
                0.01    0.00  999999/1023492     Faction::getSpeed() [48]
                0.01    0.00  999999/1023492     Move::Move(int, int, int, int) [47]
                0.01    0.00 2975272/25988155     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const [14]
                0.01    0.00 2999997/23018218     std::vector<Cell, std::allocator<Cell> >::size() const [17]
                0.00    0.01   23472/23493       Board::setCell(int, int, int, int) [53]
                0.00    0.01 1013225/2013225     std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::top() const [44]
                0.00    0.00 1000000/1000000     std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::size() const [124]
                0.00    0.00   91899/91899       Faction::getStrength() [126]
                0.00    0.00   91899/91899       Faction::getAccuracy() [125]
                0.00    0.00   81680/81680       Faction::getArmor() [127]
-----------------------------------------------
                0.02    0.45 1013224/1013224     Board::step(int) [2]
[3]     38.1    0.02    0.45 1013224         std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop() [3]
                0.01    0.43 1013224/1013224     void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [4]
                0.01    0.00 1013224/2036717     std::vector<Move, std::allocator<Move> >::begin() [35]
                0.00    0.01 1013224/1013224     std::vector<Move, std::allocator<Move> >::pop_back() [56]
                0.00    0.00 1013224/2036717     std::vector<Move, std::allocator<Move> >::end() [58]
-----------------------------------------------
                0.01    0.43 1013224/1013224     std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop() [3]
[4]     35.4    0.01    0.43 1013224         void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [4]
                0.04    0.38 1013224/1013224     void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [5]
                0.01    0.00 1013224/1013225     __gnu_cxx::__ops::_Iter_comp_iter<compareMove> __gnu_cxx::__ops::__iter_comp_iter<compareMove>(compareMove) [49]
                0.00    0.00 1013224/3049941     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&) [37]
                0.00    0.00 1013224/1013224     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator--() [122]
-----------------------------------------------
                0.04    0.38 1013224/1013224     void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [4]
[5]     33.4    0.04    0.38 1013224         void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [5]
                0.10    0.27 1013224/1013224     void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [6]
                0.00    0.00 1013224/3049941     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&) [37]
                0.00    0.00 3039672/22692647     std::remove_reference<Move&>::type&& std::move<Move&>(Move&) [24]
                0.00    0.00 3039672/58170221     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [20]
-----------------------------------------------
                0.10    0.27 1013224/1013224     void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [5]
[6]     29.6    0.10    0.27 1013224         void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [6]
                0.10    0.04 50026560/54107057     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator+(long) const [10]
                0.03    0.03 12506569/12506569     bool __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >) [15]
                0.02    0.00 13519935/22692647     std::remove_reference<Move&>::type&& std::move<Move&>(Move&) [24]
                0.00    0.02 1013224/2036716     void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>) [23]
                0.02    0.00 25013422/58170221     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [20]
                0.00    0.00 1013224/1013224     __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(__gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [57]
-----------------------------------------------
                0.08    0.16 1000000/1000000     main [1]
[7]     19.0    0.08    0.16 1000000         Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&, int, int) [7]
                0.03    0.05 8881779/23012842     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long) [8]
                0.02    0.05 8881779/20012845     std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [9]
-----------------------------------------------
                0.00    0.00   10240/23012842     Board::init() [60]
                0.00    0.00   10240/23012842     Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&) [61]
                0.00    0.00   70479/23012842     Board::setCell(int, int, int, int) [53]
                0.03    0.05 8881779/23012842     Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&, int, int) [7]
                0.05    0.08 14040104/23012842     Board::step(int) [2]
[8]     17.4    0.09    0.13 23012842         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long) [8]
                0.02    0.07 23012842/23012842     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_range_check(unsigned long) const [12]
                0.04    0.00 23012842/23012842     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator[](unsigned long) [21]
-----------------------------------------------
                0.00    0.00   10240/20012845     Board::init() [60]
                0.00    0.00   10240/20012845     Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&) [61]
                0.00    0.00   70479/20012845     Board::setCell(int, int, int, int) [53]
                0.02    0.05 8881779/20012845     Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&, int, int) [7]
                0.02    0.07 11040107/20012845     Board::step(int) [2]
[9]     13.2    0.04    0.12 20012845         std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [9]
                0.04    0.04 20012845/20012845     std::vector<Cell, std::allocator<Cell> >::_M_range_check(unsigned long) const [13]
                0.04    0.00 20012845/20012845     std::vector<Cell, std::allocator<Cell> >::operator[](unsigned long) [22]
-----------------------------------------------
                0.01    0.00 4080497/54107057     void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>) [23]
                0.10    0.04 50026560/54107057     void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [6]
[10]    12.2    0.11    0.04 54107057         __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator+(long) const [10]
                0.04    0.00 54107057/59203983     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move* const&) [19]
-----------------------------------------------
                0.00    0.00   23493/1023492     Board::setCell(int, int, int, int) [53]
                0.00    0.09  999999/1023492     Board::step(int) [2]
[11]     7.4    0.00    0.09 1023492         std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [11]
                0.00    0.05 1023492/1023492     void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [16]
                0.00    0.03 1023492/1023492     std::vector<Move, std::allocator<Move> >::push_back(Move&&) [26]
                0.01    0.00 1023492/2036717     std::vector<Move, std::allocator<Move> >::begin() [35]
                0.00    0.00 1023492/22692647     std::remove_reference<Move&>::type&& std::move<Move&>(Move&) [24]
                0.00    0.00 1023492/2036717     std::vector<Move, std::allocator<Move> >::end() [58]
-----------------------------------------------
                0.02    0.07 23012842/23012842     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long) [8]
[12]     7.3    0.02    0.07 23012842         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_range_check(unsigned long) const [12]
                0.07    0.00 23012842/25988155     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const [14]
-----------------------------------------------
                0.04    0.04 20012845/20012845     std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [9]
[13]     6.7    0.04    0.04 20012845         std::vector<Cell, std::allocator<Cell> >::_M_range_check(unsigned long) const [13]
                0.04    0.00 20012845/23018218     std::vector<Cell, std::allocator<Cell> >::size() const [17]
-----------------------------------------------
                0.00    0.00       1/25988155     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [81]
                0.00    0.00       8/25988155     void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [92]
                0.00    0.00      32/25988155     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_check_len(unsigned long, char const*) const [105]
                0.01    0.00 2975272/25988155     Board::step(int) [2]
                0.07    0.00 23012842/25988155     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_range_check(unsigned long) const [12]
[14]     6.5    0.08    0.00 25988155         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const [14]
-----------------------------------------------
                0.03    0.03 12506569/12506569     void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [6]
[15]     5.0    0.03    0.03 12506569         bool __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >) [15]
                0.02    0.00 25013138/58170221     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [20]
                0.01    0.00 12506569/14545638     compareMove::operator()(Move, Move) [36]
-----------------------------------------------
                0.00    0.05 1023492/1023492     std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [11]
[16]     4.4    0.00    0.05 1023492         void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [16]
                0.02    0.01 1023492/1023492     __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(compareMove) [27]
                0.00    0.02 1023492/2036716     void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>) [23]
                0.00    0.00 1023492/3049941     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&) [37]
                0.00    0.00 2046984/22692647     std::remove_reference<Move&>::type&& std::move<Move&>(Move&) [24]
                0.00    0.00 1023492/58170221     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [20]
                0.00    0.00 1023492/1023492     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator-(long) const [59]
-----------------------------------------------
                0.00    0.00     256/23018218     std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [63]
                0.00    0.00    1024/23018218     void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [68]
                0.00    0.00    4096/23018218     std::vector<Cell, std::allocator<Cell> >::_M_check_len(unsigned long, char const*) const [91]
                0.01    0.00 2999997/23018218     Board::step(int) [2]
                0.04    0.00 20012845/23018218     std::vector<Cell, std::allocator<Cell> >::_M_range_check(unsigned long) const [13]
[17]     4.0    0.05    0.00 23018218         std::vector<Cell, std::allocator<Cell> >::size() const [17]
-----------------------------------------------
                0.00    0.05       1/1           main [1]
[18]     3.6    0.00    0.05       1         Board::Board(int, int, int, int, int, XColor*) [18]
                0.01    0.02       7/7           void std::vector<Faction, std::allocator<Faction> >::emplace_back<>() [28]
                0.00    0.02       1/1           std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [32]
                0.00    0.00   10240/10240       std::vector<Cell, std::allocator<Cell> >::push_back(Cell const&) [62]
                0.00    0.00     128/128         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::push_back(std::vector<Cell, std::allocator<Cell> > const&) [80]
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [81]
                0.00    0.00   10240/10240       Cell::Cell(int, int) [148]
                0.00    0.00     128/128         std::vector<Cell, std::allocator<Cell> >::vector() [202]
                0.00    0.00     128/511         std::vector<Cell, std::allocator<Cell> >::~vector() [175]
                0.00    0.00       2/2           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::vector() [356]
                0.00    0.00       1/1           std::vector<Move, std::allocator<Move> >::vector() [382]
                0.00    0.00       1/1           std::vector<Faction, std::allocator<Faction> >::vector() [383]
                0.00    0.00       1/2           std::vector<Move, std::allocator<Move> >::~vector() [355]
                0.00    0.00       1/2           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector() [357]
-----------------------------------------------
                0.00    0.00 1023492/59203983     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator-(long) const [59]
                0.00    0.00 2036717/59203983     std::vector<Move, std::allocator<Move> >::begin() [35]
                0.00    0.00 2036717/59203983     std::vector<Move, std::allocator<Move> >::end() [58]
                0.04    0.00 54107057/59203983     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator+(long) const [10]
[19]     3.6    0.05    0.00 59203983         __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move* const&) [19]
-----------------------------------------------
                0.00    0.00 1023492/58170221     void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [16]
                0.00    0.00 2039069/58170221     bool __gnu_cxx::__ops::_Iter_comp_val<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move&) [30]
                0.00    0.00 2041428/58170221     void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>) [23]
                0.00    0.00 3039672/58170221     void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [5]
                0.02    0.00 25013138/58170221     bool __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >) [15]
                0.02    0.00 25013422/58170221     void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [6]
[20]     3.6    0.05    0.00 58170221         __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [20]
-----------------------------------------------
                0.04    0.00 23012842/23012842     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long) [8]
[21]     3.2    0.04    0.00 23012842         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator[](unsigned long) [21]
-----------------------------------------------
                0.04    0.00 20012845/20012845     std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [9]
[22]     3.2    0.04    0.00 20012845         std::vector<Cell, std::allocator<Cell> >::operator[](unsigned long) [22]
-----------------------------------------------
                0.00    0.02 1013224/2036716     void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [6]
                0.00    0.02 1023492/2036716     void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [16]
[23]     3.2    0.00    0.04 2036716         void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>) [23]
                0.02    0.00 2039069/2039069     bool __gnu_cxx::__ops::_Iter_comp_val<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move&) [30]
                0.01    0.00 4080497/54107057     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator+(long) const [10]
                0.00    0.00 2039072/22692647     std::remove_reference<Move&>::type&& std::move<Move&>(Move&) [24]
                0.00    0.00 2041428/58170221     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [20]
-----------------------------------------------
                0.00    0.00 1023492/22692647     std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [11]
                0.00    0.00 1023492/22692647     std::vector<Move, std::allocator<Move> >::push_back(Move&&) [26]
                0.00    0.00 2039072/22692647     void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>) [23]
                0.00    0.00 2046984/22692647     void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [16]
                0.00    0.00 3039672/22692647     void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [5]
                0.02    0.00 13519935/22692647     void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [6]
[24]     2.8    0.04    0.00 22692647         std::remove_reference<Move&>::type&& std::move<Move&>(Move&) [24]
-----------------------------------------------
                0.00    0.00       7/1312470     Board::init() [60]
                0.00    0.00   46986/1312470     Board::setCell(int, int, int, int) [53]
                0.01    0.02 1265477/1312470     Board::step(int) [2]
[25]     2.8    0.02    0.02 1312470         std::vector<Faction, std::allocator<Faction> >::at(unsigned long) [25]
                0.01    0.01 1312470/1312470     std::vector<Faction, std::allocator<Faction> >::_M_range_check(unsigned long) const [34]
                0.00    0.00 1312470/1312470     std::vector<Faction, std::allocator<Faction> >::operator[](unsigned long) [119]
-----------------------------------------------
                0.00    0.03 1023492/1023492     std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [11]
[26]     2.1    0.00    0.03 1023492         std::vector<Move, std::allocator<Move> >::push_back(Move&&) [26]
                0.01    0.01 1023492/1023492     void std::vector<Move, std::allocator<Move> >::emplace_back<Move>(Move&&) [29]
                0.00    0.00 1023492/22692647     std::remove_reference<Move&>::type&& std::move<Move&>(Move&) [24]
-----------------------------------------------
                0.02    0.01 1023492/1023492     void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [16]
[27]     2.0    0.02    0.01 1023492         __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(compareMove) [27]
                0.01    0.00 1023492/2036716     __gnu_cxx::__ops::_Iter_comp_val<compareMove>::_Iter_comp_val(compareMove) [43]
-----------------------------------------------
                0.01    0.02       7/7           Board::Board(int, int, int, int, int, XColor*) [18]
[28]     2.0    0.01    0.02       7         void std::vector<Faction, std::allocator<Faction> >::emplace_back<>() [28]
                0.02    0.00       4/4           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [31]
                0.00    0.00       3/7           void std::allocator_traits<std::allocator<Faction> >::construct<Faction>(std::allocator<Faction>&, Faction*) [107]
-----------------------------------------------
                0.01    0.01 1023492/1023492     std::vector<Move, std::allocator<Move> >::push_back(Move&&) [26]
[29]     2.0    0.01    0.01 1023492         void std::vector<Move, std::allocator<Move> >::emplace_back<Move>(Move&&) [29]
                0.00    0.01 1023477/1023492     void std::allocator_traits<std::allocator<Move> >::construct<Move, Move>(std::allocator<Move>&, Move*, Move&&) [40]
                0.00    0.00      15/15          void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [69]
                0.00    0.00 1023492/3086874     Move&& std::forward<Move>(std::remove_reference<Move>::type&) [116]
-----------------------------------------------
                0.02    0.00 2039069/2039069     void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>) [23]
[30]     1.9    0.02    0.00 2039069         bool __gnu_cxx::__ops::_Iter_comp_val<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move&) [30]
                0.00    0.00 2039069/14545638     compareMove::operator()(Move, Move) [36]
                0.00    0.00 2039069/58170221     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [20]
-----------------------------------------------
                0.02    0.00       4/4           void std::vector<Faction, std::allocator<Faction> >::emplace_back<>() [28]
[31]     1.6    0.02    0.00       4         void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [31]
                0.00    0.00       4/4           std::vector<Faction, std::allocator<Faction> >::_M_check_len(unsigned long, char const*) const [104]
                0.00    0.00       4/1335992     std::vector<Faction, std::allocator<Faction> >::size() const [52]
                0.00    0.00       4/7           void std::allocator_traits<std::allocator<Faction> >::construct<Faction>(std::allocator<Faction>&, Faction*) [107]
                0.00    0.00       8/9           std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() [292]
                0.00    0.00       4/4           std::_Vector_base<Faction, std::allocator<Faction> >::_M_allocate(unsigned long) [332]
                0.00    0.00       4/4           Faction* std::__uninitialized_move_if_noexcept_a<Faction*, Faction*, std::allocator<Faction> >(Faction*, Faction*, Faction*, std::allocator<Faction>&) [340]
                0.00    0.00       4/5           void std::_Destroy<Faction*, Faction>(Faction*, Faction*, std::allocator<Faction>&) [328]
                0.00    0.00       4/5           std::_Vector_base<Faction, std::allocator<Faction> >::_M_deallocate(Faction*, unsigned long) [326]
-----------------------------------------------
                0.00    0.02       1/1           Board::Board(int, int, int, int, int, XColor*) [18]
[32]     1.6    0.00    0.02       1         std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [32]
                0.01    0.02       1/1           std::vector<Move, std::allocator<Move> >::vector(std::vector<Move, std::allocator<Move> >&&) [33]
                0.00    0.00       1/1           void std::make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [108]
                0.00    0.00       1/2036717     std::vector<Move, std::allocator<Move> >::begin() [35]
                0.00    0.00       1/2036717     std::vector<Move, std::allocator<Move> >::end() [58]
                0.00    0.00       1/2           std::remove_reference<std::vector<Move, std::allocator<Move> >&>::type&& std::move<std::vector<Move, std::allocator<Move> >&>(std::vector<Move, std::allocator<Move> >&) [359]
-----------------------------------------------
                0.01    0.02       1/1           std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [32]
[33]     1.6    0.01    0.02       1         std::vector<Move, std::allocator<Move> >::vector(std::vector<Move, std::allocator<Move> >&&) [33]
                0.01    0.01       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&) [38]
                0.00    0.00       1/2           std::remove_reference<std::vector<Move, std::allocator<Move> >&>::type&& std::move<std::vector<Move, std::allocator<Move> >&>(std::vector<Move, std::allocator<Move> >&) [359]
-----------------------------------------------
                0.01    0.01 1312470/1312470     std::vector<Faction, std::allocator<Faction> >::at(unsigned long) [25]
[34]     1.6    0.01    0.01 1312470         std::vector<Faction, std::allocator<Faction> >::_M_range_check(unsigned long) const [34]
                0.01    0.00 1312470/1335992     std::vector<Faction, std::allocator<Faction> >::size() const [52]
-----------------------------------------------
                0.00    0.00       1/2036717     std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [32]
                0.01    0.00 1013224/2036717     std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop() [3]
                0.01    0.00 1023492/2036717     std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [11]
[35]     1.3    0.02    0.00 2036717         std::vector<Move, std::allocator<Move> >::begin() [35]
                0.00    0.00 2036717/59203983     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move* const&) [19]
-----------------------------------------------
                0.00    0.00 2039069/14545638     bool __gnu_cxx::__ops::_Iter_comp_val<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move&) [30]
                0.01    0.00 12506569/14545638     bool __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >) [15]
[36]     1.2    0.02    0.00 14545638         compareMove::operator()(Move, Move) [36]
-----------------------------------------------
                0.00    0.00       1/3049941     void std::__make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [109]
                0.00    0.00 1013224/3049941     void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [4]
                0.00    0.00 1013224/3049941     void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [5]
                0.00    0.00 1023492/3049941     void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [16]
[37]     1.2    0.01    0.01 3049941         __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&) [37]
                0.01    0.00 6099882/6099882     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::base() const [42]
-----------------------------------------------
                0.01    0.01       1/1           std::vector<Move, std::allocator<Move> >::vector(std::vector<Move, std::allocator<Move> >&&) [33]
[38]     1.2    0.01    0.01       1         std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&) [38]
                0.00    0.01       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_M_swap_data(std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl&) [51]
                0.00    0.00       1/2           std::remove_reference<std::allocator<Move>&>::type&& std::move<std::allocator<Move>&>(std::allocator<Move>&) [358]
                0.00    0.00       1/33          std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() [237]
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl(std::allocator<Move>&&) [375]
-----------------------------------------------
                0.01    0.00 1023492/1023492     void std::allocator_traits<std::allocator<Move> >::construct<Move, Move>(std::allocator<Move>&, Move*, Move&&) [40]
[39]     1.2    0.01    0.00 1023492         void __gnu_cxx::new_allocator<Move>::construct<Move, Move>(Move*, Move&&) [39]
                0.00    0.00 1023492/1087283     operator new(unsigned long, void*) [54]
                0.00    0.00 1023492/3086874     Move&& std::forward<Move>(std::remove_reference<Move>::type&) [116]
-----------------------------------------------
                0.00    0.00      15/1023492     void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [69]
                0.00    0.01 1023477/1023492     void std::vector<Move, std::allocator<Move> >::emplace_back<Move>(Move&&) [29]
[40]     1.2    0.00    0.01 1023492         void std::allocator_traits<std::allocator<Move> >::construct<Move, Move>(std::allocator<Move>&, Move*, Move&&) [40]
                0.01    0.00 1023492/1023492     void __gnu_cxx::new_allocator<Move>::construct<Move, Move>(Move*, Move&&) [39]
                0.00    0.00 1023492/3086874     Move&& std::forward<Move>(std::remove_reference<Move>::type&) [116]
-----------------------------------------------
                0.01    0.00 7999992/7999992     Board::step(int) [2]
[41]     0.8    0.01    0.00 7999992         Cell::Cell() [41]
-----------------------------------------------
                0.01    0.00 6099882/6099882     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&) [37]
[42]     0.8    0.01    0.00 6099882         __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::base() const [42]
-----------------------------------------------
                0.00    0.00 1013224/2036716     __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(__gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [57]
                0.01    0.00 1023492/2036716     __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(compareMove) [27]
[43]     0.8    0.01    0.00 2036716         __gnu_cxx::__ops::_Iter_comp_val<compareMove>::_Iter_comp_val(compareMove) [43]
-----------------------------------------------
                0.00    0.00 1000000/2013225     main [1]
                0.00    0.01 1013225/2013225     Board::step(int) [2]
[44]     0.8    0.00    0.01 2013225         std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::top() const [44]
                0.00    0.01 2013225/2013225     std::vector<Move, std::allocator<Move> >::front() const [46]
-----------------------------------------------
                0.01    0.00 2013225/2013225     std::vector<Move, std::allocator<Move> >::front() const [46]
[45]     0.8    0.01    0.00 2013225         std::vector<Move, std::allocator<Move> >::begin() const [45]
                0.00    0.00 2013225/2013225     __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move const* const&) [117]
-----------------------------------------------
                0.00    0.01 2013225/2013225     std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::top() const [44]
[46]     0.8    0.00    0.01 2013225         std::vector<Move, std::allocator<Move> >::front() const [46]
                0.01    0.00 2013225/2013225     std::vector<Move, std::allocator<Move> >::begin() const [45]
                0.00    0.00 2013225/2013225     __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::operator*() const [118]
-----------------------------------------------
                0.00    0.00   23493/1023492     Board::setCell(int, int, int, int) [53]
                0.01    0.00  999999/1023492     Board::step(int) [2]
[47]     0.8    0.01    0.00 1023492         Move::Move(int, int, int, int) [47]
-----------------------------------------------
                0.00    0.00   23493/1023492     Board::setCell(int, int, int, int) [53]
                0.01    0.00  999999/1023492     Board::step(int) [2]
[48]     0.8    0.01    0.00 1023492         Faction::getSpeed() [48]
-----------------------------------------------
                0.00    0.00       1/1013225     void std::make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [108]
                0.01    0.00 1013224/1013225     void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [4]
[49]     0.8    0.01    0.00 1013225         __gnu_cxx::__ops::_Iter_comp_iter<compareMove> __gnu_cxx::__ops::__iter_comp_iter<compareMove>(compareMove) [49]
                0.00    0.00 1013225/1013225     __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::_Iter_comp_iter(compareMove) [120]
-----------------------------------------------
                0.01    0.00       3/3           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_M_swap_data(std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl&) [51]
[50]     0.8    0.01    0.00       3         std::enable_if<std::__and_<std::is_move_constructible<Move*>, std::is_move_assignable<Move*> >::value, void>::type std::swap<Move*>(Move*&, Move*&) [50]
                0.00    0.00       9/9           std::remove_reference<Move*&>::type&& std::move<Move*&>(Move*&) [296]
-----------------------------------------------
                0.00    0.01       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&) [38]
[51]     0.8    0.00    0.01       1         std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_M_swap_data(std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl&) [51]
                0.01    0.00       3/3           std::enable_if<std::__and_<std::is_move_constructible<Move*>, std::is_move_assignable<Move*> >::value, void>::type std::swap<Move*>(Move*&, Move*&) [50]
-----------------------------------------------
                0.00    0.00       4/1335992     void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [31]
                0.00    0.00       9/1335992     Board::init() [60]
                0.00    0.00      16/1335992     std::vector<Faction, std::allocator<Faction> >::_M_check_len(unsigned long, char const*) const [104]
                0.00    0.00   23493/1335992     Board::setCell(int, int, int, int) [53]
                0.01    0.00 1312470/1335992     std::vector<Faction, std::allocator<Faction> >::_M_range_check(unsigned long) const [34]
[52]     0.8    0.01    0.00 1335992         std::vector<Faction, std::allocator<Faction> >::size() const [52]
-----------------------------------------------
                0.00    0.00      21/23493       Board::init() [60]
                0.00    0.01   23472/23493       Board::step(int) [2]
[53]     0.4    0.00    0.01   23493         Board::setCell(int, int, int, int) [53]
                0.00    0.00   23493/1023492     std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [11]
                0.00    0.00   46986/1312470     std::vector<Faction, std::allocator<Faction> >::at(unsigned long) [25]
                0.00    0.00   70479/23012842     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long) [8]
                0.00    0.00   70479/20012845     std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [9]
                0.00    0.00   23493/1023492     Faction::getSpeed() [48]
                0.00    0.00   23493/1023492     Move::Move(int, int, int, int) [47]
                0.00    0.00   23493/1335992     std::vector<Faction, std::allocator<Faction> >::size() const [52]
                0.00    0.00   23493/33733       Cell::init(int) [132]
                0.00    0.00   23493/23493       Faction::getHealth() [134]
-----------------------------------------------
                0.00    0.00       7/1087283     void __gnu_cxx::new_allocator<Faction>::construct<Faction>(Faction*) [106]
                0.00    0.00      42/1087283     void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [98]
                0.00    0.00     127/1087283     void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >&&) [93]
                0.00    0.00     128/1087283     void __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [82]
                0.00    0.00     128/1087283     void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [84]
                0.00    0.00   10240/1087283     void __gnu_cxx::new_allocator<Cell>::construct<Cell, Cell const&>(Cell*, Cell const&) [89]
                0.00    0.00   16256/1087283     void std::_Construct<Cell, Cell>(Cell*, Cell&&) [75]
                0.00    0.00   16383/1087283     void std::_Construct<Move, Move>(Move*, Move&&) [70]
                0.00    0.00   20480/1087283     void std::_Construct<Cell, Cell const&>(Cell*, Cell const&) [64]
                0.00    0.00 1023492/1087283     void __gnu_cxx::new_allocator<Move>::construct<Move, Move>(Move*, Move&&) [39]
[54]     0.4    0.01    0.00 1087283         operator new(unsigned long, void*) [54]
-----------------------------------------------
                0.01    0.00 1013224/1013224     std::vector<Move, std::allocator<Move> >::pop_back() [56]
[55]     0.4    0.01    0.00 1013224         void std::allocator_traits<std::allocator<Move> >::destroy<Move>(std::allocator<Move>&, Move*) [55]
                0.00    0.00 1013224/1013224     void __gnu_cxx::new_allocator<Move>::destroy<Move>(Move*) [121]
-----------------------------------------------
                0.00    0.01 1013224/1013224     std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop() [3]
[56]     0.4    0.00    0.01 1013224         std::vector<Move, std::allocator<Move> >::pop_back() [56]
                0.01    0.00 1013224/1013224     void std::allocator_traits<std::allocator<Move> >::destroy<Move>(std::allocator<Move>&, Move*) [55]
-----------------------------------------------
                0.00    0.00 1013224/1013224     void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [6]
[57]     0.4    0.00    0.00 1013224         __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(__gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [57]
                0.00    0.00 1013224/2036716     __gnu_cxx::__ops::_Iter_comp_val<compareMove>::_Iter_comp_val(compareMove) [43]
-----------------------------------------------
                0.00    0.00       1/2036717     std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [32]
                0.00    0.00 1013224/2036717     std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop() [3]
                0.00    0.00 1023492/2036717     std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [11]
[58]     0.1    0.00    0.00 2036717         std::vector<Move, std::allocator<Move> >::end() [58]
                0.00    0.00 2036717/59203983     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move* const&) [19]
-----------------------------------------------
                0.00    0.00 1023492/1023492     void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [16]
[59]     0.1    0.00    0.00 1023492         __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator-(long) const [59]
                0.00    0.00 1023492/59203983     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move* const&) [19]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[60]     0.0    0.00    0.00       1         Board::init() [60]
                0.00    0.00   10240/23012842     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long) [8]
                0.00    0.00   10240/20012845     std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [9]
                0.00    0.00      21/23493       Board::setCell(int, int, int, int) [53]
                0.00    0.00       7/7           Faction::init(int) [102]
                0.00    0.00       7/1312470     std::vector<Faction, std::allocator<Faction> >::at(unsigned long) [25]
                0.00    0.00       9/1335992     std::vector<Faction, std::allocator<Faction> >::size() const [52]
                0.00    0.00   10240/33733       Cell::init(int) [132]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[61]     0.0    0.00    0.00       1         Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&) [61]
                0.00    0.00   10240/23012842     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long) [8]
                0.00    0.00   10240/20012845     std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [9]
-----------------------------------------------
                0.00    0.00   10240/10240       Board::Board(int, int, int, int, int, XColor*) [18]
[62]     0.0    0.00    0.00   10240         std::vector<Cell, std::allocator<Cell> >::push_back(Cell const&) [62]
                0.00    0.00    1024/1024        void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [68]
                0.00    0.00    9216/10240       void std::allocator_traits<std::allocator<Cell> >::construct<Cell, Cell const&>(std::allocator<Cell>&, Cell*, Cell const&) [90]
-----------------------------------------------
                0.00    0.00     128/256         void __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [82]
                0.00    0.00     128/256         void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [84]
[63]     0.0    0.00    0.00     256         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [63]
                0.00    0.00     256/256         Cell* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, Cell>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, std::allocator<Cell>&) [67]
                0.00    0.00     256/23018218     std::vector<Cell, std::allocator<Cell> >::size() const [17]
                0.00    0.00     256/2304        std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() const [151]
                0.00    0.00     256/256         __gnu_cxx::__alloc_traits<std::allocator<Cell> >::_S_select_on_copy(std::allocator<Cell> const&) [181]
                0.00    0.00     256/256         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(unsigned long, std::allocator<Cell> const&) [186]
                0.00    0.00     256/767         std::allocator<Cell>::~allocator() [168]
                0.00    0.00     256/2942        std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() [150]
                0.00    0.00     256/256         std::vector<Cell, std::allocator<Cell> >::end() const [182]
                0.00    0.00     256/256         std::vector<Cell, std::allocator<Cell> >::begin() const [183]
-----------------------------------------------
                0.00    0.00   20480/20480       Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [65]
[64]     0.0    0.00    0.00   20480         void std::_Construct<Cell, Cell const&>(Cell*, Cell const&) [64]
                0.00    0.00   20480/1087283     operator new(unsigned long, void*) [54]
                0.00    0.00   20480/41984       Cell const& std::forward<Cell const&>(std::remove_reference<Cell const&>::type&) [128]
-----------------------------------------------
                0.00    0.00     256/256         Cell* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [66]
[65]     0.0    0.00    0.00     256         Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [65]
                0.00    0.00   20480/20480       void std::_Construct<Cell, Cell const&>(Cell*, Cell const&) [64]
                0.00    0.00   20736/20736       bool __gnu_cxx::operator!=<Cell const*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&) [135]
                0.00    0.00   20480/20480       __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator*() const [137]
                0.00    0.00   20480/36736       Cell* std::__addressof<Cell>(Cell&) [130]
                0.00    0.00   20480/20480       __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator++() [136]
-----------------------------------------------
                0.00    0.00     256/256         Cell* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, Cell>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, std::allocator<Cell>&) [67]
[66]     0.0    0.00    0.00     256         Cell* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [66]
                0.00    0.00     256/256         Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [65]
-----------------------------------------------
                0.00    0.00     256/256         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [63]
[67]     0.0    0.00    0.00     256         Cell* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, Cell>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, std::allocator<Cell>&) [67]
                0.00    0.00     256/256         Cell* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [66]
-----------------------------------------------
                0.00    0.00    1024/1024        std::vector<Cell, std::allocator<Cell> >::push_back(Cell const&) [62]
[68]     0.0    0.00    0.00    1024         void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [68]
                0.00    0.00    1024/1024        Cell* std::__uninitialized_move_if_noexcept_a<Cell*, Cell*, std::allocator<Cell> >(Cell*, Cell*, Cell*, std::allocator<Cell>&) [79]
                0.00    0.00    1024/1024        std::vector<Cell, std::allocator<Cell> >::_M_check_len(unsigned long, char const*) const [91]
                0.00    0.00    1024/10240       void std::allocator_traits<std::allocator<Cell> >::construct<Cell, Cell const&>(std::allocator<Cell>&, Cell*, Cell const&) [90]
                0.00    0.00    1024/23018218     std::vector<Cell, std::allocator<Cell> >::size() const [17]
                0.00    0.00    2048/2942        std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() [150]
                0.00    0.00    1024/1280        std::_Vector_base<Cell, std::allocator<Cell> >::_M_allocate(unsigned long) [162]
                0.00    0.00    1024/41984       Cell const& std::forward<Cell const&>(std::remove_reference<Cell const&>::type&) [128]
                0.00    0.00    1024/1535        void std::_Destroy<Cell*, Cell>(Cell*, Cell*, std::allocator<Cell>&) [159]
                0.00    0.00    1024/1535        std::_Vector_base<Cell, std::allocator<Cell> >::_M_deallocate(Cell*, unsigned long) [157]
-----------------------------------------------
                0.00    0.00      15/15          void std::vector<Move, std::allocator<Move> >::emplace_back<Move>(Move&&) [29]
[69]     0.0    0.00    0.00      15         void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [69]
                0.00    0.00      15/15          Move* std::__uninitialized_move_if_noexcept_a<Move*, Move*, std::allocator<Move> >(Move*, Move*, Move*, std::allocator<Move>&) [74]
                0.00    0.00      15/1023492     void std::allocator_traits<std::allocator<Move> >::construct<Move, Move>(std::allocator<Move>&, Move*, Move&&) [40]
                0.00    0.00      30/33          std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() [237]
                0.00    0.00      15/15          std::vector<Move, std::allocator<Move> >::_M_check_len(unsigned long, char const*) const [280]
                0.00    0.00      15/15          std::_Vector_base<Move, std::allocator<Move> >::_M_allocate(unsigned long) [281]
                0.00    0.00      15/3086874     Move&& std::forward<Move>(std::remove_reference<Move>::type&) [116]
                0.00    0.00      15/1000075     std::vector<Move, std::allocator<Move> >::size() const [123]
                0.00    0.00      15/17          void std::_Destroy<Move*, Move>(Move*, Move*, std::allocator<Move>&) [272]
                0.00    0.00      15/17          std::_Vector_base<Move, std::allocator<Move> >::_M_deallocate(Move*, unsigned long) [269]
-----------------------------------------------
                0.00    0.00   16383/16383       Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [71]
[70]     0.0    0.00    0.00   16383         void std::_Construct<Move, Move>(Move*, Move&&) [70]
                0.00    0.00   16383/1087283     operator new(unsigned long, void*) [54]
                0.00    0.00   16383/3086874     Move&& std::forward<Move>(std::remove_reference<Move>::type&) [116]
-----------------------------------------------
                0.00    0.00      15/15          Move* std::uninitialized_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [72]
[71]     0.0    0.00    0.00      15         Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [71]
                0.00    0.00   16383/16383       void std::_Construct<Move, Move>(Move*, Move&&) [70]
                0.00    0.00   16398/16398       bool std::operator!=<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&) [141]
                0.00    0.00   16383/16383       std::move_iterator<Move*>::operator*() const [142]
                0.00    0.00   16383/16383       Move* std::__addressof<Move>(Move&) [144]
                0.00    0.00   16383/16383       std::move_iterator<Move*>::operator++() [143]
-----------------------------------------------
                0.00    0.00      15/15          Move* std::__uninitialized_copy_a<std::move_iterator<Move*>, Move*, Move>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*, std::allocator<Move>&) [73]
[72]     0.0    0.00    0.00      15         Move* std::uninitialized_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [72]
                0.00    0.00      15/15          Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [71]
-----------------------------------------------
                0.00    0.00      15/15          Move* std::__uninitialized_move_if_noexcept_a<Move*, Move*, std::allocator<Move> >(Move*, Move*, Move*, std::allocator<Move>&) [74]
[73]     0.0    0.00    0.00      15         Move* std::__uninitialized_copy_a<std::move_iterator<Move*>, Move*, Move>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*, std::allocator<Move>&) [73]
                0.00    0.00      15/15          Move* std::uninitialized_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [72]
-----------------------------------------------
                0.00    0.00      15/15          void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [69]
[74]     0.0    0.00    0.00      15         Move* std::__uninitialized_move_if_noexcept_a<Move*, Move*, std::allocator<Move> >(Move*, Move*, Move*, std::allocator<Move>&) [74]
                0.00    0.00      15/15          Move* std::__uninitialized_copy_a<std::move_iterator<Move*>, Move*, Move>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*, std::allocator<Move>&) [73]
                0.00    0.00      30/30          std::move_iterator<Move*> std::__make_move_if_noexcept_iterator<Move, std::move_iterator<Move*> >(Move*) [242]
-----------------------------------------------
                0.00    0.00   16256/16256       Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [76]
[75]     0.0    0.00    0.00   16256         void std::_Construct<Cell, Cell>(Cell*, Cell&&) [75]
                0.00    0.00   16256/1087283     operator new(unsigned long, void*) [54]
                0.00    0.00   16256/16256       Cell&& std::forward<Cell>(std::remove_reference<Cell>::type&) [147]
-----------------------------------------------
                0.00    0.00    1024/1024        Cell* std::uninitialized_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [77]
[76]     0.0    0.00    0.00    1024         Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [76]
                0.00    0.00   16256/16256       void std::_Construct<Cell, Cell>(Cell*, Cell&&) [75]
                0.00    0.00   17280/17280       bool std::operator!=<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&) [139]
                0.00    0.00   16256/16256       std::move_iterator<Cell*>::operator*() const [145]
                0.00    0.00   16256/36736       Cell* std::__addressof<Cell>(Cell&) [130]
                0.00    0.00   16256/16256       std::move_iterator<Cell*>::operator++() [146]
-----------------------------------------------
                0.00    0.00    1024/1024        Cell* std::__uninitialized_copy_a<std::move_iterator<Cell*>, Cell*, Cell>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*, std::allocator<Cell>&) [78]
[77]     0.0    0.00    0.00    1024         Cell* std::uninitialized_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [77]
                0.00    0.00    1024/1024        Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [76]
-----------------------------------------------
                0.00    0.00    1024/1024        Cell* std::__uninitialized_move_if_noexcept_a<Cell*, Cell*, std::allocator<Cell> >(Cell*, Cell*, Cell*, std::allocator<Cell>&) [79]
[78]     0.0    0.00    0.00    1024         Cell* std::__uninitialized_copy_a<std::move_iterator<Cell*>, Cell*, Cell>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*, std::allocator<Cell>&) [78]
                0.00    0.00    1024/1024        Cell* std::uninitialized_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [77]
-----------------------------------------------
                0.00    0.00    1024/1024        void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [68]
[79]     0.0    0.00    0.00    1024         Cell* std::__uninitialized_move_if_noexcept_a<Cell*, Cell*, std::allocator<Cell> >(Cell*, Cell*, Cell*, std::allocator<Cell>&) [79]
                0.00    0.00    1024/1024        Cell* std::__uninitialized_copy_a<std::move_iterator<Cell*>, Cell*, Cell>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*, std::allocator<Cell>&) [78]
                0.00    0.00    2048/2048        std::move_iterator<Cell*> std::__make_move_if_noexcept_iterator<Cell, std::move_iterator<Cell*> >(Cell*) [155]
-----------------------------------------------
                0.00    0.00     128/128         Board::Board(int, int, int, int, int, XColor*) [18]
[80]     0.0    0.00    0.00     128         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::push_back(std::vector<Cell, std::allocator<Cell> > const&) [80]
                0.00    0.00     120/128         void std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [83]
                0.00    0.00       8/8           void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [92]
-----------------------------------------------
                0.00    0.00       1/1           Board::Board(int, int, int, int, int, XColor*) [18]
[81]     0.0    0.00    0.00       1         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [81]
                0.00    0.00       1/1           std::vector<Cell, std::allocator<Cell> >* std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > >(unsigned long, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >) [86]
                0.00    0.00       1/25988155     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const [14]
                0.00    0.00       1/1           __gnu_cxx::__alloc_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_S_propagate_on_copy_assign() [366]
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::capacity() const [369]
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::end() const [367]
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::begin() const [368]
                0.00    0.00       1/20          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() [262]
                0.00    0.00       1/11          void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [289]
                0.00    0.00       1/11          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [287]
-----------------------------------------------
                0.00    0.00     128/128         void std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [83]
[82]     0.0    0.00    0.00     128         void __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [82]
                0.00    0.00     128/256         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [63]
                0.00    0.00     128/1087283     operator new(unsigned long, void*) [54]
                0.00    0.00     128/392         std::vector<Cell, std::allocator<Cell> > const& std::forward<std::vector<Cell, std::allocator<Cell> > const&>(std::remove_reference<std::vector<Cell, std::allocator<Cell> > const&>::type&) [176]
-----------------------------------------------
                0.00    0.00       8/128         void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [92]
                0.00    0.00     120/128         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::push_back(std::vector<Cell, std::allocator<Cell> > const&) [80]
[83]     0.0    0.00    0.00     128         void std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [83]
                0.00    0.00     128/128         void __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [82]
                0.00    0.00     128/392         std::vector<Cell, std::allocator<Cell> > const& std::forward<std::vector<Cell, std::allocator<Cell> > const&>(std::remove_reference<std::vector<Cell, std::allocator<Cell> > const&>::type&) [176]
-----------------------------------------------
                0.00    0.00     128/128         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [85]
[84]     0.0    0.00    0.00     128         void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [84]
                0.00    0.00     128/256         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [63]
                0.00    0.00     128/1087283     operator new(unsigned long, void*) [54]
                0.00    0.00     128/392         std::vector<Cell, std::allocator<Cell> > const& std::forward<std::vector<Cell, std::allocator<Cell> > const&>(std::remove_reference<std::vector<Cell, std::allocator<Cell> > const&>::type&) [176]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [87]
[85]     0.0    0.00    0.00       1         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [85]
                0.00    0.00     128/128         void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [84]
                0.00    0.00     129/129         bool __gnu_cxx::operator!=<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&) [195]
                0.00    0.00     128/128         __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator*() const [198]
                0.00    0.00     128/638         std::vector<Cell, std::allocator<Cell> >* std::__addressof<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >&) [171]
                0.00    0.00     128/128         __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator++() [197]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [81]
[86]     0.0    0.00    0.00       1         std::vector<Cell, std::allocator<Cell> >* std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > >(unsigned long, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >) [86]
                0.00    0.00       1/1           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [88]
                0.00    0.00       1/9           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate(unsigned long) [293]
                0.00    0.00       1/20          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() [262]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [88]
[87]     0.0    0.00    0.00       1         std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [87]
                0.00    0.00       1/1           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [85]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Cell, std::allocator<Cell> >* std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > >(unsigned long, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >) [86]
[88]     0.0    0.00    0.00       1         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [88]
                0.00    0.00       1/1           std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [87]
-----------------------------------------------
                0.00    0.00   10240/10240       void std::allocator_traits<std::allocator<Cell> >::construct<Cell, Cell const&>(std::allocator<Cell>&, Cell*, Cell const&) [90]
[89]     0.0    0.00    0.00   10240         void __gnu_cxx::new_allocator<Cell>::construct<Cell, Cell const&>(Cell*, Cell const&) [89]
                0.00    0.00   10240/1087283     operator new(unsigned long, void*) [54]
                0.00    0.00   10240/41984       Cell const& std::forward<Cell const&>(std::remove_reference<Cell const&>::type&) [128]
-----------------------------------------------
                0.00    0.00    1024/10240       void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [68]
                0.00    0.00    9216/10240       std::vector<Cell, std::allocator<Cell> >::push_back(Cell const&) [62]
[90]     0.0    0.00    0.00   10240         void std::allocator_traits<std::allocator<Cell> >::construct<Cell, Cell const&>(std::allocator<Cell>&, Cell*, Cell const&) [90]
                0.00    0.00   10240/10240       void __gnu_cxx::new_allocator<Cell>::construct<Cell, Cell const&>(Cell*, Cell const&) [89]
                0.00    0.00   10240/41984       Cell const& std::forward<Cell const&>(std::remove_reference<Cell const&>::type&) [128]
-----------------------------------------------
                0.00    0.00    1024/1024        void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [68]
[91]     0.0    0.00    0.00    1024         std::vector<Cell, std::allocator<Cell> >::_M_check_len(unsigned long, char const*) const [91]
                0.00    0.00    4096/23018218     std::vector<Cell, std::allocator<Cell> >::size() const [17]
                0.00    0.00    2048/2048        std::vector<Cell, std::allocator<Cell> >::max_size() const [152]
                0.00    0.00    1024/1079        unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [166]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::push_back(std::vector<Cell, std::allocator<Cell> > const&) [80]
[92]     0.0    0.00    0.00       8         void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [92]
                0.00    0.00       8/128         void std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [83]
                0.00    0.00       8/8           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_move_if_noexcept_a<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [97]
                0.00    0.00       8/8           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_check_len(unsigned long, char const*) const [105]
                0.00    0.00       8/25988155     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const [14]
                0.00    0.00      16/20          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() [262]
                0.00    0.00       8/9           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate(unsigned long) [293]
                0.00    0.00       8/392         std::vector<Cell, std::allocator<Cell> > const& std::forward<std::vector<Cell, std::allocator<Cell> > const&>(std::remove_reference<std::vector<Cell, std::allocator<Cell> > const&>::type&) [176]
                0.00    0.00       8/11          void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [289]
                0.00    0.00       8/11          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [287]
-----------------------------------------------
                0.00    0.00     127/127         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [94]
[93]     0.0    0.00    0.00     127         void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >&&) [93]
                0.00    0.00     127/1087283     operator new(unsigned long, void*) [54]
                0.00    0.00     127/127         std::vector<Cell, std::allocator<Cell> >&& std::forward<std::vector<Cell, std::allocator<Cell> > >(std::remove_reference<std::vector<Cell, std::allocator<Cell> > >::type&) [210]
                0.00    0.00     127/127         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> >&&) [208]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [95]
[94]     0.0    0.00    0.00       8         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [94]
                0.00    0.00     127/127         void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >&&) [93]
                0.00    0.00     135/135         bool std::operator!=<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&) [194]
                0.00    0.00     127/127         std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator*() const [203]
                0.00    0.00     127/638         std::vector<Cell, std::allocator<Cell> >* std::__addressof<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >&) [171]
                0.00    0.00     127/127         std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator++() [207]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [96]
[95]     0.0    0.00    0.00       8         std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [95]
                0.00    0.00       8/8           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [94]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_move_if_noexcept_a<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [97]
[96]     0.0    0.00    0.00       8         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [96]
                0.00    0.00       8/8           std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [95]
-----------------------------------------------
                0.00    0.00       8/8           void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [92]
[97]     0.0    0.00    0.00       8         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_move_if_noexcept_a<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [97]
                0.00    0.00       8/8           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [96]
                0.00    0.00      16/16          std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> std::__make_move_if_noexcept_iterator<std::vector<Cell, std::allocator<Cell> >, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> >(std::vector<Cell, std::allocator<Cell> >*) [277]
-----------------------------------------------
                0.00    0.00      42/42          void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [99]
[98]     0.0    0.00    0.00      42         void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [98]
                0.00    0.00      42/1087283     operator new(unsigned long, void*) [54]
                0.00    0.00      42/154         int&& std::forward<int>(std::remove_reference<int>::type&) [192]
-----------------------------------------------
                0.00    0.00      14/42          void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [100]
                0.00    0.00      28/42          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [103]
[99]     0.0    0.00    0.00      42         void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [99]
                0.00    0.00      42/42          void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [98]
                0.00    0.00      42/154         int&& std::forward<int>(std::remove_reference<int>::type&) [192]
-----------------------------------------------
                0.00    0.00      42/42          std::vector<int, std::allocator<int> >::push_back(int&&) [101]
[100]    0.0    0.00    0.00      42         void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [100]
                0.00    0.00      28/28          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [103]
                0.00    0.00      14/42          void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [99]
                0.00    0.00      42/154         int&& std::forward<int>(std::remove_reference<int>::type&) [192]
-----------------------------------------------
                0.00    0.00      42/42          Faction::init(int) [102]
[101]    0.0    0.00    0.00      42         std::vector<int, std::allocator<int> >::push_back(int&&) [101]
                0.00    0.00      42/42          void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [100]
                0.00    0.00      42/121         std::remove_reference<int&>::type&& std::move<int&>(int&) [211]
-----------------------------------------------
                0.00    0.00       7/7           Board::init() [60]
[102]    0.0    0.00    0.00       7         Faction::init(int) [102]
                0.00    0.00      42/42          std::vector<int, std::allocator<int> >::push_back(int&&) [101]
                0.00    0.00      70/70          std::vector<int, std::allocator<int> >::at(unsigned long) [215]
                0.00    0.00      42/252         std::vector<int, std::allocator<int> >::size() const [189]
                0.00    0.00       7/7           std::vector<int, std::allocator<int> >::vector() [317]
                0.00    0.00       7/7           std::vector<int, std::allocator<int> >::end() [315]
                0.00    0.00       7/7           std::vector<int, std::allocator<int> >::begin() [316]
                0.00    0.00       7/7           void std::sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [323]
                0.00    0.00       7/7           std::vector<int, std::allocator<int> >::~vector() [318]
-----------------------------------------------
                0.00    0.00      28/28          void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [100]
[103]    0.0    0.00    0.00      28         void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [103]
                0.00    0.00      28/42          void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [99]
                0.00    0.00      56/63          std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [217]
                0.00    0.00      28/28          std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [245]
                0.00    0.00      28/28          std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [247]
                0.00    0.00      28/154         int&& std::forward<int>(std::remove_reference<int>::type&) [192]
                0.00    0.00      28/252         std::vector<int, std::allocator<int> >::size() const [189]
                0.00    0.00      28/28          int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [255]
                0.00    0.00      28/35          void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [236]
                0.00    0.00      28/35          std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [234]
-----------------------------------------------
                0.00    0.00       4/4           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [31]
[104]    0.0    0.00    0.00       4         std::vector<Faction, std::allocator<Faction> >::_M_check_len(unsigned long, char const*) const [104]
                0.00    0.00      16/1335992     std::vector<Faction, std::allocator<Faction> >::size() const [52]
                0.00    0.00       8/8           std::vector<Faction, std::allocator<Faction> >::max_size() const [299]
                0.00    0.00       4/1079        unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [166]
-----------------------------------------------
                0.00    0.00       8/8           void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [92]
[105]    0.0    0.00    0.00       8         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_check_len(unsigned long, char const*) const [105]
                0.00    0.00      32/25988155     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const [14]
                0.00    0.00      16/16          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size() const [274]
                0.00    0.00       8/1079        unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [166]
-----------------------------------------------
                0.00    0.00       7/7           void std::allocator_traits<std::allocator<Faction> >::construct<Faction>(std::allocator<Faction>&, Faction*) [107]
[106]    0.0    0.00    0.00       7         void __gnu_cxx::new_allocator<Faction>::construct<Faction>(Faction*) [106]
                0.00    0.00       7/1087283     operator new(unsigned long, void*) [54]
-----------------------------------------------
                0.00    0.00       3/7           void std::vector<Faction, std::allocator<Faction> >::emplace_back<>() [28]
                0.00    0.00       4/7           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [31]
[107]    0.0    0.00    0.00       7         void std::allocator_traits<std::allocator<Faction> >::construct<Faction>(std::allocator<Faction>&, Faction*) [107]
                0.00    0.00       7/7           void __gnu_cxx::new_allocator<Faction>::construct<Faction>(Faction*) [106]
-----------------------------------------------
                0.00    0.00       1/1           std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [32]
[108]    0.0    0.00    0.00       1         void std::make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [108]
                0.00    0.00       1/1013225     __gnu_cxx::__ops::_Iter_comp_iter<compareMove> __gnu_cxx::__ops::__iter_comp_iter<compareMove>(compareMove) [49]
                0.00    0.00       1/1           void std::__make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [109]
-----------------------------------------------
                0.00    0.00       1/1           void std::make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [108]
[109]    0.0    0.00    0.00       1         void std::__make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [109]
                0.00    0.00       1/3049941     __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&) [37]
-----------------------------------------------
                0.00    0.00      15/3086874     void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [69]
                0.00    0.00   16383/3086874     void std::_Construct<Move, Move>(Move*, Move&&) [70]
                0.00    0.00 1023492/3086874     void std::vector<Move, std::allocator<Move> >::emplace_back<Move>(Move&&) [29]
                0.00    0.00 1023492/3086874     void std::allocator_traits<std::allocator<Move> >::construct<Move, Move>(std::allocator<Move>&, Move*, Move&&) [40]
                0.00    0.00 1023492/3086874     void __gnu_cxx::new_allocator<Move>::construct<Move, Move>(Move*, Move&&) [39]
[116]    0.0    0.00    0.00 3086874         Move&& std::forward<Move>(std::remove_reference<Move>::type&) [116]
-----------------------------------------------
                0.00    0.00 2013225/2013225     std::vector<Move, std::allocator<Move> >::begin() const [45]
[117]    0.0    0.00    0.00 2013225         __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move const* const&) [117]
-----------------------------------------------
                0.00    0.00 2013225/2013225     std::vector<Move, std::allocator<Move> >::front() const [46]
[118]    0.0    0.00    0.00 2013225         __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::operator*() const [118]
-----------------------------------------------
                0.00    0.00 1312470/1312470     std::vector<Faction, std::allocator<Faction> >::at(unsigned long) [25]
[119]    0.0    0.00    0.00 1312470         std::vector<Faction, std::allocator<Faction> >::operator[](unsigned long) [119]
-----------------------------------------------
                0.00    0.00 1013225/1013225     __gnu_cxx::__ops::_Iter_comp_iter<compareMove> __gnu_cxx::__ops::__iter_comp_iter<compareMove>(compareMove) [49]
[120]    0.0    0.00    0.00 1013225         __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::_Iter_comp_iter(compareMove) [120]
-----------------------------------------------
                0.00    0.00 1013224/1013224     void std::allocator_traits<std::allocator<Move> >::destroy<Move>(std::allocator<Move>&, Move*) [55]
[121]    0.0    0.00    0.00 1013224         void __gnu_cxx::new_allocator<Move>::destroy<Move>(Move*) [121]
-----------------------------------------------
                0.00    0.00 1013224/1013224     void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [4]
[122]    0.0    0.00    0.00 1013224         __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator--() [122]
-----------------------------------------------
                0.00    0.00      15/1000075     void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [69]
                0.00    0.00      60/1000075     std::vector<Move, std::allocator<Move> >::_M_check_len(unsigned long, char const*) const [280]
                0.00    0.00 1000000/1000075     std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::size() const [124]
[123]    0.0    0.00    0.00 1000075         std::vector<Move, std::allocator<Move> >::size() const [123]
-----------------------------------------------
                0.00    0.00 1000000/1000000     Board::step(int) [2]
[124]    0.0    0.00    0.00 1000000         std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::size() const [124]
                0.00    0.00 1000000/1000075     std::vector<Move, std::allocator<Move> >::size() const [123]
-----------------------------------------------
                0.00    0.00   91899/91899       Board::step(int) [2]
[125]    0.0    0.00    0.00   91899         Faction::getAccuracy() [125]
-----------------------------------------------
                0.00    0.00   91899/91899       Board::step(int) [2]
[126]    0.0    0.00    0.00   91899         Faction::getStrength() [126]
-----------------------------------------------
                0.00    0.00   81680/81680       Board::step(int) [2]
[127]    0.0    0.00    0.00   81680         Faction::getArmor() [127]
-----------------------------------------------
                0.00    0.00    1024/41984       void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [68]
                0.00    0.00   10240/41984       void std::allocator_traits<std::allocator<Cell> >::construct<Cell, Cell const&>(std::allocator<Cell>&, Cell*, Cell const&) [90]
                0.00    0.00   10240/41984       void __gnu_cxx::new_allocator<Cell>::construct<Cell, Cell const&>(Cell*, Cell const&) [89]
                0.00    0.00   20480/41984       void std::_Construct<Cell, Cell const&>(Cell*, Cell const&) [64]
[128]    0.0    0.00    0.00   41984         Cell const& std::forward<Cell const&>(std::remove_reference<Cell const&>::type&) [128]
-----------------------------------------------
                0.00    0.00   41472/41472       bool __gnu_cxx::operator!=<Cell const*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&) [135]
[129]    0.0    0.00    0.00   41472         __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::base() const [129]
-----------------------------------------------
                0.00    0.00   16256/36736       Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [76]
                0.00    0.00   20480/36736       Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [65]
[130]    0.0    0.00    0.00   36736         Cell* std::__addressof<Cell>(Cell&) [130]
-----------------------------------------------
                0.00    0.00   34560/34560       bool std::operator==<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&) [138]
[131]    0.0    0.00    0.00   34560         std::move_iterator<Cell*>::base() const [131]
-----------------------------------------------
                0.00    0.00   10240/33733       Board::init() [60]
                0.00    0.00   23493/33733       Board::setCell(int, int, int, int) [53]
[132]    0.0    0.00    0.00   33733         Cell::init(int) [132]
-----------------------------------------------
                0.00    0.00   32796/32796       bool std::operator==<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&) [140]
[133]    0.0    0.00    0.00   32796         std::move_iterator<Move*>::base() const [133]
-----------------------------------------------
                0.00    0.00   23493/23493       Board::setCell(int, int, int, int) [53]
[134]    0.0    0.00    0.00   23493         Faction::getHealth() [134]
-----------------------------------------------
                0.00    0.00   20736/20736       Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [65]
[135]    0.0    0.00    0.00   20736         bool __gnu_cxx::operator!=<Cell const*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&) [135]
                0.00    0.00   41472/41472       __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::base() const [129]
-----------------------------------------------
                0.00    0.00   20480/20480       Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [65]
[136]    0.0    0.00    0.00   20480         __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator++() [136]
-----------------------------------------------
                0.00    0.00   20480/20480       Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [65]
[137]    0.0    0.00    0.00   20480         __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator*() const [137]
-----------------------------------------------
                0.00    0.00   17280/17280       bool std::operator!=<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&) [139]
[138]    0.0    0.00    0.00   17280         bool std::operator==<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&) [138]
                0.00    0.00   34560/34560       std::move_iterator<Cell*>::base() const [131]
-----------------------------------------------
                0.00    0.00   17280/17280       Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [76]
[139]    0.0    0.00    0.00   17280         bool std::operator!=<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&) [139]
                0.00    0.00   17280/17280       bool std::operator==<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&) [138]
-----------------------------------------------
                0.00    0.00   16398/16398       bool std::operator!=<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&) [141]
[140]    0.0    0.00    0.00   16398         bool std::operator==<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&) [140]
                0.00    0.00   32796/32796       std::move_iterator<Move*>::base() const [133]
-----------------------------------------------
                0.00    0.00   16398/16398       Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [71]
[141]    0.0    0.00    0.00   16398         bool std::operator!=<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&) [141]
                0.00    0.00   16398/16398       bool std::operator==<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&) [140]
-----------------------------------------------
                0.00    0.00   16383/16383       Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [71]
[142]    0.0    0.00    0.00   16383         std::move_iterator<Move*>::operator*() const [142]
-----------------------------------------------
                0.00    0.00   16383/16383       Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [71]
[143]    0.0    0.00    0.00   16383         std::move_iterator<Move*>::operator++() [143]
-----------------------------------------------
                0.00    0.00   16383/16383       Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [71]
[144]    0.0    0.00    0.00   16383         Move* std::__addressof<Move>(Move&) [144]
-----------------------------------------------
                0.00    0.00   16256/16256       Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [76]
[145]    0.0    0.00    0.00   16256         std::move_iterator<Cell*>::operator*() const [145]
-----------------------------------------------
                0.00    0.00   16256/16256       Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [76]
[146]    0.0    0.00    0.00   16256         std::move_iterator<Cell*>::operator++() [146]
-----------------------------------------------
                0.00    0.00   16256/16256       void std::_Construct<Cell, Cell>(Cell*, Cell&&) [75]
[147]    0.0    0.00    0.00   16256         Cell&& std::forward<Cell>(std::remove_reference<Cell>::type&) [147]
-----------------------------------------------
                0.00    0.00   10240/10240       Board::Board(int, int, int, int, int, XColor*) [18]
[148]    0.0    0.00    0.00   10240         Cell::Cell(int, int) [148]
-----------------------------------------------
                0.00    0.00    1280/3328        __gnu_cxx::new_allocator<Cell>::allocate(unsigned long, void const*) [161]
                0.00    0.00    2048/3328        std::allocator_traits<std::allocator<Cell> >::max_size(std::allocator<Cell> const&) [154]
[149]    0.0    0.00    0.00    3328         __gnu_cxx::new_allocator<Cell>::max_size() const [149]
-----------------------------------------------
                0.00    0.00     127/2942        std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&) [206]
                0.00    0.00     256/2942        std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [63]
                0.00    0.00     511/2942        std::vector<Cell, std::allocator<Cell> >::~vector() [175]
                0.00    0.00    2048/2942        void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [68]
[150]    0.0    0.00    0.00    2942         std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() [150]
-----------------------------------------------
                0.00    0.00     256/2304        std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [63]
                0.00    0.00    2048/2304        std::vector<Cell, std::allocator<Cell> >::max_size() const [152]
[151]    0.0    0.00    0.00    2304         std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() const [151]
-----------------------------------------------
                0.00    0.00    2048/2048        std::vector<Cell, std::allocator<Cell> >::_M_check_len(unsigned long, char const*) const [91]
[152]    0.0    0.00    0.00    2048         std::vector<Cell, std::allocator<Cell> >::max_size() const [152]
                0.00    0.00    2048/2304        std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() const [151]
                0.00    0.00    2048/2048        std::allocator_traits<std::allocator<Cell> >::max_size(std::allocator<Cell> const&) [154]
-----------------------------------------------
                0.00    0.00    2048/2048        std::move_iterator<Cell*> std::__make_move_if_noexcept_iterator<Cell, std::move_iterator<Cell*> >(Cell*) [155]
[153]    0.0    0.00    0.00    2048         std::move_iterator<Cell*>::move_iterator(Cell*) [153]
-----------------------------------------------
                0.00    0.00    2048/2048        std::vector<Cell, std::allocator<Cell> >::max_size() const [152]
[154]    0.0    0.00    0.00    2048         std::allocator_traits<std::allocator<Cell> >::max_size(std::allocator<Cell> const&) [154]
                0.00    0.00    2048/3328        __gnu_cxx::new_allocator<Cell>::max_size() const [149]
-----------------------------------------------
                0.00    0.00    2048/2048        Cell* std::__uninitialized_move_if_noexcept_a<Cell*, Cell*, std::allocator<Cell> >(Cell*, Cell*, Cell*, std::allocator<Cell>&) [79]
[155]    0.0    0.00    0.00    2048         std::move_iterator<Cell*> std::__make_move_if_noexcept_iterator<Cell, std::move_iterator<Cell*> >(Cell*) [155]
                0.00    0.00    2048/2048        std::move_iterator<Cell*>::move_iterator(Cell*) [153]
-----------------------------------------------
                0.00    0.00    1535/1535        void std::_Destroy<Cell*>(Cell*, Cell*) [158]
[156]    0.0    0.00    0.00    1535         void std::_Destroy_aux<true>::__destroy<Cell*>(Cell*, Cell*) [156]
-----------------------------------------------
                0.00    0.00     511/1535        std::_Vector_base<Cell, std::allocator<Cell> >::~_Vector_base() [174]
                0.00    0.00    1024/1535        void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [68]
[157]    0.0    0.00    0.00    1535         std::_Vector_base<Cell, std::allocator<Cell> >::_M_deallocate(Cell*, unsigned long) [157]
                0.00    0.00    1280/1280        std::allocator_traits<std::allocator<Cell> >::deallocate(std::allocator<Cell>&, Cell*, unsigned long) [163]
-----------------------------------------------
                0.00    0.00    1535/1535        void std::_Destroy<Cell*, Cell>(Cell*, Cell*, std::allocator<Cell>&) [159]
[158]    0.0    0.00    0.00    1535         void std::_Destroy<Cell*>(Cell*, Cell*) [158]
                0.00    0.00    1535/1535        void std::_Destroy_aux<true>::__destroy<Cell*>(Cell*, Cell*) [156]
-----------------------------------------------
                0.00    0.00     511/1535        std::vector<Cell, std::allocator<Cell> >::~vector() [175]
                0.00    0.00    1024/1535        void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [68]
[159]    0.0    0.00    0.00    1535         void std::_Destroy<Cell*, Cell>(Cell*, Cell*, std::allocator<Cell>&) [159]
                0.00    0.00    1535/1535        void std::_Destroy<Cell*>(Cell*, Cell*) [158]
-----------------------------------------------
                0.00    0.00    1280/1280        std::allocator_traits<std::allocator<Cell> >::deallocate(std::allocator<Cell>&, Cell*, unsigned long) [163]
[160]    0.0    0.00    0.00    1280         __gnu_cxx::new_allocator<Cell>::deallocate(Cell*, unsigned long) [160]
-----------------------------------------------
                0.00    0.00    1280/1280        std::allocator_traits<std::allocator<Cell> >::allocate(std::allocator<Cell>&, unsigned long) [164]
[161]    0.0    0.00    0.00    1280         __gnu_cxx::new_allocator<Cell>::allocate(unsigned long, void const*) [161]
                0.00    0.00    1280/3328        __gnu_cxx::new_allocator<Cell>::max_size() const [149]
-----------------------------------------------
                0.00    0.00     256/1280        std::_Vector_base<Cell, std::allocator<Cell> >::_M_create_storage(unsigned long) [185]
                0.00    0.00    1024/1280        void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [68]
[162]    0.0    0.00    0.00    1280         std::_Vector_base<Cell, std::allocator<Cell> >::_M_allocate(unsigned long) [162]
                0.00    0.00    1280/1280        std::allocator_traits<std::allocator<Cell> >::allocate(std::allocator<Cell>&, unsigned long) [164]
-----------------------------------------------
                0.00    0.00    1280/1280        std::_Vector_base<Cell, std::allocator<Cell> >::_M_deallocate(Cell*, unsigned long) [157]
[163]    0.0    0.00    0.00    1280         std::allocator_traits<std::allocator<Cell> >::deallocate(std::allocator<Cell>&, Cell*, unsigned long) [163]
                0.00    0.00    1280/1280        __gnu_cxx::new_allocator<Cell>::deallocate(Cell*, unsigned long) [160]
-----------------------------------------------
                0.00    0.00    1280/1280        std::_Vector_base<Cell, std::allocator<Cell> >::_M_allocate(unsigned long) [162]
[164]    0.0    0.00    0.00    1280         std::allocator_traits<std::allocator<Cell> >::allocate(std::allocator<Cell>&, unsigned long) [164]
                0.00    0.00    1280/1280        __gnu_cxx::new_allocator<Cell>::allocate(unsigned long, void const*) [161]
-----------------------------------------------
                0.00    0.00    1143/1143        std::enable_if<std::__and_<std::is_move_constructible<Cell*>, std::is_move_assignable<Cell*> >::value, void>::type std::swap<Cell*>(Cell*&, Cell*&) [178]
[165]    0.0    0.00    0.00    1143         std::remove_reference<Cell*&>::type&& std::move<Cell*&>(Cell*&) [165]
-----------------------------------------------
                0.00    0.00       4/1079        std::vector<Faction, std::allocator<Faction> >::_M_check_len(unsigned long, char const*) const [104]
                0.00    0.00       8/1079        std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_check_len(unsigned long, char const*) const [105]
                0.00    0.00      15/1079        std::vector<Move, std::allocator<Move> >::_M_check_len(unsigned long, char const*) const [280]
                0.00    0.00      28/1079        std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [245]
                0.00    0.00    1024/1079        std::vector<Cell, std::allocator<Cell> >::_M_check_len(unsigned long, char const*) const [91]
[166]    0.0    0.00    0.00    1079         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [166]
-----------------------------------------------
                0.00    0.00     767/767         std::allocator<Cell>::~allocator() [168]
[167]    0.0    0.00    0.00     767         __gnu_cxx::new_allocator<Cell>::~new_allocator() [167]
-----------------------------------------------
                0.00    0.00     256/767         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [63]
                0.00    0.00     511/767         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::~_Vector_impl() [173]
[168]    0.0    0.00    0.00     767         std::allocator<Cell>::~allocator() [168]
                0.00    0.00     767/767         __gnu_cxx::new_allocator<Cell>::~new_allocator() [167]
-----------------------------------------------
                0.00    0.00     639/639         std::allocator<Cell>::allocator(std::allocator<Cell> const&) [170]
[169]    0.0    0.00    0.00     639         __gnu_cxx::new_allocator<Cell>::new_allocator(__gnu_cxx::new_allocator<Cell> const&) [169]
-----------------------------------------------
                0.00    0.00     127/639         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell>&&) [205]
                0.00    0.00     256/639         std::allocator_traits<std::allocator<Cell> >::select_on_container_copy_construction(std::allocator<Cell> const&) [187]
                0.00    0.00     256/639         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell> const&) [184]
[170]    0.0    0.00    0.00     639         std::allocator<Cell>::allocator(std::allocator<Cell> const&) [170]
                0.00    0.00     639/639         __gnu_cxx::new_allocator<Cell>::new_allocator(__gnu_cxx::new_allocator<Cell> const&) [169]
-----------------------------------------------
                0.00    0.00     127/638         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [94]
                0.00    0.00     128/638         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [85]
                0.00    0.00     383/638         void std::_Destroy_aux<false>::__destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [286]
[171]    0.0    0.00    0.00     638         std::vector<Cell, std::allocator<Cell> >* std::__addressof<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >&) [171]
-----------------------------------------------
                0.00    0.00     256/512         std::vector<Cell, std::allocator<Cell> >::begin() const [183]
                0.00    0.00     256/512         std::vector<Cell, std::allocator<Cell> >::end() const [182]
[172]    0.0    0.00    0.00     512         __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::__normal_iterator(Cell const* const&) [172]
-----------------------------------------------
                0.00    0.00     511/511         std::_Vector_base<Cell, std::allocator<Cell> >::~_Vector_base() [174]
[173]    0.0    0.00    0.00     511         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::~_Vector_impl() [173]
                0.00    0.00     511/767         std::allocator<Cell>::~allocator() [168]
-----------------------------------------------
                0.00    0.00     511/511         std::vector<Cell, std::allocator<Cell> >::~vector() [175]
[174]    0.0    0.00    0.00     511         std::_Vector_base<Cell, std::allocator<Cell> >::~_Vector_base() [174]
                0.00    0.00     511/511         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::~_Vector_impl() [173]
                0.00    0.00     511/1535        std::_Vector_base<Cell, std::allocator<Cell> >::_M_deallocate(Cell*, unsigned long) [157]
-----------------------------------------------
                0.00    0.00     128/511         Board::Board(int, int, int, int, int, XColor*) [18]
                0.00    0.00     383/511         void std::_Destroy<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*) [177]
[175]    0.0    0.00    0.00     511         std::vector<Cell, std::allocator<Cell> >::~vector() [175]
                0.00    0.00     511/2942        std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() [150]
                0.00    0.00     511/1535        void std::_Destroy<Cell*, Cell>(Cell*, Cell*, std::allocator<Cell>&) [159]
                0.00    0.00     511/511         std::_Vector_base<Cell, std::allocator<Cell> >::~_Vector_base() [174]
-----------------------------------------------
                0.00    0.00       8/392         void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [92]
                0.00    0.00     128/392         void std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [83]
                0.00    0.00     128/392         void __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [82]
                0.00    0.00     128/392         void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [84]
[176]    0.0    0.00    0.00     392         std::vector<Cell, std::allocator<Cell> > const& std::forward<std::vector<Cell, std::allocator<Cell> > const&>(std::remove_reference<std::vector<Cell, std::allocator<Cell> > const&>::type&) [176]
-----------------------------------------------
                0.00    0.00     383/383         void std::_Destroy_aux<false>::__destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [286]
[177]    0.0    0.00    0.00     383         void std::_Destroy<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*) [177]
                0.00    0.00     383/511         std::vector<Cell, std::allocator<Cell> >::~vector() [175]
-----------------------------------------------
                0.00    0.00     381/381         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_M_swap_data(std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl&) [204]
[178]    0.0    0.00    0.00     381         std::enable_if<std::__and_<std::is_move_constructible<Cell*>, std::is_move_assignable<Cell*> >::value, void>::type std::swap<Cell*>(Cell*&, Cell*&) [178]
                0.00    0.00    1143/1143        std::remove_reference<Cell*&>::type&& std::move<Cell*&>(Cell*&) [165]
-----------------------------------------------
                0.00    0.00     270/270         bool std::operator==<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&) [193]
[179]    0.0    0.00    0.00     270         std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::base() const [179]
-----------------------------------------------
                0.00    0.00     258/258         bool __gnu_cxx::operator!=<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&) [195]
[180]    0.0    0.00    0.00     258         __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::base() const [180]
-----------------------------------------------
                0.00    0.00     256/256         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [63]
[181]    0.0    0.00    0.00     256         __gnu_cxx::__alloc_traits<std::allocator<Cell> >::_S_select_on_copy(std::allocator<Cell> const&) [181]
                0.00    0.00     256/256         std::allocator_traits<std::allocator<Cell> >::select_on_container_copy_construction(std::allocator<Cell> const&) [187]
-----------------------------------------------
                0.00    0.00     256/256         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [63]
[182]    0.0    0.00    0.00     256         std::vector<Cell, std::allocator<Cell> >::end() const [182]
                0.00    0.00     256/512         __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::__normal_iterator(Cell const* const&) [172]
-----------------------------------------------
                0.00    0.00     256/256         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [63]
[183]    0.0    0.00    0.00     256         std::vector<Cell, std::allocator<Cell> >::begin() const [183]
                0.00    0.00     256/512         __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::__normal_iterator(Cell const* const&) [172]
-----------------------------------------------
                0.00    0.00     256/256         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(unsigned long, std::allocator<Cell> const&) [186]
[184]    0.0    0.00    0.00     256         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell> const&) [184]
                0.00    0.00     256/639         std::allocator<Cell>::allocator(std::allocator<Cell> const&) [170]
-----------------------------------------------
                0.00    0.00     256/256         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(unsigned long, std::allocator<Cell> const&) [186]
[185]    0.0    0.00    0.00     256         std::_Vector_base<Cell, std::allocator<Cell> >::_M_create_storage(unsigned long) [185]
                0.00    0.00     256/1280        std::_Vector_base<Cell, std::allocator<Cell> >::_M_allocate(unsigned long) [162]
-----------------------------------------------
                0.00    0.00     256/256         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [63]
[186]    0.0    0.00    0.00     256         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(unsigned long, std::allocator<Cell> const&) [186]
                0.00    0.00     256/256         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell> const&) [184]
                0.00    0.00     256/256         std::_Vector_base<Cell, std::allocator<Cell> >::_M_create_storage(unsigned long) [185]
-----------------------------------------------
                0.00    0.00     256/256         __gnu_cxx::__alloc_traits<std::allocator<Cell> >::_S_select_on_copy(std::allocator<Cell> const&) [181]
[187]    0.0    0.00    0.00     256         std::allocator_traits<std::allocator<Cell> >::select_on_container_copy_construction(std::allocator<Cell> const&) [187]
                0.00    0.00     256/639         std::allocator<Cell>::allocator(std::allocator<Cell> const&) [170]
-----------------------------------------------
                0.00    0.00     127/254         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&) [206]
                0.00    0.00     127/254         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell>&&) [205]
[188]    0.0    0.00    0.00     254         std::remove_reference<std::allocator<Cell>&>::type&& std::move<std::allocator<Cell>&>(std::allocator<Cell>&) [188]
-----------------------------------------------
                0.00    0.00      28/252         void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [103]
                0.00    0.00      42/252         Faction::init(int) [102]
                0.00    0.00      70/252         std::vector<int, std::allocator<int> >::_M_range_check(unsigned long) const [214]
                0.00    0.00     112/252         std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [245]
[189]    0.0    0.00    0.00     252         std::vector<int, std::allocator<int> >::size() const [189]
-----------------------------------------------
                0.00    0.00      14/208         bool __gnu_cxx::operator==<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [308]
                0.00    0.00      42/208         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [261]
                0.00    0.00      54/208         int* std::__niter_base<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [227]
                0.00    0.00      98/208         bool __gnu_cxx::operator!=<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [228]
[190]    0.0    0.00    0.00     208         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [190]
-----------------------------------------------
                0.00    0.00      26/184         bool __gnu_cxx::__ops::_Val_less_iter::operator()<int, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(int&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [258]
                0.00    0.00      36/184         void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [319]
                0.00    0.00      52/184         void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter) [270]
                0.00    0.00      70/184         bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [232]
[191]    0.0    0.00    0.00     184         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [191]
-----------------------------------------------
                0.00    0.00      28/154         void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [103]
                0.00    0.00      42/154         void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [100]
                0.00    0.00      42/154         void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [99]
                0.00    0.00      42/154         void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [98]
[192]    0.0    0.00    0.00     154         int&& std::forward<int>(std::remove_reference<int>::type&) [192]
-----------------------------------------------
                0.00    0.00     135/135         bool std::operator!=<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&) [194]
[193]    0.0    0.00    0.00     135         bool std::operator==<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&) [193]
                0.00    0.00     270/270         std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::base() const [179]
-----------------------------------------------
                0.00    0.00     135/135         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [94]
[194]    0.0    0.00    0.00     135         bool std::operator!=<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&) [194]
                0.00    0.00     135/135         bool std::operator==<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&) [193]
-----------------------------------------------
                0.00    0.00     129/129         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [85]
[195]    0.0    0.00    0.00     129         bool __gnu_cxx::operator!=<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&) [195]
                0.00    0.00     258/258         __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::base() const [180]
-----------------------------------------------
                0.00    0.00     128/128         std::allocator<Cell>::allocator() [199]
[196]    0.0    0.00    0.00     128         __gnu_cxx::new_allocator<Cell>::new_allocator() [196]
-----------------------------------------------
                0.00    0.00     128/128         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [85]
[197]    0.0    0.00    0.00     128         __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator++() [197]
-----------------------------------------------
                0.00    0.00     128/128         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [85]
[198]    0.0    0.00    0.00     128         __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator*() const [198]
-----------------------------------------------
                0.00    0.00     128/128         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl() [200]
[199]    0.0    0.00    0.00     128         std::allocator<Cell>::allocator() [199]
                0.00    0.00     128/128         __gnu_cxx::new_allocator<Cell>::new_allocator() [196]
-----------------------------------------------
                0.00    0.00     128/128         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base() [201]
[200]    0.0    0.00    0.00     128         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl() [200]
                0.00    0.00     128/128         std::allocator<Cell>::allocator() [199]
-----------------------------------------------
                0.00    0.00     128/128         std::vector<Cell, std::allocator<Cell> >::vector() [202]
[201]    0.0    0.00    0.00     128         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base() [201]
                0.00    0.00     128/128         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl() [200]
-----------------------------------------------
                0.00    0.00     128/128         Board::Board(int, int, int, int, int, XColor*) [18]
[202]    0.0    0.00    0.00     128         std::vector<Cell, std::allocator<Cell> >::vector() [202]
                0.00    0.00     128/128         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base() [201]
-----------------------------------------------
                0.00    0.00     127/127         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [94]
[203]    0.0    0.00    0.00     127         std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator*() const [203]
-----------------------------------------------
                0.00    0.00     127/127         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&) [206]
[204]    0.0    0.00    0.00     127         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_M_swap_data(std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl&) [204]
                0.00    0.00     381/381         std::enable_if<std::__and_<std::is_move_constructible<Cell*>, std::is_move_assignable<Cell*> >::value, void>::type std::swap<Cell*>(Cell*&, Cell*&) [178]
-----------------------------------------------
                0.00    0.00     127/127         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&) [206]
[205]    0.0    0.00    0.00     127         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell>&&) [205]
                0.00    0.00     127/254         std::remove_reference<std::allocator<Cell>&>::type&& std::move<std::allocator<Cell>&>(std::allocator<Cell>&) [188]
                0.00    0.00     127/639         std::allocator<Cell>::allocator(std::allocator<Cell> const&) [170]
-----------------------------------------------
                0.00    0.00     127/127         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> >&&) [208]
[206]    0.0    0.00    0.00     127         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&) [206]
                0.00    0.00     127/2942        std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() [150]
                0.00    0.00     127/254         std::remove_reference<std::allocator<Cell>&>::type&& std::move<std::allocator<Cell>&>(std::allocator<Cell>&) [188]
                0.00    0.00     127/127         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell>&&) [205]
                0.00    0.00     127/127         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_M_swap_data(std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl&) [204]
-----------------------------------------------
                0.00    0.00     127/127         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [94]
[207]    0.0    0.00    0.00     127         std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator++() [207]
-----------------------------------------------
                0.00    0.00     127/127         void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >&&) [93]
[208]    0.0    0.00    0.00     127         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> >&&) [208]
                0.00    0.00     127/127         std::remove_reference<std::vector<Cell, std::allocator<Cell> >&>::type&& std::move<std::vector<Cell, std::allocator<Cell> >&>(std::vector<Cell, std::allocator<Cell> >&) [209]
                0.00    0.00     127/127         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&) [206]
-----------------------------------------------
                0.00    0.00     127/127         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> >&&) [208]
[209]    0.0    0.00    0.00     127         std::remove_reference<std::vector<Cell, std::allocator<Cell> >&>::type&& std::move<std::vector<Cell, std::allocator<Cell> >&>(std::vector<Cell, std::allocator<Cell> >&) [209]
-----------------------------------------------
                0.00    0.00     127/127         void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >&&) [93]
[210]    0.0    0.00    0.00     127         std::vector<Cell, std::allocator<Cell> >&& std::forward<std::vector<Cell, std::allocator<Cell> > >(std::remove_reference<std::vector<Cell, std::allocator<Cell> > >::type&) [210]
-----------------------------------------------
                0.00    0.00      36/121         void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [319]
                0.00    0.00      42/121         std::vector<int, std::allocator<int> >::push_back(int&&) [101]
                0.00    0.00      43/121         void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter) [270]
[211]    0.0    0.00    0.00     121         std::remove_reference<int&>::type&& std::move<int&>(int&) [211]
-----------------------------------------------
                0.00    0.00      28/84          __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [244]
                0.00    0.00      56/84          std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [223]
[212]    0.0    0.00    0.00      84         __gnu_cxx::new_allocator<int>::max_size() const [212]
-----------------------------------------------
                0.00    0.00      84/84          int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*) [252]
[213]    0.0    0.00    0.00      84         int* std::__niter_base<int*>(int*) [213]
-----------------------------------------------
                0.00    0.00      70/70          std::vector<int, std::allocator<int> >::at(unsigned long) [215]
[214]    0.0    0.00    0.00      70         std::vector<int, std::allocator<int> >::_M_range_check(unsigned long) const [214]
                0.00    0.00      70/252         std::vector<int, std::allocator<int> >::size() const [189]
-----------------------------------------------
                0.00    0.00      70/70          Faction::init(int) [102]
[215]    0.0    0.00    0.00      70         std::vector<int, std::allocator<int> >::at(unsigned long) [215]
                0.00    0.00      70/70          std::vector<int, std::allocator<int> >::_M_range_check(unsigned long) const [214]
                0.00    0.00      70/70          std::vector<int, std::allocator<int> >::operator[](unsigned long) [216]
-----------------------------------------------
                0.00    0.00      70/70          std::vector<int, std::allocator<int> >::at(unsigned long) [215]
[216]    0.0    0.00    0.00      70         std::vector<int, std::allocator<int> >::operator[](unsigned long) [216]
-----------------------------------------------
                0.00    0.00       7/63          std::vector<int, std::allocator<int> >::~vector() [318]
                0.00    0.00      56/63          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [103]
[217]    0.0    0.00    0.00      63         std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [217]
-----------------------------------------------
                0.00    0.00       7/57          std::vector<int, std::allocator<int> >::begin() [316]
                0.00    0.00       7/57          std::vector<int, std::allocator<int> >::end() [315]
                0.00    0.00      18/57          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [266]
                0.00    0.00      25/57          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator+(long) const [260]
[218]    0.0    0.00    0.00      57         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [218]
-----------------------------------------------
                0.00    0.00      56/56          std::vector<int, std::allocator<int> >::max_size() const [221]
[219]    0.0    0.00    0.00      56         std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [219]
-----------------------------------------------
                0.00    0.00      56/56          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>) [224]
[220]    0.0    0.00    0.00      56         std::move_iterator<int*>::base() const [220]
-----------------------------------------------
                0.00    0.00      56/56          std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [245]
[221]    0.0    0.00    0.00      56         std::vector<int, std::allocator<int> >::max_size() const [221]
                0.00    0.00      56/56          std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [223]
                0.00    0.00      56/56          std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [219]
-----------------------------------------------
                0.00    0.00      56/56          std::move_iterator<int*> std::__make_move_if_noexcept_iterator<int, std::move_iterator<int*> >(int*) [226]
[222]    0.0    0.00    0.00      56         std::move_iterator<int*>::move_iterator(int*) [222]
-----------------------------------------------
                0.00    0.00      56/56          std::vector<int, std::allocator<int> >::max_size() const [221]
[223]    0.0    0.00    0.00      56         std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [223]
                0.00    0.00      56/84          __gnu_cxx::new_allocator<int>::max_size() const [212]
-----------------------------------------------
                0.00    0.00      56/56          int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [256]
[224]    0.0    0.00    0.00      56         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>) [224]
                0.00    0.00      56/56          int* std::__miter_base<int*>(int*) [225]
                0.00    0.00      56/56          std::move_iterator<int*>::base() const [220]
-----------------------------------------------
                0.00    0.00      56/56          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>) [224]
[225]    0.0    0.00    0.00      56         int* std::__miter_base<int*>(int*) [225]
-----------------------------------------------
                0.00    0.00      56/56          int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [255]
[226]    0.0    0.00    0.00      56         std::move_iterator<int*> std::__make_move_if_noexcept_iterator<int, std::move_iterator<int*> >(int*) [226]
                0.00    0.00      56/56          std::move_iterator<int*>::move_iterator(int*) [222]
-----------------------------------------------
                0.00    0.00      54/54          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [266]
[227]    0.0    0.00    0.00      54         int* std::__niter_base<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [227]
                0.00    0.00      54/208         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [190]
-----------------------------------------------
                0.00    0.00       7/49          void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [324]
                0.00    0.00      42/49          void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [319]
[228]    0.0    0.00    0.00      49         bool __gnu_cxx::operator!=<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [228]
                0.00    0.00      98/208         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [190]
-----------------------------------------------
                0.00    0.00      15/45          __gnu_cxx::new_allocator<Move>::allocate(unsigned long, void const*) [279]
                0.00    0.00      30/45          std::allocator_traits<std::allocator<Move> >::max_size(std::allocator<Move> const&) [241]
[229]    0.0    0.00    0.00      45         __gnu_cxx::new_allocator<Move>::max_size() const [229]
-----------------------------------------------
                0.00    0.00      36/36          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::move_backward<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [264]
[230]    0.0    0.00    0.00      36         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__miter_base<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [230]
-----------------------------------------------
                0.00    0.00      35/35          void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [319]
[231]    0.0    0.00    0.00      35         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator++() [231]
-----------------------------------------------
                0.00    0.00      35/35          void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [319]
[232]    0.0    0.00    0.00      35         bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [232]
                0.00    0.00      70/184         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [191]
-----------------------------------------------
                0.00    0.00      35/35          void std::_Destroy<int*>(int*, int*) [235]
[233]    0.0    0.00    0.00      35         void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [233]
-----------------------------------------------
                0.00    0.00       7/35          std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [314]
                0.00    0.00      28/35          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [103]
[234]    0.0    0.00    0.00      35         std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [234]
                0.00    0.00      28/28          std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [248]
-----------------------------------------------
                0.00    0.00      35/35          void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [236]
[235]    0.0    0.00    0.00      35         void std::_Destroy<int*>(int*, int*) [235]
                0.00    0.00      35/35          void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [233]
-----------------------------------------------
                0.00    0.00       7/35          std::vector<int, std::allocator<int> >::~vector() [318]
                0.00    0.00      28/35          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [103]
[236]    0.0    0.00    0.00      35         void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [236]
                0.00    0.00      35/35          void std::_Destroy<int*>(int*, int*) [235]
-----------------------------------------------
                0.00    0.00       1/33          std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&) [38]
                0.00    0.00       2/33          std::vector<Move, std::allocator<Move> >::~vector() [355]
                0.00    0.00      30/33          void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [69]
[237]    0.0    0.00    0.00      33         std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() [237]
-----------------------------------------------
                0.00    0.00      30/30          std::vector<Move, std::allocator<Move> >::max_size() const [239]
[238]    0.0    0.00    0.00      30         std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() const [238]
-----------------------------------------------
                0.00    0.00      30/30          std::vector<Move, std::allocator<Move> >::_M_check_len(unsigned long, char const*) const [280]
[239]    0.0    0.00    0.00      30         std::vector<Move, std::allocator<Move> >::max_size() const [239]
                0.00    0.00      30/30          std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() const [238]
                0.00    0.00      30/30          std::allocator_traits<std::allocator<Move> >::max_size(std::allocator<Move> const&) [241]
-----------------------------------------------
                0.00    0.00      30/30          std::move_iterator<Move*> std::__make_move_if_noexcept_iterator<Move, std::move_iterator<Move*> >(Move*) [242]
[240]    0.0    0.00    0.00      30         std::move_iterator<Move*>::move_iterator(Move*) [240]
-----------------------------------------------
                0.00    0.00      30/30          std::vector<Move, std::allocator<Move> >::max_size() const [239]
[241]    0.0    0.00    0.00      30         std::allocator_traits<std::allocator<Move> >::max_size(std::allocator<Move> const&) [241]
                0.00    0.00      30/45          __gnu_cxx::new_allocator<Move>::max_size() const [229]
-----------------------------------------------
                0.00    0.00      30/30          Move* std::__uninitialized_move_if_noexcept_a<Move*, Move*, std::allocator<Move> >(Move*, Move*, Move*, std::allocator<Move>&) [74]
[242]    0.0    0.00    0.00      30         std::move_iterator<Move*> std::__make_move_if_noexcept_iterator<Move, std::move_iterator<Move*> >(Move*) [242]
                0.00    0.00      30/30          std::move_iterator<Move*>::move_iterator(Move*) [240]
-----------------------------------------------
                0.00    0.00      28/28          std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [248]
[243]    0.0    0.00    0.00      28         __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [243]
-----------------------------------------------
                0.00    0.00      28/28          std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [249]
[244]    0.0    0.00    0.00      28         __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [244]
                0.00    0.00      28/84          __gnu_cxx::new_allocator<int>::max_size() const [212]
-----------------------------------------------
                0.00    0.00      28/28          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [103]
[245]    0.0    0.00    0.00      28         std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [245]
                0.00    0.00     112/252         std::vector<int, std::allocator<int> >::size() const [189]
                0.00    0.00      56/56          std::vector<int, std::allocator<int> >::max_size() const [221]
                0.00    0.00      28/1079        unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [166]
-----------------------------------------------
                0.00    0.00      28/28          int* std::__copy_move_a<true, int*, int*>(int*, int*, int*) [251]
[246]    0.0    0.00    0.00      28         int* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) [246]
-----------------------------------------------
                0.00    0.00      28/28          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [103]
[247]    0.0    0.00    0.00      28         std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [247]
                0.00    0.00      28/28          std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [249]
-----------------------------------------------
                0.00    0.00      28/28          std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [234]
[248]    0.0    0.00    0.00      28         std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [248]
                0.00    0.00      28/28          __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [243]
-----------------------------------------------
                0.00    0.00      28/28          std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [247]
[249]    0.0    0.00    0.00      28         std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [249]
                0.00    0.00      28/28          __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [244]
-----------------------------------------------
                0.00    0.00      28/28          int* std::uninitialized_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [253]
[250]    0.0    0.00    0.00      28         int* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [250]
                0.00    0.00      28/28          int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [256]
-----------------------------------------------
                0.00    0.00      28/28          int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*) [252]
[251]    0.0    0.00    0.00      28         int* std::__copy_move_a<true, int*, int*>(int*, int*, int*) [251]
                0.00    0.00      28/28          int* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) [246]
-----------------------------------------------
                0.00    0.00      28/28          int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [256]
[252]    0.0    0.00    0.00      28         int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*) [252]
                0.00    0.00      84/84          int* std::__niter_base<int*>(int*) [213]
                0.00    0.00      28/28          int* std::__copy_move_a<true, int*, int*>(int*, int*, int*) [251]
-----------------------------------------------
                0.00    0.00      28/28          int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&) [254]
[253]    0.0    0.00    0.00      28         int* std::uninitialized_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [253]
                0.00    0.00      28/28          int* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [250]
-----------------------------------------------
                0.00    0.00      28/28          int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [255]
[254]    0.0    0.00    0.00      28         int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&) [254]
                0.00    0.00      28/28          int* std::uninitialized_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [253]
-----------------------------------------------
                0.00    0.00      28/28          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [103]
[255]    0.0    0.00    0.00      28         int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [255]
                0.00    0.00      56/56          std::move_iterator<int*> std::__make_move_if_noexcept_iterator<int, std::move_iterator<int*> >(int*) [226]
                0.00    0.00      28/28          int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&) [254]
-----------------------------------------------
                0.00    0.00      28/28          int* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [250]
[256]    0.0    0.00    0.00      28         int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [256]
                0.00    0.00      56/56          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>) [224]
                0.00    0.00      28/28          int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*) [252]
-----------------------------------------------
                0.00    0.00      26/26          void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter) [270]
[257]    0.0    0.00    0.00      26         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator--() [257]
-----------------------------------------------
                0.00    0.00      26/26          void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter) [270]
[258]    0.0    0.00    0.00      26         bool __gnu_cxx::__ops::_Val_less_iter::operator()<int, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(int&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [258]
                0.00    0.00      26/184         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [191]
-----------------------------------------------
                0.00    0.00       9/25          __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::allocate(unsigned long, void const*) [291]
                0.00    0.00      16/25          std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size(std::allocator<std::vector<Cell, std::allocator<Cell> > > const&) [276]
[259]    0.0    0.00    0.00      25         __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::max_size() const [259]
-----------------------------------------------
                0.00    0.00      25/25          void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [319]
[260]    0.0    0.00    0.00      25         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator+(long) const [260]
                0.00    0.00      25/57          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [218]
-----------------------------------------------
                0.00    0.00       7/21          void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [324]
                0.00    0.00       7/21          void std::__introsort_loop<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter) [320]
                0.00    0.00       7/21          void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [321]
[261]    0.0    0.00    0.00      21         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [261]
                0.00    0.00      42/208         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [190]
-----------------------------------------------
                0.00    0.00       1/20          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [81]
                0.00    0.00       1/20          std::vector<Cell, std::allocator<Cell> >* std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > >(unsigned long, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >) [86]
                0.00    0.00       2/20          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector() [357]
                0.00    0.00      16/20          void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [92]
[262]    0.0    0.00    0.00      20         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() [262]
-----------------------------------------------
                0.00    0.00      18/18          int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*) [265]
[263]    0.0    0.00    0.00      18         int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*) [263]
-----------------------------------------------
                0.00    0.00      18/18          void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [319]
[264]    0.0    0.00    0.00      18         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::move_backward<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [264]
                0.00    0.00      36/36          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__miter_base<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [230]
                0.00    0.00      18/18          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [266]
-----------------------------------------------
                0.00    0.00      18/18          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [266]
[265]    0.0    0.00    0.00      18         int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*) [265]
                0.00    0.00      18/18          int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*) [263]
-----------------------------------------------
                0.00    0.00      18/18          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::move_backward<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [264]
[266]    0.0    0.00    0.00      18         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [266]
                0.00    0.00      54/54          int* std::__niter_base<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [227]
                0.00    0.00      18/18          int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*) [265]
                0.00    0.00      18/57          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [218]
-----------------------------------------------
                0.00    0.00      17/17          void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [319]
[267]    0.0    0.00    0.00      17         __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter) [267]
-----------------------------------------------
                0.00    0.00      17/17          void std::_Destroy<Move*>(Move*, Move*) [271]
[268]    0.0    0.00    0.00      17         void std::_Destroy_aux<true>::__destroy<Move*>(Move*, Move*) [268]
-----------------------------------------------
                0.00    0.00       2/17          std::_Vector_base<Move, std::allocator<Move> >::~_Vector_base() [350]
                0.00    0.00      15/17          void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [69]
[269]    0.0    0.00    0.00      17         std::_Vector_base<Move, std::allocator<Move> >::_M_deallocate(Move*, unsigned long) [269]
                0.00    0.00      15/15          std::allocator_traits<std::allocator<Move> >::deallocate(std::allocator<Move>&, Move*, unsigned long) [282]
-----------------------------------------------
                0.00    0.00      17/17          void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [319]
[270]    0.0    0.00    0.00      17         void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter) [270]
                0.00    0.00      52/184         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [191]
                0.00    0.00      43/121         std::remove_reference<int&>::type&& std::move<int&>(int&) [211]
                0.00    0.00      26/26          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator--() [257]
                0.00    0.00      26/26          bool __gnu_cxx::__ops::_Val_less_iter::operator()<int, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(int&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [258]
-----------------------------------------------
                0.00    0.00      17/17          void std::_Destroy<Move*, Move>(Move*, Move*, std::allocator<Move>&) [272]
[271]    0.0    0.00    0.00      17         void std::_Destroy<Move*>(Move*, Move*) [271]
                0.00    0.00      17/17          void std::_Destroy_aux<true>::__destroy<Move*>(Move*, Move*) [268]
-----------------------------------------------
                0.00    0.00       2/17          std::vector<Move, std::allocator<Move> >::~vector() [355]
                0.00    0.00      15/17          void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [69]
[272]    0.0    0.00    0.00      17         void std::_Destroy<Move*, Move>(Move*, Move*, std::allocator<Move>&) [272]
                0.00    0.00      17/17          void std::_Destroy<Move*>(Move*, Move*) [271]
-----------------------------------------------
                0.00    0.00      16/16          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size() const [274]
[273]    0.0    0.00    0.00      16         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() const [273]
-----------------------------------------------
                0.00    0.00      16/16          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_check_len(unsigned long, char const*) const [105]
[274]    0.0    0.00    0.00      16         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size() const [274]
                0.00    0.00      16/16          std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size(std::allocator<std::vector<Cell, std::allocator<Cell> > > const&) [276]
                0.00    0.00      16/16          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() const [273]
-----------------------------------------------
                0.00    0.00      16/16          std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> std::__make_move_if_noexcept_iterator<std::vector<Cell, std::allocator<Cell> >, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> >(std::vector<Cell, std::allocator<Cell> >*) [277]
[275]    0.0    0.00    0.00      16         std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::move_iterator(std::vector<Cell, std::allocator<Cell> >*) [275]
-----------------------------------------------
                0.00    0.00      16/16          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size() const [274]
[276]    0.0    0.00    0.00      16         std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size(std::allocator<std::vector<Cell, std::allocator<Cell> > > const&) [276]
                0.00    0.00      16/25          __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::max_size() const [259]
-----------------------------------------------
                0.00    0.00      16/16          std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_move_if_noexcept_a<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [97]
[277]    0.0    0.00    0.00      16         std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> std::__make_move_if_noexcept_iterator<std::vector<Cell, std::allocator<Cell> >, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> >(std::vector<Cell, std::allocator<Cell> >*) [277]
                0.00    0.00      16/16          std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::move_iterator(std::vector<Cell, std::allocator<Cell> >*) [275]
-----------------------------------------------
                0.00    0.00      15/15          std::allocator_traits<std::allocator<Move> >::deallocate(std::allocator<Move>&, Move*, unsigned long) [282]
[278]    0.0    0.00    0.00      15         __gnu_cxx::new_allocator<Move>::deallocate(Move*, unsigned long) [278]
-----------------------------------------------
                0.00    0.00      15/15          std::allocator_traits<std::allocator<Move> >::allocate(std::allocator<Move>&, unsigned long) [283]
[279]    0.0    0.00    0.00      15         __gnu_cxx::new_allocator<Move>::allocate(unsigned long, void const*) [279]
                0.00    0.00      15/45          __gnu_cxx::new_allocator<Move>::max_size() const [229]
-----------------------------------------------
                0.00    0.00      15/15          void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [69]
[280]    0.0    0.00    0.00      15         std::vector<Move, std::allocator<Move> >::_M_check_len(unsigned long, char const*) const [280]
                0.00    0.00      60/1000075     std::vector<Move, std::allocator<Move> >::size() const [123]
                0.00    0.00      30/30          std::vector<Move, std::allocator<Move> >::max_size() const [239]
                0.00    0.00      15/1079        unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [166]
-----------------------------------------------
                0.00    0.00      15/15          void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [69]
[281]    0.0    0.00    0.00      15         std::_Vector_base<Move, std::allocator<Move> >::_M_allocate(unsigned long) [281]
                0.00    0.00      15/15          std::allocator_traits<std::allocator<Move> >::allocate(std::allocator<Move>&, unsigned long) [283]
-----------------------------------------------
                0.00    0.00      15/15          std::_Vector_base<Move, std::allocator<Move> >::_M_deallocate(Move*, unsigned long) [269]
[282]    0.0    0.00    0.00      15         std::allocator_traits<std::allocator<Move> >::deallocate(std::allocator<Move>&, Move*, unsigned long) [282]
                0.00    0.00      15/15          __gnu_cxx::new_allocator<Move>::deallocate(Move*, unsigned long) [278]
-----------------------------------------------
                0.00    0.00      15/15          std::_Vector_base<Move, std::allocator<Move> >::_M_allocate(unsigned long) [281]
[283]    0.0    0.00    0.00      15         std::allocator_traits<std::allocator<Move> >::allocate(std::allocator<Move>&, unsigned long) [283]
                0.00    0.00      15/15          __gnu_cxx::new_allocator<Move>::allocate(unsigned long, void const*) [279]
-----------------------------------------------
                0.00    0.00       4/12          __gnu_cxx::new_allocator<Faction>::allocate(unsigned long, void const*) [330]
                0.00    0.00       8/12          std::allocator_traits<std::allocator<Faction> >::max_size(std::allocator<Faction> const&) [301]
[284]    0.0    0.00    0.00      12         __gnu_cxx::new_allocator<Faction>::max_size() const [284]
-----------------------------------------------
                0.00    0.00      12/12          Faction* std::__copy_move_a2<true, Faction*, Faction*>(Faction*, Faction*, Faction*) [337]
[285]    0.0    0.00    0.00      12         Faction* std::__niter_base<Faction*>(Faction*) [285]
-----------------------------------------------
                0.00    0.00      11/11          void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [288]
[286]    0.0    0.00    0.00      11         void std::_Destroy_aux<false>::__destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [286]
                0.00    0.00     383/383         void std::_Destroy<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*) [177]
                0.00    0.00     383/638         std::vector<Cell, std::allocator<Cell> >* std::__addressof<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >&) [171]
-----------------------------------------------
                0.00    0.00       1/11          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [81]
                0.00    0.00       2/11          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~_Vector_base() [354]
                0.00    0.00       8/11          void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [92]
[287]    0.0    0.00    0.00      11         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [287]
                0.00    0.00       9/9           std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::deallocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, unsigned long) [294]
-----------------------------------------------
                0.00    0.00      11/11          void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [289]
[288]    0.0    0.00    0.00      11         void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [288]
                0.00    0.00      11/11          void std::_Destroy_aux<false>::__destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [286]
-----------------------------------------------
                0.00    0.00       1/11          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [81]
                0.00    0.00       2/11          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector() [357]
                0.00    0.00       8/11          void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [92]
[289]    0.0    0.00    0.00      11         void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [289]
                0.00    0.00      11/11          void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [288]
-----------------------------------------------
                0.00    0.00       9/9           std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::deallocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, unsigned long) [294]
[290]    0.0    0.00    0.00       9         __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [290]
-----------------------------------------------
                0.00    0.00       9/9           std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::allocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, unsigned long) [295]
[291]    0.0    0.00    0.00       9         __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::allocate(unsigned long, void const*) [291]
                0.00    0.00       9/25          __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::max_size() const [259]
-----------------------------------------------
                0.00    0.00       1/9           std::vector<Faction, std::allocator<Faction> >::~vector() [384]
                0.00    0.00       8/9           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [31]
[292]    0.0    0.00    0.00       9         std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() [292]
-----------------------------------------------
                0.00    0.00       1/9           std::vector<Cell, std::allocator<Cell> >* std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > >(unsigned long, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >) [86]
                0.00    0.00       8/9           void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [92]
[293]    0.0    0.00    0.00       9         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate(unsigned long) [293]
                0.00    0.00       9/9           std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::allocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, unsigned long) [295]
-----------------------------------------------
                0.00    0.00       9/9           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [287]
[294]    0.0    0.00    0.00       9         std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::deallocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, unsigned long) [294]
                0.00    0.00       9/9           __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [290]
-----------------------------------------------
                0.00    0.00       9/9           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate(unsigned long) [293]
[295]    0.0    0.00    0.00       9         std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::allocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, unsigned long) [295]
                0.00    0.00       9/9           __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::allocate(unsigned long, void const*) [291]
-----------------------------------------------
                0.00    0.00       9/9           std::enable_if<std::__and_<std::is_move_constructible<Move*>, std::is_move_assignable<Move*> >::value, void>::type std::swap<Move*>(Move*&, Move*&) [50]
[296]    0.0    0.00    0.00       9         std::remove_reference<Move*&>::type&& std::move<Move*&>(Move*&) [296]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Faction, std::allocator<Faction> >::max_size() const [299]
[297]    0.0    0.00    0.00       8         std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() const [297]
-----------------------------------------------
                0.00    0.00       8/8           decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Faction*>(std::move_iterator<Faction*>) [302]
[298]    0.0    0.00    0.00       8         std::move_iterator<Faction*>::base() const [298]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Faction, std::allocator<Faction> >::_M_check_len(unsigned long, char const*) const [104]
[299]    0.0    0.00    0.00       8         std::vector<Faction, std::allocator<Faction> >::max_size() const [299]
                0.00    0.00       8/8           std::allocator_traits<std::allocator<Faction> >::max_size(std::allocator<Faction> const&) [301]
                0.00    0.00       8/8           std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() const [297]
-----------------------------------------------
                0.00    0.00       8/8           std::move_iterator<Faction*> std::__make_move_if_noexcept_iterator<Faction, std::move_iterator<Faction*> >(Faction*) [304]
[300]    0.0    0.00    0.00       8         std::move_iterator<Faction*>::move_iterator(Faction*) [300]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Faction, std::allocator<Faction> >::max_size() const [299]
[301]    0.0    0.00    0.00       8         std::allocator_traits<std::allocator<Faction> >::max_size(std::allocator<Faction> const&) [301]
                0.00    0.00       8/12          __gnu_cxx::new_allocator<Faction>::max_size() const [284]
-----------------------------------------------
                0.00    0.00       8/8           Faction* std::copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [341]
[302]    0.0    0.00    0.00       8         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Faction*>(std::move_iterator<Faction*>) [302]
                0.00    0.00       8/8           Faction* std::__miter_base<Faction*>(Faction*) [303]
                0.00    0.00       8/8           std::move_iterator<Faction*>::base() const [298]
-----------------------------------------------
                0.00    0.00       8/8           decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Faction*>(std::move_iterator<Faction*>) [302]
[303]    0.0    0.00    0.00       8         Faction* std::__miter_base<Faction*>(Faction*) [303]
-----------------------------------------------
                0.00    0.00       8/8           Faction* std::__uninitialized_move_if_noexcept_a<Faction*, Faction*, std::allocator<Faction> >(Faction*, Faction*, Faction*, std::allocator<Faction>&) [340]
[304]    0.0    0.00    0.00       8         std::move_iterator<Faction*> std::__make_move_if_noexcept_iterator<Faction, std::move_iterator<Faction*> >(Faction*) [304]
                0.00    0.00       8/8           std::move_iterator<Faction*>::move_iterator(Faction*) [300]
-----------------------------------------------
                0.00    0.00       7/7           std::allocator<int>::allocator() [309]
[305]    0.0    0.00    0.00       7         __gnu_cxx::new_allocator<int>::new_allocator() [305]
-----------------------------------------------
                0.00    0.00       7/7           std::allocator<int>::~allocator() [310]
[306]    0.0    0.00    0.00       7         __gnu_cxx::new_allocator<int>::~new_allocator() [306]
-----------------------------------------------
                0.00    0.00       7/7           void std::sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [323]
[307]    0.0    0.00    0.00       7         __gnu_cxx::__ops::__iter_less_iter() [307]
-----------------------------------------------
                0.00    0.00       7/7           void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [319]
[308]    0.0    0.00    0.00       7         bool __gnu_cxx::operator==<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [308]
                0.00    0.00      14/208         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [190]
-----------------------------------------------
                0.00    0.00       7/7           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [311]
[309]    0.0    0.00    0.00       7         std::allocator<int>::allocator() [309]
                0.00    0.00       7/7           __gnu_cxx::new_allocator<int>::new_allocator() [305]
-----------------------------------------------
                0.00    0.00       7/7           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [312]
[310]    0.0    0.00    0.00       7         std::allocator<int>::~allocator() [310]
                0.00    0.00       7/7           __gnu_cxx::new_allocator<int>::~new_allocator() [306]
-----------------------------------------------
                0.00    0.00       7/7           std::_Vector_base<int, std::allocator<int> >::_Vector_base() [313]
[311]    0.0    0.00    0.00       7         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [311]
                0.00    0.00       7/7           std::allocator<int>::allocator() [309]
-----------------------------------------------
                0.00    0.00       7/7           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [314]
[312]    0.0    0.00    0.00       7         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [312]
                0.00    0.00       7/7           std::allocator<int>::~allocator() [310]
-----------------------------------------------
                0.00    0.00       7/7           std::vector<int, std::allocator<int> >::vector() [317]
[313]    0.0    0.00    0.00       7         std::_Vector_base<int, std::allocator<int> >::_Vector_base() [313]
                0.00    0.00       7/7           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [311]
-----------------------------------------------
                0.00    0.00       7/7           std::vector<int, std::allocator<int> >::~vector() [318]
[314]    0.0    0.00    0.00       7         std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [314]
                0.00    0.00       7/7           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [312]
                0.00    0.00       7/35          std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [234]
-----------------------------------------------
                0.00    0.00       7/7           Faction::init(int) [102]
[315]    0.0    0.00    0.00       7         std::vector<int, std::allocator<int> >::end() [315]
                0.00    0.00       7/57          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [218]
-----------------------------------------------
                0.00    0.00       7/7           Faction::init(int) [102]
[316]    0.0    0.00    0.00       7         std::vector<int, std::allocator<int> >::begin() [316]
                0.00    0.00       7/57          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [218]
-----------------------------------------------
                0.00    0.00       7/7           Faction::init(int) [102]
[317]    0.0    0.00    0.00       7         std::vector<int, std::allocator<int> >::vector() [317]
                0.00    0.00       7/7           std::_Vector_base<int, std::allocator<int> >::_Vector_base() [313]
-----------------------------------------------
                0.00    0.00       7/7           Faction::init(int) [102]
[318]    0.0    0.00    0.00       7         std::vector<int, std::allocator<int> >::~vector() [318]
                0.00    0.00       7/63          std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [217]
                0.00    0.00       7/35          void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [236]
                0.00    0.00       7/7           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [314]
-----------------------------------------------
                0.00    0.00       7/7           void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [321]
[319]    0.0    0.00    0.00       7         void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [319]
                0.00    0.00      42/49          bool __gnu_cxx::operator!=<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [228]
                0.00    0.00      36/184         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [191]
                0.00    0.00      36/121         std::remove_reference<int&>::type&& std::move<int&>(int&) [211]
                0.00    0.00      35/35          bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [232]
                0.00    0.00      35/35          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator++() [231]
                0.00    0.00      25/25          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator+(long) const [260]
                0.00    0.00      18/18          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::move_backward<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [264]
                0.00    0.00      17/17          __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter) [267]
                0.00    0.00      17/17          void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter) [270]
                0.00    0.00       7/7           bool __gnu_cxx::operator==<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [308]
-----------------------------------------------
                0.00    0.00       7/7           void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [324]
[320]    0.0    0.00    0.00       7         void std::__introsort_loop<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter) [320]
                0.00    0.00       7/21          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [261]
-----------------------------------------------
                0.00    0.00       7/7           void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [324]
[321]    0.0    0.00    0.00       7         void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [321]
                0.00    0.00       7/21          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [261]
                0.00    0.00       7/7           void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [319]
-----------------------------------------------
                0.00    0.00       7/7           void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [324]
[322]    0.0    0.00    0.00       7         std::__lg(long) [322]
-----------------------------------------------
                0.00    0.00       7/7           Faction::init(int) [102]
[323]    0.0    0.00    0.00       7         void std::sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [323]
                0.00    0.00       7/7           __gnu_cxx::__ops::__iter_less_iter() [307]
                0.00    0.00       7/7           void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [324]
-----------------------------------------------
                0.00    0.00       7/7           void std::sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [323]
[324]    0.0    0.00    0.00       7         void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [324]
                0.00    0.00       7/49          bool __gnu_cxx::operator!=<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [228]
                0.00    0.00       7/7           std::__lg(long) [322]
                0.00    0.00       7/21          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [261]
                0.00    0.00       7/7           void std::__introsort_loop<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter) [320]
                0.00    0.00       7/7           void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [321]
-----------------------------------------------
                0.00    0.00       5/5           void std::_Destroy<Faction*>(Faction*, Faction*) [327]
[325]    0.0    0.00    0.00       5         void std::_Destroy_aux<true>::__destroy<Faction*>(Faction*, Faction*) [325]
-----------------------------------------------
                0.00    0.00       1/5           std::_Vector_base<Faction, std::allocator<Faction> >::~_Vector_base() [380]
                0.00    0.00       4/5           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [31]
[326]    0.0    0.00    0.00       5         std::_Vector_base<Faction, std::allocator<Faction> >::_M_deallocate(Faction*, unsigned long) [326]
                0.00    0.00       4/4           std::allocator_traits<std::allocator<Faction> >::deallocate(std::allocator<Faction>&, Faction*, unsigned long) [333]
-----------------------------------------------
                0.00    0.00       5/5           void std::_Destroy<Faction*, Faction>(Faction*, Faction*, std::allocator<Faction>&) [328]
[327]    0.0    0.00    0.00       5         void std::_Destroy<Faction*>(Faction*, Faction*) [327]
                0.00    0.00       5/5           void std::_Destroy_aux<true>::__destroy<Faction*>(Faction*, Faction*) [325]
-----------------------------------------------
                0.00    0.00       1/5           std::vector<Faction, std::allocator<Faction> >::~vector() [384]
                0.00    0.00       4/5           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [31]
[328]    0.0    0.00    0.00       5         void std::_Destroy<Faction*, Faction>(Faction*, Faction*, std::allocator<Faction>&) [328]
                0.00    0.00       5/5           void std::_Destroy<Faction*>(Faction*, Faction*) [327]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator_traits<std::allocator<Faction> >::deallocate(std::allocator<Faction>&, Faction*, unsigned long) [333]
[329]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<Faction>::deallocate(Faction*, unsigned long) [329]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator_traits<std::allocator<Faction> >::allocate(std::allocator<Faction>&, unsigned long) [334]
[330]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<Faction>::allocate(unsigned long, void const*) [330]
                0.00    0.00       4/12          __gnu_cxx::new_allocator<Faction>::max_size() const [284]
-----------------------------------------------
                0.00    0.00       4/4           Faction* std::__copy_move_a<true, Faction*, Faction*>(Faction*, Faction*, Faction*) [336]
[331]    0.0    0.00    0.00       4         Faction* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Faction>(Faction const*, Faction const*, Faction*) [331]
-----------------------------------------------
                0.00    0.00       4/4           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [31]
[332]    0.0    0.00    0.00       4         std::_Vector_base<Faction, std::allocator<Faction> >::_M_allocate(unsigned long) [332]
                0.00    0.00       4/4           std::allocator_traits<std::allocator<Faction> >::allocate(std::allocator<Faction>&, unsigned long) [334]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<Faction, std::allocator<Faction> >::_M_deallocate(Faction*, unsigned long) [326]
[333]    0.0    0.00    0.00       4         std::allocator_traits<std::allocator<Faction> >::deallocate(std::allocator<Faction>&, Faction*, unsigned long) [333]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<Faction>::deallocate(Faction*, unsigned long) [329]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<Faction, std::allocator<Faction> >::_M_allocate(unsigned long) [332]
[334]    0.0    0.00    0.00       4         std::allocator_traits<std::allocator<Faction> >::allocate(std::allocator<Faction>&, unsigned long) [334]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<Faction>::allocate(unsigned long, void const*) [330]
-----------------------------------------------
                0.00    0.00       4/4           Faction* std::uninitialized_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [338]
[335]    0.0    0.00    0.00       4         Faction* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [335]
                0.00    0.00       4/4           Faction* std::copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [341]
-----------------------------------------------
                0.00    0.00       4/4           Faction* std::__copy_move_a2<true, Faction*, Faction*>(Faction*, Faction*, Faction*) [337]
[336]    0.0    0.00    0.00       4         Faction* std::__copy_move_a<true, Faction*, Faction*>(Faction*, Faction*, Faction*) [336]
                0.00    0.00       4/4           Faction* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Faction>(Faction const*, Faction const*, Faction*) [331]
-----------------------------------------------
                0.00    0.00       4/4           Faction* std::copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [341]
[337]    0.0    0.00    0.00       4         Faction* std::__copy_move_a2<true, Faction*, Faction*>(Faction*, Faction*, Faction*) [337]
                0.00    0.00      12/12          Faction* std::__niter_base<Faction*>(Faction*) [285]
                0.00    0.00       4/4           Faction* std::__copy_move_a<true, Faction*, Faction*>(Faction*, Faction*, Faction*) [336]
-----------------------------------------------
                0.00    0.00       4/4           Faction* std::__uninitialized_copy_a<std::move_iterator<Faction*>, Faction*, Faction>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*, std::allocator<Faction>&) [339]
[338]    0.0    0.00    0.00       4         Faction* std::uninitialized_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [338]
                0.00    0.00       4/4           Faction* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [335]
-----------------------------------------------
                0.00    0.00       4/4           Faction* std::__uninitialized_move_if_noexcept_a<Faction*, Faction*, std::allocator<Faction> >(Faction*, Faction*, Faction*, std::allocator<Faction>&) [340]
[339]    0.0    0.00    0.00       4         Faction* std::__uninitialized_copy_a<std::move_iterator<Faction*>, Faction*, Faction>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*, std::allocator<Faction>&) [339]
                0.00    0.00       4/4           Faction* std::uninitialized_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [338]
-----------------------------------------------
                0.00    0.00       4/4           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [31]
[340]    0.0    0.00    0.00       4         Faction* std::__uninitialized_move_if_noexcept_a<Faction*, Faction*, std::allocator<Faction> >(Faction*, Faction*, Faction*, std::allocator<Faction>&) [340]
                0.00    0.00       8/8           std::move_iterator<Faction*> std::__make_move_if_noexcept_iterator<Faction, std::move_iterator<Faction*> >(Faction*) [304]
                0.00    0.00       4/4           Faction* std::__uninitialized_copy_a<std::move_iterator<Faction*>, Faction*, Faction>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*, std::allocator<Faction>&) [339]
-----------------------------------------------
                0.00    0.00       4/4           Faction* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [335]
[341]    0.0    0.00    0.00       4         Faction* std::copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [341]
                0.00    0.00       8/8           decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Faction*>(std::move_iterator<Faction*>) [302]
                0.00    0.00       4/4           Faction* std::__copy_move_a2<true, Faction*, Faction*>(Faction*, Faction*, Faction*) [337]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<Move>::~allocator() [346]
[342]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<Move>::~new_allocator() [342]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::vector<Cell, std::allocator<Cell> > >::allocator() [347]
[343]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::new_allocator() [343]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::vector<Cell, std::allocator<Cell> > >::~allocator() [348]
[344]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::~new_allocator() [344]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::begin() const [368]
                0.00    0.00       1/2           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::end() const [367]
[345]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::__normal_iterator(std::vector<Cell, std::allocator<Cell> > const* const&) [345]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::~_Vector_impl() [349]
[346]    0.0    0.00    0.00       2         std::allocator<Move>::~allocator() [346]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<Move>::~new_allocator() [342]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::_Vector_impl() [351]
[347]    0.0    0.00    0.00       2         std::allocator<std::vector<Cell, std::allocator<Cell> > >::allocator() [347]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::new_allocator() [343]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::~_Vector_impl() [352]
[348]    0.0    0.00    0.00       2         std::allocator<std::vector<Cell, std::allocator<Cell> > >::~allocator() [348]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::~new_allocator() [344]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Move, std::allocator<Move> >::~_Vector_base() [350]
[349]    0.0    0.00    0.00       2         std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::~_Vector_impl() [349]
                0.00    0.00       2/2           std::allocator<Move>::~allocator() [346]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Move, std::allocator<Move> >::~vector() [355]
[350]    0.0    0.00    0.00       2         std::_Vector_base<Move, std::allocator<Move> >::~_Vector_base() [350]
                0.00    0.00       2/2           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::~_Vector_impl() [349]
                0.00    0.00       2/17          std::_Vector_base<Move, std::allocator<Move> >::_M_deallocate(Move*, unsigned long) [269]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_base() [353]
[351]    0.0    0.00    0.00       2         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::_Vector_impl() [351]
                0.00    0.00       2/2           std::allocator<std::vector<Cell, std::allocator<Cell> > >::allocator() [347]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~_Vector_base() [354]
[352]    0.0    0.00    0.00       2         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::~_Vector_impl() [352]
                0.00    0.00       2/2           std::allocator<std::vector<Cell, std::allocator<Cell> > >::~allocator() [348]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::vector() [356]
[353]    0.0    0.00    0.00       2         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_base() [353]
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::_Vector_impl() [351]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector() [357]
[354]    0.0    0.00    0.00       2         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~_Vector_base() [354]
                0.00    0.00       2/11          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [287]
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::~_Vector_impl() [352]
-----------------------------------------------
                0.00    0.00       1/2           Board::Board(int, int, int, int, int, XColor*) [18]
                0.00    0.00       1/2           std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::~priority_queue() [381]
[355]    0.0    0.00    0.00       2         std::vector<Move, std::allocator<Move> >::~vector() [355]
                0.00    0.00       2/33          std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() [237]
                0.00    0.00       2/2           std::_Vector_base<Move, std::allocator<Move> >::~_Vector_base() [350]
                0.00    0.00       2/17          void std::_Destroy<Move*, Move>(Move*, Move*, std::allocator<Move>&) [272]
-----------------------------------------------
                0.00    0.00       2/2           Board::Board(int, int, int, int, int, XColor*) [18]
[356]    0.0    0.00    0.00       2         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::vector() [356]
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_base() [353]
-----------------------------------------------
                0.00    0.00       1/2           Board::Board(int, int, int, int, int, XColor*) [18]
                0.00    0.00       1/2           Board::~Board() [361]
[357]    0.0    0.00    0.00       2         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector() [357]
                0.00    0.00       2/20          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() [262]
                0.00    0.00       2/11          void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [289]
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~_Vector_base() [354]
-----------------------------------------------
                0.00    0.00       1/2           std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&) [38]
                0.00    0.00       1/2           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl(std::allocator<Move>&&) [375]
[358]    0.0    0.00    0.00       2         std::remove_reference<std::allocator<Move>&>::type&& std::move<std::allocator<Move>&>(std::allocator<Move>&) [358]
-----------------------------------------------
                0.00    0.00       1/2           std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [32]
                0.00    0.00       1/2           std::vector<Move, std::allocator<Move> >::vector(std::vector<Move, std::allocator<Move> >&&) [33]
[359]    0.0    0.00    0.00       2         std::remove_reference<std::vector<Move, std::allocator<Move> >&>::type&& std::move<std::vector<Move, std::allocator<Move> >&>(std::vector<Move, std::allocator<Move> >&) [359]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[360]    0.0    0.00    0.00       1         VirtualRootWindowOfScreen(Screen*) [360]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[361]    0.0    0.00    0.00       1         Board::~Board() [361]
                0.00    0.00       1/1           std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::~priority_queue() [381]
                0.00    0.00       1/2           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector() [357]
                0.00    0.00       1/1           std::vector<Faction, std::allocator<Faction> >::~vector() [384]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Move>::allocator() [371]
[362]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Move>::new_allocator() [362]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Move>::allocator(std::allocator<Move> const&) [370]
[363]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Move>::new_allocator(__gnu_cxx::new_allocator<Move> const&) [363]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Faction>::allocator() [372]
[364]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Faction>::new_allocator() [364]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Faction>::~allocator() [373]
[365]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Faction>::~new_allocator() [365]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [81]
[366]    0.0    0.00    0.00       1         __gnu_cxx::__alloc_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_S_propagate_on_copy_assign() [366]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [81]
[367]    0.0    0.00    0.00       1         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::end() const [367]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::__normal_iterator(std::vector<Cell, std::allocator<Cell> > const* const&) [345]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [81]
[368]    0.0    0.00    0.00       1         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::begin() const [368]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::__normal_iterator(std::vector<Cell, std::allocator<Cell> > const* const&) [345]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [81]
[369]    0.0    0.00    0.00       1         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::capacity() const [369]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl(std::allocator<Move>&&) [375]
[370]    0.0    0.00    0.00       1         std::allocator<Move>::allocator(std::allocator<Move> const&) [370]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Move>::new_allocator(__gnu_cxx::new_allocator<Move> const&) [363]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl() [374]
[371]    0.0    0.00    0.00       1         std::allocator<Move>::allocator() [371]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Move>::new_allocator() [362]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::_Vector_impl() [377]
[372]    0.0    0.00    0.00       1         std::allocator<Faction>::allocator() [372]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Faction>::new_allocator() [364]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::~_Vector_impl() [378]
[373]    0.0    0.00    0.00       1         std::allocator<Faction>::~allocator() [373]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Faction>::~new_allocator() [365]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_base() [376]
[374]    0.0    0.00    0.00       1         std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl() [374]
                0.00    0.00       1/1           std::allocator<Move>::allocator() [371]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&) [38]
[375]    0.0    0.00    0.00       1         std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl(std::allocator<Move>&&) [375]
                0.00    0.00       1/2           std::remove_reference<std::allocator<Move>&>::type&& std::move<std::allocator<Move>&>(std::allocator<Move>&) [358]
                0.00    0.00       1/1           std::allocator<Move>::allocator(std::allocator<Move> const&) [370]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Move, std::allocator<Move> >::vector() [382]
[376]    0.0    0.00    0.00       1         std::_Vector_base<Move, std::allocator<Move> >::_Vector_base() [376]
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl() [374]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_base() [379]
[377]    0.0    0.00    0.00       1         std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::_Vector_impl() [377]
                0.00    0.00       1/1           std::allocator<Faction>::allocator() [372]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::~_Vector_base() [380]
[378]    0.0    0.00    0.00       1         std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::~_Vector_impl() [378]
                0.00    0.00       1/1           std::allocator<Faction>::~allocator() [373]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Faction, std::allocator<Faction> >::vector() [383]
[379]    0.0    0.00    0.00       1         std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_base() [379]
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::_Vector_impl() [377]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Faction, std::allocator<Faction> >::~vector() [384]
[380]    0.0    0.00    0.00       1         std::_Vector_base<Faction, std::allocator<Faction> >::~_Vector_base() [380]
                0.00    0.00       1/5           std::_Vector_base<Faction, std::allocator<Faction> >::_M_deallocate(Faction*, unsigned long) [326]
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::~_Vector_impl() [378]
-----------------------------------------------
                0.00    0.00       1/1           Board::~Board() [361]
[381]    0.0    0.00    0.00       1         std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::~priority_queue() [381]
                0.00    0.00       1/2           std::vector<Move, std::allocator<Move> >::~vector() [355]
-----------------------------------------------
                0.00    0.00       1/1           Board::Board(int, int, int, int, int, XColor*) [18]
[382]    0.0    0.00    0.00       1         std::vector<Move, std::allocator<Move> >::vector() [382]
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_base() [376]
-----------------------------------------------
                0.00    0.00       1/1           Board::Board(int, int, int, int, int, XColor*) [18]
[383]    0.0    0.00    0.00       1         std::vector<Faction, std::allocator<Faction> >::vector() [383]
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_base() [379]
-----------------------------------------------
                0.00    0.00       1/1           Board::~Board() [361]
[384]    0.0    0.00    0.00       1         std::vector<Faction, std::allocator<Faction> >::~vector() [384]
                0.00    0.00       1/9           std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() [292]
                0.00    0.00       1/5           void std::_Destroy<Faction*, Faction>(Faction*, Faction*, std::allocator<Faction>&) [328]
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::~_Vector_base() [380]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2017 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [360] VirtualRootWindowOfScreen(Screen*) [14] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const [26] std::vector<Move, std::allocator<Move> >::push_back(Move&&)
  [36] compareMove::operator()(Move, Move) [368] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::begin() const [382] std::vector<Move, std::allocator<Move> >::vector()
 [132] Cell::init(int)       [369] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::capacity() const [33] std::vector<Move, std::allocator<Move> >::vector(std::vector<Move, std::allocator<Move> >&&)
  [41] Cell::Cell()          [274] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size() const [355] std::vector<Move, std::allocator<Move> >::~vector()
 [148] Cell::Cell(int, int)  [245] std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [28] void std::vector<Faction, std::allocator<Faction> >::emplace_back<>()
  [47] Move::Move(int, int, int, int) [214] std::vector<int, std::allocator<int> >::_M_range_check(unsigned long) const [31] void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>()
  [60] Board::init()         [189] std::vector<int, std::allocator<int> >::size() const [25] std::vector<Faction, std::allocator<Faction> >::at(unsigned long)
   [2] Board::step(int)      [221] std::vector<int, std::allocator<int> >::max_size() const [383] std::vector<Faction, std::allocator<Faction> >::vector()
  [53] Board::setCell(int, int, int, int) [199] std::allocator<Cell>::allocator() [384] std::vector<Faction, std::allocator<Faction> >::~vector()
  [61] Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&) [170] std::allocator<Cell>::allocator(std::allocator<Cell> const&) [119] std::vector<Faction, std::allocator<Faction> >::operator[](unsigned long)
   [7] Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&, int, int) [168] std::allocator<Cell>::~allocator() [92] void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&)
  [18] Board::Board(int, int, int, int, int, XColor*) [370] std::allocator<Move>::allocator(std::allocator<Move> const&) [86] std::vector<Cell, std::allocator<Cell> >* std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > >(unsigned long, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >)
 [361] Board::~Board()       [371] std::allocator<Move>::allocator() [8] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long)
 [125] Faction::getAccuracy() [346] std::allocator<Move>::~allocator() [80] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::push_back(std::vector<Cell, std::allocator<Cell> > const&)
 [126] Faction::getStrength() [372] std::allocator<Faction>::allocator() [356] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::vector()
 [102] Faction::init(int)    [373] std::allocator<Faction>::~allocator() [357] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector()
 [127] Faction::getArmor()   [347] std::allocator<std::vector<Cell, std::allocator<Cell> > >::allocator() [81] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&)
  [48] Faction::getSpeed()   [348] std::allocator<std::vector<Cell, std::allocator<Cell> > >::~allocator() [21] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator[](unsigned long)
 [134] Faction::getHealth()  [309] std::allocator<int>::allocator() [100] void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&)
 [160] __gnu_cxx::new_allocator<Cell>::deallocate(Cell*, unsigned long) [310] std::allocator<int>::~allocator() [103] void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&)
 [161] __gnu_cxx::new_allocator<Cell>::allocate(unsigned long, void const*) [331] Faction* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Faction>(Faction const*, Faction const*, Faction*) [215] std::vector<int, std::allocator<int> >::at(unsigned long)
  [89] void __gnu_cxx::new_allocator<Cell>::construct<Cell, Cell const&>(Cell*, Cell const&) [246] int* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) [315] std::vector<int, std::allocator<int> >::end()
 [169] __gnu_cxx::new_allocator<Cell>::new_allocator(__gnu_cxx::new_allocator<Cell> const&) [286] void std::_Destroy_aux<false>::__destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [316] std::vector<int, std::allocator<int> >::begin()
 [196] __gnu_cxx::new_allocator<Cell>::new_allocator() [156] void std::_Destroy_aux<true>::__destroy<Cell*>(Cell*, Cell*) [101] std::vector<int, std::allocator<int> >::push_back(int&&)
 [167] __gnu_cxx::new_allocator<Cell>::~new_allocator() [268] void std::_Destroy_aux<true>::__destroy<Move*>(Move*, Move*) [317] std::vector<int, std::allocator<int> >::vector()
 [278] __gnu_cxx::new_allocator<Move>::deallocate(Move*, unsigned long) [325] void std::_Destroy_aux<true>::__destroy<Faction*>(Faction*, Faction*) [318] std::vector<int, std::allocator<int> >::~vector()
 [121] void __gnu_cxx::new_allocator<Move>::destroy<Move>(Move*) [233] void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [216] std::vector<int, std::allocator<int> >::operator[](unsigned long)
 [279] __gnu_cxx::new_allocator<Move>::allocate(unsigned long, void const*) [162] std::_Vector_base<Cell, std::allocator<Cell> >::_M_allocate(unsigned long) [64] void std::_Construct<Cell, Cell const&>(Cell*, Cell const&)
  [39] void __gnu_cxx::new_allocator<Move>::construct<Move, Move>(Move*, Move&&) [204] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_M_swap_data(std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl&) [75] void std::_Construct<Cell, Cell>(Cell*, Cell&&)
 [362] __gnu_cxx::new_allocator<Move>::new_allocator() [184] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell> const&) [70] void std::_Construct<Move, Move>(Move*, Move&&)
 [363] __gnu_cxx::new_allocator<Move>::new_allocator(__gnu_cxx::new_allocator<Move> const&) [200] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl() [84] void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&)
 [342] __gnu_cxx::new_allocator<Move>::~new_allocator() [205] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell>&&) [93] void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >&&)
 [329] __gnu_cxx::new_allocator<Faction>::deallocate(Faction*, unsigned long) [173] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::~_Vector_impl() [5] void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>)
 [330] __gnu_cxx::new_allocator<Faction>::allocate(unsigned long, void const*) [157] std::_Vector_base<Cell, std::allocator<Cell> >::_M_deallocate(Cell*, unsigned long) [130] Cell* std::__addressof<Cell>(Cell&)
 [106] void __gnu_cxx::new_allocator<Faction>::construct<Faction>(Faction*) [185] std::_Vector_base<Cell, std::allocator<Cell> >::_M_create_storage(unsigned long) [144] Move* std::__addressof<Move>(Move&)
 [364] __gnu_cxx::new_allocator<Faction>::new_allocator() [150] std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() [171] std::vector<Cell, std::allocator<Cell> >* std::__addressof<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >&)
 [365] __gnu_cxx::new_allocator<Faction>::~new_allocator() [206] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&) [109] void std::__make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>)
 [290] __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [186] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(unsigned long, std::allocator<Cell> const&) [23] void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>)
 [291] __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::allocate(unsigned long, void const*) [201] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base() [230] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__miter_base<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  [82] void __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [174] std::_Vector_base<Cell, std::allocator<Cell> >::~_Vector_base() [302] decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Faction*>(std::move_iterator<Faction*>)
 [343] __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::new_allocator() [281] std::_Vector_base<Move, std::allocator<Move> >::_M_allocate(unsigned long) [303] Faction* std::__miter_base<Faction*>(Faction*)
 [344] __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::~new_allocator() [51] std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_M_swap_data(std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl&) [224] decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>)
 [243] __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [374] std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl() [225] int* std::__miter_base<int*>(int*)
 [244] __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [375] std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl(std::allocator<Move>&&) [285] Faction* std::__niter_base<Faction*>(Faction*)
  [98] void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [349] std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::~_Vector_impl() [213] int* std::__niter_base<int*>(int*)
 [305] __gnu_cxx::new_allocator<int>::new_allocator() [269] std::_Vector_base<Move, std::allocator<Move> >::_M_deallocate(Move*, unsigned long) [227] int* std::__niter_base<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
 [306] __gnu_cxx::new_allocator<int>::~new_allocator() [237] std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() [6] void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>)
 [181] __gnu_cxx::__alloc_traits<std::allocator<Cell> >::_S_select_on_copy(std::allocator<Cell> const&) [38] std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&) [336] Faction* std::__copy_move_a<true, Faction*, Faction*>(Faction*, Faction*, Faction*)
 [366] __gnu_cxx::__alloc_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_S_propagate_on_copy_assign() [376] std::_Vector_base<Move, std::allocator<Move> >::_Vector_base() [251] int* std::__copy_move_a<true, int*, int*>(int*, int*, int*)
  [19] __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move* const&) [350] std::_Vector_base<Move, std::allocator<Move> >::~_Vector_base() [264] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::move_backward<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
 [122] __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator--() [332] std::_Vector_base<Faction, std::allocator<Faction> >::_M_allocate(unsigned long) [337] Faction* std::__copy_move_a2<true, Faction*, Faction*>(Faction*, Faction*, Faction*)
 [172] __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::__normal_iterator(Cell const* const&) [377] std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::_Vector_impl() [252] int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*)
 [136] __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator++() [378] std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::~_Vector_impl() [319] void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter)
 [117] __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move const* const&) [326] std::_Vector_base<Faction, std::allocator<Faction> >::_M_deallocate(Faction*, unsigned long) [320] void std::__introsort_loop<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter)
 [345] __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::__normal_iterator(std::vector<Cell, std::allocator<Cell> > const* const&) [292] std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() [66] Cell* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*)
 [197] __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator++() [379] std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_base() [87] std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*)
 [218] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [380] std::_Vector_base<Faction, std::allocator<Faction> >::~_Vector_base() [77] Cell* std::uninitialized_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*)
 [257] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator--() [293] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate(unsigned long) [72] Move* std::uninitialized_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*)
 [231] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator++() [351] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::_Vector_impl() [338] Faction* std::uninitialized_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*)
  [43] __gnu_cxx::__ops::_Iter_comp_val<compareMove>::_Iter_comp_val(compareMove) [352] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::~_Vector_impl() [95] std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*)
  [30] bool __gnu_cxx::__ops::_Iter_comp_val<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move&) [287] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [253] int* std::uninitialized_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)
 [120] __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::_Iter_comp_iter(compareMove) [262] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() [265] int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*)
  [15] bool __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >) [353] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_base() [321] void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter)
  [57] __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(__gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [354] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~_Vector_base() [67] Cell* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, Cell>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, std::allocator<Cell>&)
  [27] __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(compareMove) [247] std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [88] std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
 [267] __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter) [311] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [78] Cell* std::__uninitialized_copy_a<std::move_iterator<Cell*>, Cell*, Cell>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*, std::allocator<Cell>&)
  [49] __gnu_cxx::__ops::_Iter_comp_iter<compareMove> __gnu_cxx::__ops::__iter_comp_iter<compareMove>(compareMove) [312] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [73] Move* std::__uninitialized_copy_a<std::move_iterator<Move*>, Move*, Move>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*, std::allocator<Move>&)
 [307] __gnu_cxx::__ops::__iter_less_iter() [234] std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [339] Faction* std::__uninitialized_copy_a<std::move_iterator<Faction*>, Faction*, Faction>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*, std::allocator<Faction>&)
 [308] bool __gnu_cxx::operator==<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [217] std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [96] std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
  [37] __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&) [313] std::_Vector_base<int, std::allocator<int> >::_Vector_base() [254] int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&)
 [261] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [314] std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [266] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
 [135] bool __gnu_cxx::operator!=<Cell const*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&) [153] std::move_iterator<Cell*>::move_iterator(Cell*) [270] void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter)
 [195] bool __gnu_cxx::operator!=<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&) [146] std::move_iterator<Cell*>::operator++() [155] std::move_iterator<Cell*> std::__make_move_if_noexcept_iterator<Cell, std::move_iterator<Cell*> >(Cell*)
 [228] bool __gnu_cxx::operator!=<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [240] std::move_iterator<Move*>::move_iterator(Move*) [242] std::move_iterator<Move*> std::__make_move_if_noexcept_iterator<Move, std::move_iterator<Move*> >(Move*)
 [149] __gnu_cxx::new_allocator<Cell>::max_size() const [143] std::move_iterator<Move*>::operator++() [304] std::move_iterator<Faction*> std::__make_move_if_noexcept_iterator<Faction, std::move_iterator<Faction*> >(Faction*)
 [229] __gnu_cxx::new_allocator<Move>::max_size() const [300] std::move_iterator<Faction*>::move_iterator(Faction*) [277] std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> std::__make_move_if_noexcept_iterator<std::vector<Cell, std::allocator<Cell> >, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> >(std::vector<Cell, std::allocator<Cell> >*)
 [284] __gnu_cxx::new_allocator<Faction>::max_size() const [275] std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::move_iterator(std::vector<Cell, std::allocator<Cell> >*) [226] std::move_iterator<int*> std::__make_move_if_noexcept_iterator<int, std::move_iterator<int*> >(int*)
 [259] __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::max_size() const [207] std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator++() [79] Cell* std::__uninitialized_move_if_noexcept_a<Cell*, Cell*, std::allocator<Cell> >(Cell*, Cell*, Cell*, std::allocator<Cell>&)
 [212] __gnu_cxx::new_allocator<int>::max_size() const [222] std::move_iterator<int*>::move_iterator(int*) [74] Move* std::__uninitialized_move_if_noexcept_a<Move*, Move*, std::allocator<Move> >(Move*, Move*, Move*, std::allocator<Move>&)
  [42] __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::base() const [3] std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop() [340] Faction* std::__uninitialized_move_if_noexcept_a<Faction*, Faction*, std::allocator<Faction> >(Faction*, Faction*, Faction*, std::allocator<Faction>&)
  [20] __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [11] std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [97] std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_move_if_noexcept_a<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
  [59] __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator-(long) const [32] std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [255] int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
  [10] __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator+(long) const [381] std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::~priority_queue() [166] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
 [129] __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::base() const [163] std::allocator_traits<std::allocator<Cell> >::deallocate(std::allocator<Cell>&, Cell*, unsigned long) [322] std::__lg(long)
 [137] __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator*() const [187] std::allocator_traits<std::allocator<Cell> >::select_on_container_copy_construction(std::allocator<Cell> const&) [341] Faction* std::copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*)
 [118] __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::operator*() const [164] std::allocator_traits<std::allocator<Cell> >::allocate(std::allocator<Cell>&, unsigned long) [256] int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)
 [180] __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::base() const [154] std::allocator_traits<std::allocator<Cell> >::max_size(std::allocator<Cell> const&) [24] std::remove_reference<Move&>::type&& std::move<Move&>(Move&)
 [198] __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator*() const [90] void std::allocator_traits<std::allocator<Cell> >::construct<Cell, Cell const&>(std::allocator<Cell>&, Cell*, Cell const&) [165] std::remove_reference<Cell*&>::type&& std::move<Cell*&>(Cell*&)
 [190] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [282] std::allocator_traits<std::allocator<Move> >::deallocate(std::allocator<Move>&, Move*, unsigned long) [296] std::remove_reference<Move*&>::type&& std::move<Move*&>(Move*&)
 [191] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [55] void std::allocator_traits<std::allocator<Move> >::destroy<Move>(std::allocator<Move>&, Move*) [188] std::remove_reference<std::allocator<Cell>&>::type&& std::move<std::allocator<Cell>&>(std::allocator<Cell>&)
 [260] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator+(long) const [283] std::allocator_traits<std::allocator<Move> >::allocate(std::allocator<Move>&, unsigned long) [358] std::remove_reference<std::allocator<Move>&>::type&& std::move<std::allocator<Move>&>(std::allocator<Move>&)
 [258] bool __gnu_cxx::__ops::_Val_less_iter::operator()<int, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(int&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [241] std::allocator_traits<std::allocator<Move> >::max_size(std::allocator<Move> const&) [209] std::remove_reference<std::vector<Cell, std::allocator<Cell> >&>::type&& std::move<std::vector<Cell, std::allocator<Cell> >&>(std::vector<Cell, std::allocator<Cell> >&)
 [232] bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [40] void std::allocator_traits<std::allocator<Move> >::construct<Move, Move>(std::allocator<Move>&, Move*, Move&&) [359] std::remove_reference<std::vector<Move, std::allocator<Move> >&>::type&& std::move<std::vector<Move, std::allocator<Move> >&>(std::vector<Move, std::allocator<Move> >&)
 [151] std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() const [333] std::allocator_traits<std::allocator<Faction> >::deallocate(std::allocator<Faction>&, Faction*, unsigned long) [211] std::remove_reference<int&>::type&& std::move<int&>(int&)
 [238] std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() const [334] std::allocator_traits<std::allocator<Faction> >::allocate(std::allocator<Faction>&, unsigned long) [323] void std::sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
 [297] std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() const [301] std::allocator_traits<std::allocator<Faction> >::max_size(std::allocator<Faction> const&) [178] std::enable_if<std::__and_<std::is_move_constructible<Cell*>, std::is_move_assignable<Cell*> >::value, void>::type std::swap<Cell*>(Cell*&, Cell*&)
 [273] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() const [107] void std::allocator_traits<std::allocator<Faction> >::construct<Faction>(std::allocator<Faction>&, Faction*) [50] std::enable_if<std::__and_<std::is_move_constructible<Move*>, std::is_move_assignable<Move*> >::value, void>::type std::swap<Move*>(Move*&, Move*&)
 [219] std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [294] std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::deallocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, unsigned long) [324] void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter)
 [131] std::move_iterator<Cell*>::base() const [295] std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::allocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, unsigned long) [147] Cell&& std::forward<Cell>(std::remove_reference<Cell>::type&)
 [145] std::move_iterator<Cell*>::operator*() const [276] std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size(std::allocator<std::vector<Cell, std::allocator<Cell> > > const&) [116] Move&& std::forward<Move>(std::remove_reference<Move>::type&)
 [133] std::move_iterator<Move*>::base() const [83] void std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [128] Cell const& std::forward<Cell const&>(std::remove_reference<Cell const&>::type&)
 [142] std::move_iterator<Move*>::operator*() const [248] std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [176] std::vector<Cell, std::allocator<Cell> > const& std::forward<std::vector<Cell, std::allocator<Cell> > const&>(std::remove_reference<std::vector<Cell, std::allocator<Cell> > const&>::type&)
 [298] std::move_iterator<Faction*>::base() const [249] std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [210] std::vector<Cell, std::allocator<Cell> >&& std::forward<std::vector<Cell, std::allocator<Cell> > >(std::remove_reference<std::vector<Cell, std::allocator<Cell> > >::type&)
 [179] std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::base() const [223] std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [192] int&& std::forward<int>(std::remove_reference<int>::type&)
 [203] std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator*() const [99] void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [158] void std::_Destroy<Cell*>(Cell*, Cell*)
 [220] std::move_iterator<int*>::base() const [263] int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*) [159] void std::_Destroy<Cell*, Cell>(Cell*, Cell*, std::allocator<Cell>&)
  [44] std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::top() const [65] Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [271] void std::_Destroy<Move*>(Move*, Move*)
 [124] std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::size() const [85] std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [272] void std::_Destroy<Move*, Move>(Move*, Move*, std::allocator<Move>&)
  [91] std::vector<Cell, std::allocator<Cell> >::_M_check_len(unsigned long, char const*) const [76] Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [327] void std::_Destroy<Faction*>(Faction*, Faction*)
  [13] std::vector<Cell, std::allocator<Cell> >::_M_range_check(unsigned long) const [71] Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [328] void std::_Destroy<Faction*, Faction>(Faction*, Faction*, std::allocator<Faction>&)
 [182] std::vector<Cell, std::allocator<Cell> >::end() const [94] std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [288] void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*)
  [17] std::vector<Cell, std::allocator<Cell> >::size() const [335] Faction* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [289] void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
 [183] std::vector<Cell, std::allocator<Cell> >::begin() const [250] int* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [235] void std::_Destroy<int*>(int*, int*)
 [152] std::vector<Cell, std::allocator<Cell> >::max_size() const [68] void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [236] void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
 [280] std::vector<Move, std::allocator<Move> >::_M_check_len(unsigned long, char const*) const [9] std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [177] void std::_Destroy<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*)
 [123] std::vector<Move, std::allocator<Move> >::size() const [62] std::vector<Cell, std::allocator<Cell> >::push_back(Cell const&) [4] void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove)
  [45] std::vector<Move, std::allocator<Move> >::begin() const [63] std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [108] void std::make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove)
  [46] std::vector<Move, std::allocator<Move> >::front() const [202] std::vector<Cell, std::allocator<Cell> >::vector() [16] void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove)
 [239] std::vector<Move, std::allocator<Move> >::max_size() const [208] std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> >&&) [138] bool std::operator==<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&)
 [104] std::vector<Faction, std::allocator<Faction> >::_M_check_len(unsigned long, char const*) const [175] std::vector<Cell, std::allocator<Cell> >::~vector() [140] bool std::operator==<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&)
  [34] std::vector<Faction, std::allocator<Faction> >::_M_range_check(unsigned long) const [22] std::vector<Cell, std::allocator<Cell> >::operator[](unsigned long) [193] bool std::operator==<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&)
  [52] std::vector<Faction, std::allocator<Faction> >::size() const [29] void std::vector<Move, std::allocator<Move> >::emplace_back<Move>(Move&&) [139] bool std::operator!=<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&)
 [299] std::vector<Faction, std::allocator<Faction> >::max_size() const [69] void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [141] bool std::operator!=<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&)
 [105] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_check_len(unsigned long, char const*) const [58] std::vector<Move, std::allocator<Move> >::end() [194] bool std::operator!=<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&)
  [12] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_range_check(unsigned long) const [35] std::vector<Move, std::allocator<Move> >::begin() [54] operator new(unsigned long, void*)
 [367] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::end() const [56] std::vector<Move, std::allocator<Move> >::pop_back() [1] main
