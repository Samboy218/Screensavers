Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 27.62      0.29     0.29     5000     0.06     0.19  Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&)
 13.34      0.43     0.14 51310574     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::operator[](unsigned long)
 12.86      0.57     0.14 51334499     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long)
  9.53      0.67     0.10 51310574     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::at(unsigned long)
  8.57      0.76     0.09 51310574     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::_M_range_check(unsigned long) const
  7.62      0.84     0.08 51334499     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator[](unsigned long)
  6.19      0.90     0.07 51339875     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::size() const
  3.81      0.94     0.04 51334499     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_range_check(unsigned long) const
  3.33      0.98     0.04 51358351     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const
  2.86      1.01     0.03     7977     0.00     0.01  std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop()
  1.91      1.03     0.02        4     5.00     5.00  void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>()
  0.95      1.04     0.01    18765     0.00     0.00  std::vector<Move, std::allocator<Move> >::end()
  0.95      1.05     0.01     7977     0.00     0.00  void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>)
  0.48      1.05     0.01        7     0.71     3.57  void std::vector<Faction, std::allocator<Faction> >::emplace_back<>()
  0.00      1.05     0.00   387689     0.00     0.00  __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move* const&)
  0.00      1.05     0.00   374090     0.00     0.00  __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const
  0.00      1.05     0.00   339372     0.00     0.00  __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator+(long) const
  0.00      1.05     0.00   169334     0.00     0.00  std::remove_reference<Move&>::type&& std::move<Move&>(Move&)
  0.00      1.05     0.00    94259     0.00     0.00  compareMove::operator()(Move, Move)
  0.00      1.05     0.00    75321     0.00     0.00  bool __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >)
  0.00      1.05     0.00    63800     0.00     0.00  Cell::Cell()
  0.00      1.05     0.00    62290     0.00     0.00  operator new(unsigned long, void*)
  0.00      1.05     0.00    53484     0.00     0.00  __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::base() const
  0.00      1.05     0.00    41984     0.00     0.00  Cell const& std::forward<Cell const&>(std::remove_reference<Cell const&>::type&)
  0.00      1.05     0.00    41472     0.00     0.00  __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::base() const
  0.00      1.05     0.00    36736     0.00     0.00  Cell* std::__addressof<Cell>(Cell&)
  0.00      1.05     0.00    36469     0.00     0.00  Move&& std::forward<Move>(std::remove_reference<Move>::type&)
  0.00      1.05     0.00    34560     0.00     0.00  std::move_iterator<Cell*>::base() const
  0.00      1.05     0.00    26742     0.00     0.00  __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&)
  0.00      1.05     0.00    22596     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::size() const
  0.00      1.05     0.00    20736     0.00     0.00  bool __gnu_cxx::operator!=<Cell const*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&)
  0.00      1.05     0.00    20480     0.00     0.00  __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator++()
  0.00      1.05     0.00    20480     0.00     0.00  __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator*() const
  0.00      1.05     0.00    20480     0.00     0.00  void std::_Construct<Cell, Cell const&>(Cell*, Cell const&)
  0.00      1.05     0.00    19755     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::_M_range_check(unsigned long) const
  0.00      1.05     0.00    19755     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::at(unsigned long)
  0.00      1.05     0.00    19755     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::operator[](unsigned long)
  0.00      1.05     0.00    18938     0.00     0.00  bool __gnu_cxx::__ops::_Iter_comp_val<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move&)
  0.00      1.05     0.00    18765     0.00     0.00  std::vector<Move, std::allocator<Move> >::begin()
  0.00      1.05     0.00    18764     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_val<compareMove>::_Iter_comp_val(compareMove)
  0.00      1.05     0.00    18764     0.00     0.00  void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>)
  0.00      1.05     0.00    17280     0.00     0.00  bool std::operator==<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&)
  0.00      1.05     0.00    17280     0.00     0.00  bool std::operator!=<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&)
  0.00      1.05     0.00    16256     0.00     0.00  std::move_iterator<Cell*>::operator*() const
  0.00      1.05     0.00    16256     0.00     0.00  std::move_iterator<Cell*>::operator++()
  0.00      1.05     0.00    16256     0.00     0.00  void std::_Construct<Cell, Cell>(Cell*, Cell&&)
  0.00      1.05     0.00    16256     0.00     0.00  Cell&& std::forward<Cell>(std::remove_reference<Cell>::type&)
  0.00      1.05     0.00    13052     0.00     0.00  Cell::init(int)
  0.00      1.05     0.00    10787     0.00     0.00  Move::Move(int, int, int, int)
  0.00      1.05     0.00    10787     0.00     0.00  Faction::getSpeed()
  0.00      1.05     0.00    10787     0.00     0.00  void __gnu_cxx::new_allocator<Move>::construct<Move, Move>(Move*, Move&&)
  0.00      1.05     0.00    10787     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(compareMove)
  0.00      1.05     0.00    10787     0.00     0.00  __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator-(long) const
  0.00      1.05     0.00    10787     0.00     0.00  std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&)
  0.00      1.05     0.00    10787     0.00     0.00  void std::allocator_traits<std::allocator<Move> >::construct<Move, Move>(std::allocator<Move>&, Move*, Move&&)
  0.00      1.05     0.00    10787     0.00     0.00  void std::vector<Move, std::allocator<Move> >::emplace_back<Move>(Move&&)
  0.00      1.05     0.00    10787     0.00     0.00  std::vector<Move, std::allocator<Move> >::push_back(Move&&)
  0.00      1.05     0.00    10787     0.00     0.00  void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove)
  0.00      1.05     0.00    10240     0.00     0.00  Cell::Cell(int, int)
  0.00      1.05     0.00    10240     0.00     0.00  void __gnu_cxx::new_allocator<Cell>::construct<Cell, Cell const&>(Cell*, Cell const&)
  0.00      1.05     0.00    10240     0.00     0.00  void std::allocator_traits<std::allocator<Cell> >::construct<Cell, Cell const&>(std::allocator<Cell>&, Cell*, Cell const&)
  0.00      1.05     0.00    10240     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::push_back(Cell const&)
  0.00      1.05     0.00     8216     0.00     0.00  std::move_iterator<Move*>::base() const
  0.00      1.05     0.00     8044     0.00     0.00  std::vector<Move, std::allocator<Move> >::size() const
  0.00      1.05     0.00     7981     0.00     0.00  __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move const* const&)
  0.00      1.05     0.00     7981     0.00     0.00  __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::operator*() const
  0.00      1.05     0.00     7981     0.00     0.00  std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::top() const
  0.00      1.05     0.00     7981     0.00     0.00  std::vector<Move, std::allocator<Move> >::begin() const
  0.00      1.05     0.00     7981     0.00     0.00  std::vector<Move, std::allocator<Move> >::front() const
  0.00      1.05     0.00     7979     0.00     0.01  Board::step(int)
  0.00      1.05     0.00     7979     0.00     0.00  std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::size() const
  0.00      1.05     0.00     7978     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::_Iter_comp_iter(compareMove)
  0.00      1.05     0.00     7978     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<compareMove> __gnu_cxx::__ops::__iter_comp_iter<compareMove>(compareMove)
  0.00      1.05     0.00     7977     0.00     0.00  void __gnu_cxx::new_allocator<Move>::destroy<Move>(Move*)
  0.00      1.05     0.00     7977     0.00     0.00  __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator--()
  0.00      1.05     0.00     7977     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(__gnu_cxx::__ops::_Iter_comp_iter<compareMove>)
  0.00      1.05     0.00     7977     0.00     0.00  void std::allocator_traits<std::allocator<Move> >::destroy<Move>(std::allocator<Move>&, Move*)
  0.00      1.05     0.00     7977     0.00     0.00  std::vector<Move, std::allocator<Move> >::pop_back()
  0.00      1.05     0.00     7977     0.00     0.00  void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>)
  0.00      1.05     0.00     7977     0.00     0.00  void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove)
  0.00      1.05     0.00     4108     0.00     0.00  bool std::operator==<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&)
  0.00      1.05     0.00     4108     0.00     0.00  bool std::operator!=<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&)
  0.00      1.05     0.00     4095     0.00     0.00  std::move_iterator<Move*>::operator*() const
  0.00      1.05     0.00     4095     0.00     0.00  std::move_iterator<Move*>::operator++()
  0.00      1.05     0.00     4095     0.00     0.00  void std::_Construct<Move, Move>(Move*, Move&&)
  0.00      1.05     0.00     4095     0.00     0.00  Move* std::__addressof<Move>(Move&)
  0.00      1.05     0.00     3328     0.00     0.00  __gnu_cxx::new_allocator<Cell>::max_size() const
  0.00      1.05     0.00     2979     0.00     0.00  Faction::getAccuracy()
  0.00      1.05     0.00     2979     0.00     0.00  Faction::getStrength()
  0.00      1.05     0.00     2942     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator()
  0.00      1.05     0.00     2812     0.00     0.00  Board::setCell(int, int, int, int)
  0.00      1.05     0.00     2812     0.00     0.00  Faction::getHealth()
  0.00      1.05     0.00     2304     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() const
  0.00      1.05     0.00     2048     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::max_size() const
  0.00      1.05     0.00     2048     0.00     0.00  std::move_iterator<Cell*>::move_iterator(Cell*)
  0.00      1.05     0.00     2048     0.00     0.00  std::allocator_traits<std::allocator<Cell> >::max_size(std::allocator<Cell> const&)
  0.00      1.05     0.00     2048     0.00     0.00  std::move_iterator<Cell*> std::__make_move_if_noexcept_iterator<Cell, std::move_iterator<Cell*> >(Cell*)
  0.00      1.05     0.00     1535     0.00     0.00  void std::_Destroy_aux<true>::__destroy<Cell*>(Cell*, Cell*)
  0.00      1.05     0.00     1535     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_M_deallocate(Cell*, unsigned long)
  0.00      1.05     0.00     1535     0.00     0.00  void std::_Destroy<Cell*>(Cell*, Cell*)
  0.00      1.05     0.00     1535     0.00     0.00  void std::_Destroy<Cell*, Cell>(Cell*, Cell*, std::allocator<Cell>&)
  0.00      1.05     0.00     1280     0.00     0.00  __gnu_cxx::new_allocator<Cell>::deallocate(Cell*, unsigned long)
  0.00      1.05     0.00     1280     0.00     0.00  __gnu_cxx::new_allocator<Cell>::allocate(unsigned long, void const*)
  0.00      1.05     0.00     1280     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_M_allocate(unsigned long)
  0.00      1.05     0.00     1280     0.00     0.00  std::allocator_traits<std::allocator<Cell> >::deallocate(std::allocator<Cell>&, Cell*, unsigned long)
  0.00      1.05     0.00     1280     0.00     0.00  std::allocator_traits<std::allocator<Cell> >::allocate(std::allocator<Cell>&, unsigned long)
  0.00      1.05     0.00     1143     0.00     0.00  std::remove_reference<Cell*&>::type&& std::move<Cell*&>(Cell*&)
  0.00      1.05     0.00     1077     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      1.05     0.00     1024     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::_M_check_len(unsigned long, char const*) const
  0.00      1.05     0.00     1024     0.00     0.00  Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*)
  0.00      1.05     0.00     1024     0.00     0.00  void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&)
  0.00      1.05     0.00     1024     0.00     0.00  Cell* std::uninitialized_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*)
  0.00      1.05     0.00     1024     0.00     0.00  Cell* std::__uninitialized_copy_a<std::move_iterator<Cell*>, Cell*, Cell>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*, std::allocator<Cell>&)
  0.00      1.05     0.00     1024     0.00     0.00  Cell* std::__uninitialized_move_if_noexcept_a<Cell*, Cell*, std::allocator<Cell> >(Cell*, Cell*, Cell*, std::allocator<Cell>&)
  0.00      1.05     0.00      767     0.00     0.00  __gnu_cxx::new_allocator<Cell>::~new_allocator()
  0.00      1.05     0.00      767     0.00     0.00  std::allocator<Cell>::~allocator()
  0.00      1.05     0.00      639     0.00     0.00  __gnu_cxx::new_allocator<Cell>::new_allocator(__gnu_cxx::new_allocator<Cell> const&)
  0.00      1.05     0.00      639     0.00     0.00  std::allocator<Cell>::allocator(std::allocator<Cell> const&)
  0.00      1.05     0.00      638     0.00     0.00  std::vector<Cell, std::allocator<Cell> >* std::__addressof<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >&)
  0.00      1.05     0.00      512     0.00     0.00  __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::__normal_iterator(Cell const* const&)
  0.00      1.05     0.00      511     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::~_Vector_impl()
  0.00      1.05     0.00      511     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::~_Vector_base()
  0.00      1.05     0.00      511     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::~vector()
  0.00      1.05     0.00      392     0.00     0.00  std::vector<Cell, std::allocator<Cell> > const& std::forward<std::vector<Cell, std::allocator<Cell> > const&>(std::remove_reference<std::vector<Cell, std::allocator<Cell> > const&>::type&)
  0.00      1.05     0.00      383     0.00     0.00  void std::_Destroy<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*)
  0.00      1.05     0.00      381     0.00     0.00  std::enable_if<std::__and_<std::is_move_constructible<Cell*>, std::is_move_assignable<Cell*> >::value, void>::type std::swap<Cell*>(Cell*&, Cell*&)
  0.00      1.05     0.00      270     0.00     0.00  std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::base() const
  0.00      1.05     0.00      258     0.00     0.00  __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::base() const
  0.00      1.05     0.00      256     0.00     0.00  __gnu_cxx::__alloc_traits<std::allocator<Cell> >::_S_select_on_copy(std::allocator<Cell> const&)
  0.00      1.05     0.00      256     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::end() const
  0.00      1.05     0.00      256     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::begin() const
  0.00      1.05     0.00      256     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell> const&)
  0.00      1.05     0.00      256     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_M_create_storage(unsigned long)
  0.00      1.05     0.00      256     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(unsigned long, std::allocator<Cell> const&)
  0.00      1.05     0.00      256     0.00     0.00  std::allocator_traits<std::allocator<Cell> >::select_on_container_copy_construction(std::allocator<Cell> const&)
  0.00      1.05     0.00      256     0.00     0.00  Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*)
  0.00      1.05     0.00      256     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&)
  0.00      1.05     0.00      256     0.00     0.00  Cell* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*)
  0.00      1.05     0.00      256     0.00     0.00  Cell* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, Cell>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, std::allocator<Cell>&)
  0.00      1.05     0.00      254     0.00     0.00  std::remove_reference<std::allocator<Cell>&>::type&& std::move<std::allocator<Cell>&>(std::allocator<Cell>&)
  0.00      1.05     0.00      252     0.00     0.00  std::vector<int, std::allocator<int> >::size() const
  0.00      1.05     0.00      199     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
  0.00      1.05     0.00      191     0.00     0.00  Faction::getArmor()
  0.00      1.05     0.00      184     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const
  0.00      1.05     0.00      154     0.00     0.00  int&& std::forward<int>(std::remove_reference<int>::type&)
  0.00      1.05     0.00      135     0.00     0.00  bool std::operator==<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&)
  0.00      1.05     0.00      135     0.00     0.00  bool std::operator!=<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&)
  0.00      1.05     0.00      129     0.00     0.00  bool __gnu_cxx::operator!=<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&)
  0.00      1.05     0.00      128     0.00     0.00  __gnu_cxx::new_allocator<Cell>::new_allocator()
  0.00      1.05     0.00      128     0.00     0.00  void __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&)
  0.00      1.05     0.00      128     0.00     0.00  __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator++()
  0.00      1.05     0.00      128     0.00     0.00  __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator*() const
  0.00      1.05     0.00      128     0.00     0.00  std::allocator<Cell>::allocator()
  0.00      1.05     0.00      128     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl()
  0.00      1.05     0.00      128     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base()
  0.00      1.05     0.00      128     0.00     0.00  void std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&)
  0.00      1.05     0.00      128     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::vector()
  0.00      1.05     0.00      128     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::push_back(std::vector<Cell, std::allocator<Cell> > const&)
  0.00      1.05     0.00      128     0.00     0.00  void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&)
  0.00      1.05     0.00      127     0.00     0.00  std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator*() const
  0.00      1.05     0.00      127     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_M_swap_data(std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl&)
  0.00      1.05     0.00      127     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell>&&)
  0.00      1.05     0.00      127     0.00     0.00  std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&)
  0.00      1.05     0.00      127     0.00     0.00  std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator++()
  0.00      1.05     0.00      127     0.00     0.00  std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> >&&)
  0.00      1.05     0.00      127     0.00     0.00  void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >&&)
  0.00      1.05     0.00      127     0.00     0.00  std::remove_reference<std::vector<Cell, std::allocator<Cell> >&>::type&& std::move<std::vector<Cell, std::allocator<Cell> >&>(std::vector<Cell, std::allocator<Cell> >&)
  0.00      1.05     0.00      127     0.00     0.00  std::vector<Cell, std::allocator<Cell> >&& std::forward<std::vector<Cell, std::allocator<Cell> > >(std::remove_reference<std::vector<Cell, std::allocator<Cell> > >::type&)
  0.00      1.05     0.00      120     0.00     0.00  std::remove_reference<int&>::type&& std::move<int&>(int&)
  0.00      1.05     0.00       84     0.00     0.00  __gnu_cxx::new_allocator<int>::max_size() const
  0.00      1.05     0.00       84     0.00     0.00  int* std::__niter_base<int*>(int*)
  0.00      1.05     0.00       70     0.00     0.00  std::vector<int, std::allocator<int> >::_M_range_check(unsigned long) const
  0.00      1.05     0.00       70     0.00     0.00  std::vector<int, std::allocator<int> >::at(unsigned long)
  0.00      1.05     0.00       70     0.00     0.00  std::vector<int, std::allocator<int> >::operator[](unsigned long)
  0.00      1.05     0.00       63     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
  0.00      1.05     0.00       56     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
  0.00      1.05     0.00       56     0.00     0.00  std::move_iterator<int*>::base() const
  0.00      1.05     0.00       56     0.00     0.00  std::vector<int, std::allocator<int> >::max_size() const
  0.00      1.05     0.00       56     0.00     0.00  std::move_iterator<int*>::move_iterator(int*)
  0.00      1.05     0.00       56     0.00     0.00  std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
  0.00      1.05     0.00       56     0.00     0.00  decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>)
  0.00      1.05     0.00       56     0.00     0.00  int* std::__miter_base<int*>(int*)
  0.00      1.05     0.00       56     0.00     0.00  std::move_iterator<int*> std::__make_move_if_noexcept_iterator<int, std::move_iterator<int*> >(int*)
  0.00      1.05     0.00       51     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
  0.00      1.05     0.00       49     0.00     0.00  bool __gnu_cxx::operator!=<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
  0.00      1.05     0.00       45     0.00     0.00  int* std::__niter_base<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  0.00      1.05     0.00       42     0.00     0.00  void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&)
  0.00      1.05     0.00       42     0.00     0.00  void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&)
  0.00      1.05     0.00       42     0.00     0.00  void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&)
  0.00      1.05     0.00       42     0.00     0.00  std::vector<int, std::allocator<int> >::push_back(int&&)
  0.00      1.05     0.00       39     0.00     0.00  __gnu_cxx::new_allocator<Move>::max_size() const
  0.00      1.05     0.00       35     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator++()
  0.00      1.05     0.00       35     0.00     0.00  bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const
  0.00      1.05     0.00       35     0.00     0.00  void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
  0.00      1.05     0.00       35     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
  0.00      1.05     0.00       35     0.00     0.00  void std::_Destroy<int*>(int*, int*)
  0.00      1.05     0.00       35     0.00     0.00  void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
  0.00      1.05     0.00       30     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__miter_base<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  0.00      1.05     0.00       29     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator()
  0.00      1.05     0.00       28     0.00     0.00  __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
  0.00      1.05     0.00       28     0.00     0.00  __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
  0.00      1.05     0.00       28     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator--()
  0.00      1.05     0.00       28     0.00     0.00  bool __gnu_cxx::__ops::_Val_less_iter::operator()<int, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(int&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const
  0.00      1.05     0.00       28     0.00     0.00  std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
  0.00      1.05     0.00       28     0.00     0.00  int* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
  0.00      1.05     0.00       28     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
  0.00      1.05     0.00       28     0.00     0.00  std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long)
  0.00      1.05     0.00       28     0.00     0.00  std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long)
  0.00      1.05     0.00       28     0.00     0.00  int* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)
  0.00      1.05     0.00       28     0.00     0.00  void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&)
  0.00      1.05     0.00       28     0.00     0.00  int* std::__copy_move_a<true, int*, int*>(int*, int*, int*)
  0.00      1.05     0.00       28     0.00     0.00  int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*)
  0.00      1.05     0.00       28     0.00     0.00  int* std::uninitialized_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)
  0.00      1.05     0.00       28     0.00     0.00  int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&)
  0.00      1.05     0.00       28     0.00     0.00  int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
  0.00      1.05     0.00       28     0.00     0.00  int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)
  0.00      1.05     0.00       26     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() const
  0.00      1.05     0.00       26     0.00     0.00  std::vector<Move, std::allocator<Move> >::max_size() const
  0.00      1.05     0.00       26     0.00     0.00  std::move_iterator<Move*>::move_iterator(Move*)
  0.00      1.05     0.00       26     0.00     0.00  std::allocator_traits<std::allocator<Move> >::max_size(std::allocator<Move> const&)
  0.00      1.05     0.00       26     0.00     0.00  std::move_iterator<Move*> std::__make_move_if_noexcept_iterator<Move, std::move_iterator<Move*> >(Move*)
  0.00      1.05     0.00       25     0.00     0.00  __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::max_size() const
  0.00      1.05     0.00       22     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator+(long) const
  0.00      1.05     0.00       21     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
  0.00      1.05     0.00       20     0.00     0.00  __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter)
  0.00      1.05     0.00       20     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator()
  0.00      1.05     0.00       20     0.00     0.00  void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter)
  0.00      1.05     0.00       16     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() const
  0.00      1.05     0.00       16     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size() const
  0.00      1.05     0.00       16     0.00     0.00  std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::move_iterator(std::vector<Cell, std::allocator<Cell> >*)
  0.00      1.05     0.00       16     0.00     0.00  std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size(std::allocator<std::vector<Cell, std::allocator<Cell> > > const&)
  0.00      1.05     0.00       16     0.00     0.00  std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> std::__make_move_if_noexcept_iterator<std::vector<Cell, std::allocator<Cell> >, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> >(std::vector<Cell, std::allocator<Cell> >*)
  0.00      1.05     0.00       15     0.00     0.00  void std::_Destroy_aux<true>::__destroy<Move*>(Move*, Move*)
  0.00      1.05     0.00       15     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_M_deallocate(Move*, unsigned long)
  0.00      1.05     0.00       15     0.00     0.00  int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*)
  0.00      1.05     0.00       15     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::move_backward<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  0.00      1.05     0.00       15     0.00     0.00  int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*)
  0.00      1.05     0.00       15     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  0.00      1.05     0.00       15     0.00     0.00  void std::_Destroy<Move*>(Move*, Move*)
  0.00      1.05     0.00       15     0.00     0.00  void std::_Destroy<Move*, Move>(Move*, Move*, std::allocator<Move>&)
  0.00      1.05     0.00       13     0.00     0.00  __gnu_cxx::new_allocator<Move>::deallocate(Move*, unsigned long)
  0.00      1.05     0.00       13     0.00     0.00  __gnu_cxx::new_allocator<Move>::allocate(unsigned long, void const*)
  0.00      1.05     0.00       13     0.00     0.00  std::vector<Move, std::allocator<Move> >::_M_check_len(unsigned long, char const*) const
  0.00      1.05     0.00       13     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_M_allocate(unsigned long)
  0.00      1.05     0.00       13     0.00     0.00  std::allocator_traits<std::allocator<Move> >::deallocate(std::allocator<Move>&, Move*, unsigned long)
  0.00      1.05     0.00       13     0.00     0.00  std::allocator_traits<std::allocator<Move> >::allocate(std::allocator<Move>&, unsigned long)
  0.00      1.05     0.00       13     0.00     0.00  Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*)
  0.00      1.05     0.00       13     0.00     0.00  void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&)
  0.00      1.05     0.00       13     0.00     0.00  Move* std::uninitialized_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*)
  0.00      1.05     0.00       13     0.00     0.00  Move* std::__uninitialized_copy_a<std::move_iterator<Move*>, Move*, Move>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*, std::allocator<Move>&)
  0.00      1.05     0.00       13     0.00     0.00  Move* std::__uninitialized_move_if_noexcept_a<Move*, Move*, std::allocator<Move> >(Move*, Move*, Move*, std::allocator<Move>&)
  0.00      1.05     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<Faction>::max_size() const
  0.00      1.05     0.00       12     0.00     0.00  Faction* std::__niter_base<Faction*>(Faction*)
  0.00      1.05     0.00       11     0.00     0.00  void std::_Destroy_aux<false>::__destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*)
  0.00      1.05     0.00       11     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long)
  0.00      1.05     0.00       11     0.00     0.00  void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*)
  0.00      1.05     0.00       11     0.00     0.00  void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
  0.00      1.05     0.00        9     0.00     0.00  __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long)
  0.00      1.05     0.00        9     0.00     0.00  __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::allocate(unsigned long, void const*)
  0.00      1.05     0.00        9     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator()
  0.00      1.05     0.00        9     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate(unsigned long)
  0.00      1.05     0.00        9     0.00     0.00  std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::deallocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, unsigned long)
  0.00      1.05     0.00        9     0.00     0.00  std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::allocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, unsigned long)
  0.00      1.05     0.00        9     0.00     0.00  std::remove_reference<Move*&>::type&& std::move<Move*&>(Move*&)
  0.00      1.05     0.00        8     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() const
  0.00      1.05     0.00        8     0.00     0.00  std::move_iterator<Faction*>::base() const
  0.00      1.05     0.00        8     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::max_size() const
  0.00      1.05     0.00        8     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_check_len(unsigned long, char const*) const
  0.00      1.05     0.00        8     0.00     0.00  std::move_iterator<Faction*>::move_iterator(Faction*)
  0.00      1.05     0.00        8     0.00     0.00  std::allocator_traits<std::allocator<Faction> >::max_size(std::allocator<Faction> const&)
  0.00      1.05     0.00        8     0.00     0.00  std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*)
  0.00      1.05     0.00        8     0.00     0.00  void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&)
  0.00      1.05     0.00        8     0.00     0.00  decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Faction*>(std::move_iterator<Faction*>)
  0.00      1.05     0.00        8     0.00     0.00  Faction* std::__miter_base<Faction*>(Faction*)
  0.00      1.05     0.00        8     0.00     0.00  std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*)
  0.00      1.05     0.00        8     0.00     0.00  std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
  0.00      1.05     0.00        8     0.00     0.00  std::move_iterator<Faction*> std::__make_move_if_noexcept_iterator<Faction, std::move_iterator<Faction*> >(Faction*)
  0.00      1.05     0.00        8     0.00     0.00  std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_move_if_noexcept_a<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
  0.00      1.05     0.00        7     0.00     0.00  Faction::init(int)
  0.00      1.05     0.00        7     0.00     0.00  void __gnu_cxx::new_allocator<Faction>::construct<Faction>(Faction*)
  0.00      1.05     0.00        7     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator()
  0.00      1.05     0.00        7     0.00     0.00  __gnu_cxx::new_allocator<int>::~new_allocator()
  0.00      1.05     0.00        7     0.00     0.00  __gnu_cxx::__ops::__iter_less_iter()
  0.00      1.05     0.00        7     0.00     0.00  bool __gnu_cxx::operator==<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
  0.00      1.05     0.00        7     0.00     0.00  std::allocator<int>::allocator()
  0.00      1.05     0.00        7     0.00     0.00  std::allocator<int>::~allocator()
  0.00      1.05     0.00        7     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl()
  0.00      1.05     0.00        7     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
  0.00      1.05     0.00        7     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_base()
  0.00      1.05     0.00        7     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
  0.00      1.05     0.00        7     0.00     0.00  void std::allocator_traits<std::allocator<Faction> >::construct<Faction>(std::allocator<Faction>&, Faction*)
  0.00      1.05     0.00        7     0.00     0.00  std::vector<int, std::allocator<int> >::end()
  0.00      1.05     0.00        7     0.00     0.00  std::vector<int, std::allocator<int> >::begin()
  0.00      1.05     0.00        7     0.00     0.00  std::vector<int, std::allocator<int> >::vector()
  0.00      1.05     0.00        7     0.00     0.00  std::vector<int, std::allocator<int> >::~vector()
  0.00      1.05     0.00        7     0.00     0.00  void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      1.05     0.00        7     0.00     0.00  void std::__introsort_loop<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      1.05     0.00        7     0.00     0.00  void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      1.05     0.00        7     0.00     0.00  std::__lg(long)
  0.00      1.05     0.00        7     0.00     0.00  void std::sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  0.00      1.05     0.00        7     0.00     0.00  void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      1.05     0.00        5     0.00     0.00  void std::_Destroy_aux<true>::__destroy<Faction*>(Faction*, Faction*)
  0.00      1.05     0.00        5     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::_M_deallocate(Faction*, unsigned long)
  0.00      1.05     0.00        5     0.00     0.00  void std::_Destroy<Faction*>(Faction*, Faction*)
  0.00      1.05     0.00        5     0.00     0.00  void std::_Destroy<Faction*, Faction>(Faction*, Faction*, std::allocator<Faction>&)
  0.00      1.05     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<Faction>::deallocate(Faction*, unsigned long)
  0.00      1.05     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<Faction>::allocate(unsigned long, void const*)
  0.00      1.05     0.00        4     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::_M_check_len(unsigned long, char const*) const
  0.00      1.05     0.00        4     0.00     0.00  Faction* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Faction>(Faction const*, Faction const*, Faction*)
  0.00      1.05     0.00        4     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::_M_allocate(unsigned long)
  0.00      1.05     0.00        4     0.00     0.00  std::allocator_traits<std::allocator<Faction> >::deallocate(std::allocator<Faction>&, Faction*, unsigned long)
  0.00      1.05     0.00        4     0.00     0.00  std::allocator_traits<std::allocator<Faction> >::allocate(std::allocator<Faction>&, unsigned long)
  0.00      1.05     0.00        4     0.00     0.00  Faction* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*)
  0.00      1.05     0.00        4     0.00     0.00  Faction* std::__copy_move_a<true, Faction*, Faction*>(Faction*, Faction*, Faction*)
  0.00      1.05     0.00        4     0.00     0.00  Faction* std::__copy_move_a2<true, Faction*, Faction*>(Faction*, Faction*, Faction*)
  0.00      1.05     0.00        4     0.00     0.00  Faction* std::uninitialized_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*)
  0.00      1.05     0.00        4     0.00     0.00  Faction* std::__uninitialized_copy_a<std::move_iterator<Faction*>, Faction*, Faction>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*, std::allocator<Faction>&)
  0.00      1.05     0.00        4     0.00     0.00  Faction* std::__uninitialized_move_if_noexcept_a<Faction*, Faction*, std::allocator<Faction> >(Faction*, Faction*, Faction*, std::allocator<Faction>&)
  0.00      1.05     0.00        4     0.00     0.00  Faction* std::copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*)
  0.00      1.05     0.00        3     0.00     0.00  std::enable_if<std::__and_<std::is_move_constructible<Move*>, std::is_move_assignable<Move*> >::value, void>::type std::swap<Move*>(Move*&, Move*&)
  0.00      1.05     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<Move>::~new_allocator()
  0.00      1.05     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::new_allocator()
  0.00      1.05     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::~new_allocator()
  0.00      1.05     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::__normal_iterator(std::vector<Cell, std::allocator<Cell> > const* const&)
  0.00      1.05     0.00        2     0.00     0.00  std::allocator<Move>::~allocator()
  0.00      1.05     0.00        2     0.00     0.00  std::allocator<std::vector<Cell, std::allocator<Cell> > >::allocator()
  0.00      1.05     0.00        2     0.00     0.00  std::allocator<std::vector<Cell, std::allocator<Cell> > >::~allocator()
  0.00      1.05     0.00        2     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::~_Vector_impl()
  0.00      1.05     0.00        2     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::~_Vector_base()
  0.00      1.05     0.00        2     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::_Vector_impl()
  0.00      1.05     0.00        2     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::~_Vector_impl()
  0.00      1.05     0.00        2     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_base()
  0.00      1.05     0.00        2     0.00     0.00  std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~_Vector_base()
  0.00      1.05     0.00        2     0.00     0.00  std::vector<Move, std::allocator<Move> >::~vector()
  0.00      1.05     0.00        2     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::vector()
  0.00      1.05     0.00        2     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector()
  0.00      1.05     0.00        2     0.00     0.00  std::remove_reference<std::allocator<Move>&>::type&& std::move<std::allocator<Move>&>(std::allocator<Move>&)
  0.00      1.05     0.00        2     0.00     0.00  std::remove_reference<std::vector<Move, std::allocator<Move> >&>::type&& std::move<std::vector<Move, std::allocator<Move> >&>(std::vector<Move, std::allocator<Move> >&)
  0.00      1.05     0.00        1     0.00     0.00  VirtualRootWindowOfScreen(Screen*)
  0.00      1.05     0.00        1     0.00     0.15  Board::init()
  0.00      1.05     0.00        1     0.00    25.01  Board::Board(int, int, int, int, int, XColor*)
  0.00      1.05     0.00        1     0.00     0.00  Board::~Board()
  0.00      1.05     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Move>::new_allocator()
  0.00      1.05     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Move>::new_allocator(__gnu_cxx::new_allocator<Move> const&)
  0.00      1.05     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Faction>::new_allocator()
  0.00      1.05     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Faction>::~new_allocator()
  0.00      1.05     0.00        1     0.00     0.00  __gnu_cxx::__alloc_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_S_propagate_on_copy_assign()
  0.00      1.05     0.00        1     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::end() const
  0.00      1.05     0.00        1     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::begin() const
  0.00      1.05     0.00        1     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::capacity() const
  0.00      1.05     0.00        1     0.00     0.00  std::allocator<Move>::allocator(std::allocator<Move> const&)
  0.00      1.05     0.00        1     0.00     0.00  std::allocator<Move>::allocator()
  0.00      1.05     0.00        1     0.00     0.00  std::allocator<Faction>::allocator()
  0.00      1.05     0.00        1     0.00     0.00  std::allocator<Faction>::~allocator()
  0.00      1.05     0.00        1     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_M_swap_data(std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl&)
  0.00      1.05     0.00        1     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl()
  0.00      1.05     0.00        1     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl(std::allocator<Move>&&)
  0.00      1.05     0.00        1     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&)
  0.00      1.05     0.00        1     0.00     0.00  std::_Vector_base<Move, std::allocator<Move> >::_Vector_base()
  0.00      1.05     0.00        1     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::_Vector_impl()
  0.00      1.05     0.00        1     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::~_Vector_impl()
  0.00      1.05     0.00        1     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_base()
  0.00      1.05     0.00        1     0.00     0.00  std::_Vector_base<Faction, std::allocator<Faction> >::~_Vector_base()
  0.00      1.05     0.00        1     0.00     0.00  std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&)
  0.00      1.05     0.00        1     0.00     0.00  std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::~priority_queue()
  0.00      1.05     0.00        1     0.00     0.00  std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*)
  0.00      1.05     0.00        1     0.00     0.00  std::vector<Move, std::allocator<Move> >::vector()
  0.00      1.05     0.00        1     0.00     0.00  std::vector<Move, std::allocator<Move> >::vector(std::vector<Move, std::allocator<Move> >&&)
  0.00      1.05     0.00        1     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::vector()
  0.00      1.05     0.00        1     0.00     0.00  std::vector<Faction, std::allocator<Faction> >::~vector()
  0.00      1.05     0.00        1     0.00     0.00  std::vector<Cell, std::allocator<Cell> >* std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > >(unsigned long, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >)
  0.00      1.05     0.00        1     0.00     0.00  std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&)
  0.00      1.05     0.00        1     0.00     0.00  void std::__make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>)
  0.00      1.05     0.00        1     0.00     0.00  std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*)
  0.00      1.05     0.00        1     0.00     0.00  std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
  0.00      1.05     0.00        1     0.00     0.00  void std::make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2017 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.95% of 1.05 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.00    1.05                 main [1]
                0.29    0.68    5000/5000        Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&) [2]
                0.00    0.05    7979/7979        Board::step(int) [10]
                0.00    0.03       1/1           Board::Board(int, int, int, int, int, XColor*) [13]
                0.00    0.00       1/1           Board::init() [22]
                0.00    0.00       1/1           VirtualRootWindowOfScreen(Screen*) [354]
                0.00    0.00       1/1           Board::~Board() [355]
-----------------------------------------------
                0.29    0.68    5000/5000        main [1]
[2]     92.7    0.29    0.68    5000         Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&) [2]
                0.10    0.29 51200000/51310574     std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [3]
                0.13    0.15 51200000/51334499     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long) [4]
-----------------------------------------------
                0.00    0.00    8436/51310574     Board::setCell(int, int, int, int) [21]
                0.00    0.00   10240/51310574     Board::init() [22]
                0.00    0.00   91898/51310574     Board::step(int) [10]
                0.10    0.29 51200000/51310574     Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&) [2]
[3]     37.6    0.10    0.30 51310574         std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [3]
                0.09    0.06 51310574/51310574     std::vector<Cell, std::allocator<Cell> >::_M_range_check(unsigned long) const [5]
                0.14    0.00 51310574/51310574     std::vector<Cell, std::allocator<Cell> >::operator[](unsigned long) [6]
-----------------------------------------------
                0.00    0.00    8436/51334499     Board::setCell(int, int, int, int) [21]
                0.00    0.00   10240/51334499     Board::init() [22]
                0.00    0.00  115823/51334499     Board::step(int) [10]
                0.13    0.15 51200000/51334499     Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&) [2]
[4]     27.6    0.14    0.16 51334499         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long) [4]
                0.08    0.00 51334499/51334499     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator[](unsigned long) [7]
                0.04    0.03 51334499/51334499     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_range_check(unsigned long) const [8]
-----------------------------------------------
                0.09    0.06 51310574/51310574     std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [3]
[5]     14.8    0.09    0.06 51310574         std::vector<Cell, std::allocator<Cell> >::_M_range_check(unsigned long) const [5]
                0.06    0.00 51310574/51339875     std::vector<Cell, std::allocator<Cell> >::size() const [9]
-----------------------------------------------
                0.14    0.00 51310574/51310574     std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [3]
[6]     13.3    0.14    0.00 51310574         std::vector<Cell, std::allocator<Cell> >::operator[](unsigned long) [6]
-----------------------------------------------
                0.08    0.00 51334499/51334499     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long) [4]
[7]      7.6    0.08    0.00 51334499         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator[](unsigned long) [7]
-----------------------------------------------
                0.04    0.03 51334499/51334499     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long) [4]
[8]      7.1    0.04    0.03 51334499         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_range_check(unsigned long) const [8]
                0.03    0.00 51334499/51358351     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const [12]
-----------------------------------------------
                0.00    0.00     256/51339875     std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [27]
                0.00    0.00    1024/51339875     void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [24]
                0.00    0.00    4096/51339875     std::vector<Cell, std::allocator<Cell> >::_M_check_len(unsigned long, char const*) const [25]
                0.00    0.00   23925/51339875     Board::step(int) [10]
                0.06    0.00 51310574/51339875     std::vector<Cell, std::allocator<Cell> >::_M_range_check(unsigned long) const [5]
[9]      6.2    0.07    0.00 51339875         std::vector<Cell, std::allocator<Cell> >::size() const [9]
-----------------------------------------------
                0.00    0.05    7979/7979        main [1]
[10]     4.9    0.00    0.05    7979         Board::step(int) [10]
                0.03    0.01    7977/7977        std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop() [11]
                0.00    0.00    7975/10787       std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [20]
                0.00    0.00    2791/2812        Board::setCell(int, int, int, int) [21]
                0.00    0.00   91898/51310574     std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [3]
                0.00    0.00  115823/51334499     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long) [4]
                0.00    0.00   23925/51339875     std::vector<Cell, std::allocator<Cell> >::size() const [9]
                0.00    0.00   23811/51358351     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const [12]
                0.00    0.00   63800/63800       Cell::Cell() [51]
                0.00    0.00   14124/19755       std::vector<Faction, std::allocator<Faction> >::at(unsigned long) [66]
                0.00    0.00    7981/7981        std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::top() const [95]
                0.00    0.00    7979/7979        std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::size() const [98]
                0.00    0.00    7975/10787       Faction::getSpeed() [80]
                0.00    0.00    7975/10787       Move::Move(int, int, int, int) [79]
                0.00    0.00    2979/2979        Faction::getStrength() [114]
                0.00    0.00    2979/2979        Faction::getAccuracy() [113]
                0.00    0.00     191/191         Faction::getArmor() [164]
-----------------------------------------------
                0.03    0.01    7977/7977        Board::step(int) [10]
[11]     4.2    0.03    0.01    7977         std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop() [11]
                0.00    0.01    7977/7977        void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [19]
                0.00    0.00    7977/18765       std::vector<Move, std::allocator<Move> >::end() [16]
                0.00    0.00    7977/18765       std::vector<Move, std::allocator<Move> >::begin() [69]
                0.00    0.00    7977/7977        std::vector<Move, std::allocator<Move> >::pop_back() [105]
-----------------------------------------------
                0.00    0.00       1/51358351     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [29]
                0.00    0.00       8/51358351     void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [37]
                0.00    0.00      32/51358351     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_check_len(unsigned long, char const*) const [38]
                0.00    0.00   23811/51358351     Board::step(int) [10]
                0.03    0.00 51334499/51358351     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_range_check(unsigned long) const [8]
[12]     3.3    0.04    0.00 51358351         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const [12]
-----------------------------------------------
                0.00    0.03       1/1           main [1]
[13]     2.4    0.00    0.03       1         Board::Board(int, int, int, int, int, XColor*) [13]
                0.01    0.02       7/7           void std::vector<Faction, std::allocator<Faction> >::emplace_back<>() [14]
                0.00    0.00   10240/10240       std::vector<Cell, std::allocator<Cell> >::push_back(Cell const&) [23]
                0.00    0.00       1/1           std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [26]
                0.00    0.00     128/128         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::push_back(std::vector<Cell, std::allocator<Cell> > const&) [28]
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [29]
                0.00    0.00   10240/10240       Cell::Cell(int, int) [88]
                0.00    0.00     128/128         std::vector<Cell, std::allocator<Cell> >::vector() [176]
                0.00    0.00     128/511         std::vector<Cell, std::allocator<Cell> >::~vector() [145]
                0.00    0.00       2/2           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::vector() [350]
                0.00    0.00       1/1           std::vector<Move, std::allocator<Move> >::vector() [378]
                0.00    0.00       1/1           std::vector<Faction, std::allocator<Faction> >::vector() [380]
                0.00    0.00       1/2           std::vector<Move, std::allocator<Move> >::~vector() [349]
                0.00    0.00       1/2           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector() [351]
-----------------------------------------------
                0.01    0.02       7/7           Board::Board(int, int, int, int, int, XColor*) [13]
[14]     2.4    0.01    0.02       7         void std::vector<Faction, std::allocator<Faction> >::emplace_back<>() [14]
                0.02    0.00       4/4           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [15]
                0.00    0.00       3/7           void std::allocator_traits<std::allocator<Faction> >::construct<Faction>(std::allocator<Faction>&, Faction*) [306]
-----------------------------------------------
                0.02    0.00       4/4           void std::vector<Faction, std::allocator<Faction> >::emplace_back<>() [14]
[15]     1.9    0.02    0.00       4         void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [15]
                0.00    0.00       8/9           std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() [277]
                0.00    0.00       4/4           std::vector<Faction, std::allocator<Faction> >::_M_check_len(unsigned long, char const*) const [323]
                0.00    0.00       4/4           std::_Vector_base<Faction, std::allocator<Faction> >::_M_allocate(unsigned long) [325]
                0.00    0.00       4/22596       std::vector<Faction, std::allocator<Faction> >::size() const [60]
                0.00    0.00       4/7           void std::allocator_traits<std::allocator<Faction> >::construct<Faction>(std::allocator<Faction>&, Faction*) [306]
                0.00    0.00       4/4           Faction* std::__uninitialized_move_if_noexcept_a<Faction*, Faction*, std::allocator<Faction> >(Faction*, Faction*, Faction*, std::allocator<Faction>&) [333]
                0.00    0.00       4/5           void std::_Destroy<Faction*, Faction>(Faction*, Faction*, std::allocator<Faction>&) [320]
                0.00    0.00       4/5           std::_Vector_base<Faction, std::allocator<Faction> >::_M_deallocate(Faction*, unsigned long) [318]
-----------------------------------------------
                0.00    0.00       1/18765       std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [26]
                0.00    0.00    7977/18765       std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop() [11]
                0.01    0.00   10787/18765       std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [20]
[16]     1.0    0.01    0.00   18765         std::vector<Move, std::allocator<Move> >::end() [16]
                0.00    0.00   18765/387689      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move* const&) [45]
-----------------------------------------------
                0.00    0.01    7977/7977        void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [19]
[17]     1.0    0.00    0.01    7977         void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [17]
                0.01    0.00    7977/7977        void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [18]
                0.00    0.00   23931/374090      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [46]
                0.00    0.00   23931/169334      std::remove_reference<Move&>::type&& std::move<Move&>(Move&) [48]
                0.00    0.00    7977/26742       __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&) [59]
-----------------------------------------------
                0.01    0.00    7977/7977        void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [17]
[18]     1.0    0.01    0.00    7977         void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [18]
                0.00    0.00  301316/339372      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator+(long) const [47]
                0.00    0.00  150674/374090      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [46]
                0.00    0.00   83314/169334      std::remove_reference<Move&>::type&& std::move<Move&>(Move&) [48]
                0.00    0.00   75321/75321       bool __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >) [50]
                0.00    0.00    7977/7977        __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(__gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [103]
                0.00    0.00    7977/18764       void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>) [71]
-----------------------------------------------
                0.00    0.01    7977/7977        std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop() [11]
[19]     1.0    0.00    0.01    7977         void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [19]
                0.00    0.01    7977/7977        void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [17]
                0.00    0.00    7977/26742       __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&) [59]
                0.00    0.00    7977/7977        __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator--() [102]
                0.00    0.00    7977/7978        __gnu_cxx::__ops::_Iter_comp_iter<compareMove> __gnu_cxx::__ops::__iter_comp_iter<compareMove>(compareMove) [100]
-----------------------------------------------
                0.00    0.00    2812/10787       Board::setCell(int, int, int, int) [21]
                0.00    0.00    7975/10787       Board::step(int) [10]
[20]     0.5    0.00    0.01   10787         std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [20]
                0.01    0.00   10787/18765       std::vector<Move, std::allocator<Move> >::end() [16]
                0.00    0.00   10787/169334      std::remove_reference<Move&>::type&& std::move<Move&>(Move&) [48]
                0.00    0.00   10787/10787       std::vector<Move, std::allocator<Move> >::push_back(Move&&) [86]
                0.00    0.00   10787/18765       std::vector<Move, std::allocator<Move> >::begin() [69]
                0.00    0.00   10787/10787       void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [87]
-----------------------------------------------
                0.00    0.00      21/2812        Board::init() [22]
                0.00    0.00    2791/2812        Board::step(int) [10]
[21]     0.2    0.00    0.00    2812         Board::setCell(int, int, int, int) [21]
                0.00    0.00    2812/10787       std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [20]
                0.00    0.00    8436/51310574     std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [3]
                0.00    0.00    8436/51334499     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long) [4]
                0.00    0.00    5624/19755       std::vector<Faction, std::allocator<Faction> >::at(unsigned long) [66]
                0.00    0.00    2812/22596       std::vector<Faction, std::allocator<Faction> >::size() const [60]
                0.00    0.00    2812/13052       Cell::init(int) [78]
                0.00    0.00    2812/2812        Faction::getHealth() [116]
                0.00    0.00    2812/10787       Faction::getSpeed() [80]
                0.00    0.00    2812/10787       Move::Move(int, int, int, int) [79]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[22]     0.0    0.00    0.00       1         Board::init() [22]
                0.00    0.00   10240/51310574     std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [3]
                0.00    0.00   10240/51334499     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long) [4]
                0.00    0.00      21/2812        Board::setCell(int, int, int, int) [21]
                0.00    0.00   10240/13052       Cell::init(int) [78]
                0.00    0.00       9/22596       std::vector<Faction, std::allocator<Faction> >::size() const [60]
                0.00    0.00       7/19755       std::vector<Faction, std::allocator<Faction> >::at(unsigned long) [66]
                0.00    0.00       7/7           Faction::init(int) [294]
-----------------------------------------------
                0.00    0.00   10240/10240       Board::Board(int, int, int, int, int, XColor*) [13]
[23]     0.0    0.00    0.00   10240         std::vector<Cell, std::allocator<Cell> >::push_back(Cell const&) [23]
                0.00    0.00    1024/1024        void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [24]
                0.00    0.00    9216/10240       void std::allocator_traits<std::allocator<Cell> >::construct<Cell, Cell const&>(std::allocator<Cell>&, Cell*, Cell const&) [90]
-----------------------------------------------
                0.00    0.00    1024/1024        std::vector<Cell, std::allocator<Cell> >::push_back(Cell const&) [23]
[24]     0.0    0.00    0.00    1024         void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [24]
                0.00    0.00    1024/1024        std::vector<Cell, std::allocator<Cell> >::_M_check_len(unsigned long, char const*) const [25]
                0.00    0.00    1024/51339875     std::vector<Cell, std::allocator<Cell> >::size() const [9]
                0.00    0.00    2048/2942        std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() [115]
                0.00    0.00    1024/1280        std::_Vector_base<Cell, std::allocator<Cell> >::_M_allocate(unsigned long) [128]
                0.00    0.00    1024/41984       Cell const& std::forward<Cell const&>(std::remove_reference<Cell const&>::type&) [54]
                0.00    0.00    1024/10240       void std::allocator_traits<std::allocator<Cell> >::construct<Cell, Cell const&>(std::allocator<Cell>&, Cell*, Cell const&) [90]
                0.00    0.00    1024/1024        Cell* std::__uninitialized_move_if_noexcept_a<Cell*, Cell*, std::allocator<Cell> >(Cell*, Cell*, Cell*, std::allocator<Cell>&) [136]
                0.00    0.00    1024/1535        void std::_Destroy<Cell*, Cell>(Cell*, Cell*, std::allocator<Cell>&) [125]
                0.00    0.00    1024/1535        std::_Vector_base<Cell, std::allocator<Cell> >::_M_deallocate(Cell*, unsigned long) [123]
-----------------------------------------------
                0.00    0.00    1024/1024        void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [24]
[25]     0.0    0.00    0.00    1024         std::vector<Cell, std::allocator<Cell> >::_M_check_len(unsigned long, char const*) const [25]
                0.00    0.00    4096/51339875     std::vector<Cell, std::allocator<Cell> >::size() const [9]
                0.00    0.00    2048/2048        std::vector<Cell, std::allocator<Cell> >::max_size() const [118]
                0.00    0.00    1024/1077        unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [132]
-----------------------------------------------
                0.00    0.00       1/1           Board::Board(int, int, int, int, int, XColor*) [13]
[26]     0.0    0.00    0.00       1         std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [26]
                0.00    0.00       1/18765       std::vector<Move, std::allocator<Move> >::end() [16]
                0.00    0.00       1/2           std::remove_reference<std::vector<Move, std::allocator<Move> >&>::type&& std::move<std::vector<Move, std::allocator<Move> >&>(std::vector<Move, std::allocator<Move> >&) [353]
                0.00    0.00       1/1           std::vector<Move, std::allocator<Move> >::vector(std::vector<Move, std::allocator<Move> >&&) [379]
                0.00    0.00       1/18765       std::vector<Move, std::allocator<Move> >::begin() [69]
                0.00    0.00       1/1           void std::make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [383]
-----------------------------------------------
                0.00    0.00     128/256         void __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [30]
                0.00    0.00     128/256         void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [32]
[27]     0.0    0.00    0.00     256         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [27]
                0.00    0.00     256/51339875     std::vector<Cell, std::allocator<Cell> >::size() const [9]
                0.00    0.00     256/2304        std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() const [117]
                0.00    0.00     256/256         __gnu_cxx::__alloc_traits<std::allocator<Cell> >::_S_select_on_copy(std::allocator<Cell> const&) [151]
                0.00    0.00     256/256         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(unsigned long, std::allocator<Cell> const&) [156]
                0.00    0.00     256/767         std::allocator<Cell>::~allocator() [138]
                0.00    0.00     256/2942        std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() [115]
                0.00    0.00     256/256         std::vector<Cell, std::allocator<Cell> >::end() const [152]
                0.00    0.00     256/256         std::vector<Cell, std::allocator<Cell> >::begin() const [153]
                0.00    0.00     256/256         Cell* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, Cell>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, std::allocator<Cell>&) [160]
-----------------------------------------------
                0.00    0.00     128/128         Board::Board(int, int, int, int, int, XColor*) [13]
[28]     0.0    0.00    0.00     128         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::push_back(std::vector<Cell, std::allocator<Cell> > const&) [28]
                0.00    0.00     120/128         void std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [31]
                0.00    0.00       8/8           void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [37]
-----------------------------------------------
                0.00    0.00       1/1           Board::Board(int, int, int, int, int, XColor*) [13]
[29]     0.0    0.00    0.00       1         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [29]
                0.00    0.00       1/1           std::vector<Cell, std::allocator<Cell> >* std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > >(unsigned long, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >) [34]
                0.00    0.00       1/51358351     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const [12]
                0.00    0.00       1/1           __gnu_cxx::__alloc_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_S_propagate_on_copy_assign() [360]
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::capacity() const [363]
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::end() const [361]
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::begin() const [362]
                0.00    0.00       1/20          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() [243]
                0.00    0.00       1/11          void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [274]
                0.00    0.00       1/11          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [272]
-----------------------------------------------
                0.00    0.00     128/128         void std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [31]
[30]     0.0    0.00    0.00     128         void __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [30]
                0.00    0.00     128/256         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [27]
                0.00    0.00     128/392         std::vector<Cell, std::allocator<Cell> > const& std::forward<std::vector<Cell, std::allocator<Cell> > const&>(std::remove_reference<std::vector<Cell, std::allocator<Cell> > const&>::type&) [146]
                0.00    0.00     128/62290       operator new(unsigned long, void*) [52]
-----------------------------------------------
                0.00    0.00       8/128         void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [37]
                0.00    0.00     120/128         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::push_back(std::vector<Cell, std::allocator<Cell> > const&) [28]
[31]     0.0    0.00    0.00     128         void std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [31]
                0.00    0.00     128/128         void __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [30]
                0.00    0.00     128/392         std::vector<Cell, std::allocator<Cell> > const& std::forward<std::vector<Cell, std::allocator<Cell> > const&>(std::remove_reference<std::vector<Cell, std::allocator<Cell> > const&>::type&) [146]
-----------------------------------------------
                0.00    0.00     128/128         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [33]
[32]     0.0    0.00    0.00     128         void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [32]
                0.00    0.00     128/256         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [27]
                0.00    0.00     128/392         std::vector<Cell, std::allocator<Cell> > const& std::forward<std::vector<Cell, std::allocator<Cell> > const&>(std::remove_reference<std::vector<Cell, std::allocator<Cell> > const&>::type&) [146]
                0.00    0.00     128/62290       operator new(unsigned long, void*) [52]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [35]
[33]     0.0    0.00    0.00       1         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [33]
                0.00    0.00     128/128         void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [32]
                0.00    0.00     129/129         bool __gnu_cxx::operator!=<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&) [169]
                0.00    0.00     128/128         __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator*() const [172]
                0.00    0.00     128/638         std::vector<Cell, std::allocator<Cell> >* std::__addressof<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >&) [141]
                0.00    0.00     128/128         __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator++() [171]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [29]
[34]     0.0    0.00    0.00       1         std::vector<Cell, std::allocator<Cell> >* std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > >(unsigned long, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >) [34]
                0.00    0.00       1/1           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [36]
                0.00    0.00       1/9           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate(unsigned long) [278]
                0.00    0.00       1/20          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() [243]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [36]
[35]     0.0    0.00    0.00       1         std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [35]
                0.00    0.00       1/1           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [33]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Cell, std::allocator<Cell> >* std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > >(unsigned long, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >) [34]
[36]     0.0    0.00    0.00       1         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [36]
                0.00    0.00       1/1           std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [35]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::push_back(std::vector<Cell, std::allocator<Cell> > const&) [28]
[37]     0.0    0.00    0.00       8         void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [37]
                0.00    0.00       8/8           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_check_len(unsigned long, char const*) const [38]
                0.00    0.00       8/128         void std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [31]
                0.00    0.00       8/51358351     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const [12]
                0.00    0.00      16/20          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() [243]
                0.00    0.00       8/9           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate(unsigned long) [278]
                0.00    0.00       8/392         std::vector<Cell, std::allocator<Cell> > const& std::forward<std::vector<Cell, std::allocator<Cell> > const&>(std::remove_reference<std::vector<Cell, std::allocator<Cell> > const&>::type&) [146]
                0.00    0.00       8/8           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_move_if_noexcept_a<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [293]
                0.00    0.00       8/11          void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [274]
                0.00    0.00       8/11          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [272]
-----------------------------------------------
                0.00    0.00       8/8           void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [37]
[38]     0.0    0.00    0.00       8         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_check_len(unsigned long, char const*) const [38]
                0.00    0.00      32/51358351     std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const [12]
                0.00    0.00      16/16          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size() const [246]
                0.00    0.00       8/1077        unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [132]
-----------------------------------------------
                0.00    0.00   10787/387689      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator-(long) const [83]
                0.00    0.00   18765/387689      std::vector<Move, std::allocator<Move> >::begin() [69]
                0.00    0.00   18765/387689      std::vector<Move, std::allocator<Move> >::end() [16]
                0.00    0.00  339372/387689      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator+(long) const [47]
[45]     0.0    0.00    0.00  387689         __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move* const&) [45]
-----------------------------------------------
                0.00    0.00   10787/374090      void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [87]
                0.00    0.00   18938/374090      bool __gnu_cxx::__ops::_Iter_comp_val<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move&) [68]
                0.00    0.00   19118/374090      void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>) [71]
                0.00    0.00   23931/374090      void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [17]
                0.00    0.00  150642/374090      bool __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >) [50]
                0.00    0.00  150674/374090      void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [18]
[46]     0.0    0.00    0.00  374090         __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [46]
-----------------------------------------------
                0.00    0.00   38056/339372      void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>) [71]
                0.00    0.00  301316/339372      void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [18]
[47]     0.0    0.00    0.00  339372         __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator+(long) const [47]
                0.00    0.00  339372/387689      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move* const&) [45]
-----------------------------------------------
                0.00    0.00   10787/169334      std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [20]
                0.00    0.00   10787/169334      std::vector<Move, std::allocator<Move> >::push_back(Move&&) [86]
                0.00    0.00   18941/169334      void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>) [71]
                0.00    0.00   21574/169334      void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [87]
                0.00    0.00   23931/169334      void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [17]
                0.00    0.00   83314/169334      void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [18]
[48]     0.0    0.00    0.00  169334         std::remove_reference<Move&>::type&& std::move<Move&>(Move&) [48]
-----------------------------------------------
                0.00    0.00   18938/94259       bool __gnu_cxx::__ops::_Iter_comp_val<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move&) [68]
                0.00    0.00   75321/94259       bool __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >) [50]
[49]     0.0    0.00    0.00   94259         compareMove::operator()(Move, Move) [49]
-----------------------------------------------
                0.00    0.00   75321/75321       void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [18]
[50]     0.0    0.00    0.00   75321         bool __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >) [50]
                0.00    0.00  150642/374090      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [46]
                0.00    0.00   75321/94259       compareMove::operator()(Move, Move) [49]
-----------------------------------------------
                0.00    0.00   63800/63800       Board::step(int) [10]
[51]     0.0    0.00    0.00   63800         Cell::Cell() [51]
-----------------------------------------------
                0.00    0.00       7/62290       void __gnu_cxx::new_allocator<Faction>::construct<Faction>(Faction*) [295]
                0.00    0.00      42/62290       void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [204]
                0.00    0.00     127/62290       void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >&&) [183]
                0.00    0.00     128/62290       void __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [30]
                0.00    0.00     128/62290       void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [32]
                0.00    0.00    4095/62290       void std::_Construct<Move, Move>(Move*, Move&&) [110]
                0.00    0.00   10240/62290       void __gnu_cxx::new_allocator<Cell>::construct<Cell, Cell const&>(Cell*, Cell const&) [89]
                0.00    0.00   10787/62290       void __gnu_cxx::new_allocator<Move>::construct<Move, Move>(Move*, Move&&) [81]
                0.00    0.00   16256/62290       void std::_Construct<Cell, Cell>(Cell*, Cell&&) [76]
                0.00    0.00   20480/62290       void std::_Construct<Cell, Cell const&>(Cell*, Cell const&) [64]
[52]     0.0    0.00    0.00   62290         operator new(unsigned long, void*) [52]
-----------------------------------------------
                0.00    0.00   53484/53484       __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&) [59]
[53]     0.0    0.00    0.00   53484         __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::base() const [53]
-----------------------------------------------
                0.00    0.00    1024/41984       void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [24]
                0.00    0.00   10240/41984       void std::allocator_traits<std::allocator<Cell> >::construct<Cell, Cell const&>(std::allocator<Cell>&, Cell*, Cell const&) [90]
                0.00    0.00   10240/41984       void __gnu_cxx::new_allocator<Cell>::construct<Cell, Cell const&>(Cell*, Cell const&) [89]
                0.00    0.00   20480/41984       void std::_Construct<Cell, Cell const&>(Cell*, Cell const&) [64]
[54]     0.0    0.00    0.00   41984         Cell const& std::forward<Cell const&>(std::remove_reference<Cell const&>::type&) [54]
-----------------------------------------------
                0.00    0.00   41472/41472       bool __gnu_cxx::operator!=<Cell const*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&) [61]
[55]     0.0    0.00    0.00   41472         __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::base() const [55]
-----------------------------------------------
                0.00    0.00   16256/36736       Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [133]
                0.00    0.00   20480/36736       Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [158]
[56]     0.0    0.00    0.00   36736         Cell* std::__addressof<Cell>(Cell&) [56]
-----------------------------------------------
                0.00    0.00      13/36469       void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [265]
                0.00    0.00    4095/36469       void std::_Construct<Move, Move>(Move*, Move&&) [110]
                0.00    0.00   10787/36469       void std::vector<Move, std::allocator<Move> >::emplace_back<Move>(Move&&) [85]
                0.00    0.00   10787/36469       void std::allocator_traits<std::allocator<Move> >::construct<Move, Move>(std::allocator<Move>&, Move*, Move&&) [84]
                0.00    0.00   10787/36469       void __gnu_cxx::new_allocator<Move>::construct<Move, Move>(Move*, Move&&) [81]
[57]     0.0    0.00    0.00   36469         Move&& std::forward<Move>(std::remove_reference<Move>::type&) [57]
-----------------------------------------------
                0.00    0.00   34560/34560       bool std::operator==<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&) [72]
[58]     0.0    0.00    0.00   34560         std::move_iterator<Cell*>::base() const [58]
-----------------------------------------------
                0.00    0.00       1/26742       void std::__make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [382]
                0.00    0.00    7977/26742       void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [19]
                0.00    0.00    7977/26742       void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [17]
                0.00    0.00   10787/26742       void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [87]
[59]     0.0    0.00    0.00   26742         __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&) [59]
                0.00    0.00   53484/53484       __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::base() const [53]
-----------------------------------------------
                0.00    0.00       4/22596       void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [15]
                0.00    0.00       9/22596       Board::init() [22]
                0.00    0.00      16/22596       std::vector<Faction, std::allocator<Faction> >::_M_check_len(unsigned long, char const*) const [323]
                0.00    0.00    2812/22596       Board::setCell(int, int, int, int) [21]
                0.00    0.00   19755/22596       std::vector<Faction, std::allocator<Faction> >::_M_range_check(unsigned long) const [65]
[60]     0.0    0.00    0.00   22596         std::vector<Faction, std::allocator<Faction> >::size() const [60]
-----------------------------------------------
                0.00    0.00   20736/20736       Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [158]
[61]     0.0    0.00    0.00   20736         bool __gnu_cxx::operator!=<Cell const*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&) [61]
                0.00    0.00   41472/41472       __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::base() const [55]
-----------------------------------------------
                0.00    0.00   20480/20480       Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [158]
[62]     0.0    0.00    0.00   20480         __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator++() [62]
-----------------------------------------------
                0.00    0.00   20480/20480       Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [158]
[63]     0.0    0.00    0.00   20480         __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator*() const [63]
-----------------------------------------------
                0.00    0.00   20480/20480       Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [158]
[64]     0.0    0.00    0.00   20480         void std::_Construct<Cell, Cell const&>(Cell*, Cell const&) [64]
                0.00    0.00   20480/41984       Cell const& std::forward<Cell const&>(std::remove_reference<Cell const&>::type&) [54]
                0.00    0.00   20480/62290       operator new(unsigned long, void*) [52]
-----------------------------------------------
                0.00    0.00   19755/19755       std::vector<Faction, std::allocator<Faction> >::at(unsigned long) [66]
[65]     0.0    0.00    0.00   19755         std::vector<Faction, std::allocator<Faction> >::_M_range_check(unsigned long) const [65]
                0.00    0.00   19755/22596       std::vector<Faction, std::allocator<Faction> >::size() const [60]
-----------------------------------------------
                0.00    0.00       7/19755       Board::init() [22]
                0.00    0.00    5624/19755       Board::setCell(int, int, int, int) [21]
                0.00    0.00   14124/19755       Board::step(int) [10]
[66]     0.0    0.00    0.00   19755         std::vector<Faction, std::allocator<Faction> >::at(unsigned long) [66]
                0.00    0.00   19755/19755       std::vector<Faction, std::allocator<Faction> >::_M_range_check(unsigned long) const [65]
                0.00    0.00   19755/19755       std::vector<Faction, std::allocator<Faction> >::operator[](unsigned long) [67]
-----------------------------------------------
                0.00    0.00   19755/19755       std::vector<Faction, std::allocator<Faction> >::at(unsigned long) [66]
[67]     0.0    0.00    0.00   19755         std::vector<Faction, std::allocator<Faction> >::operator[](unsigned long) [67]
-----------------------------------------------
                0.00    0.00   18938/18938       void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>) [71]
[68]     0.0    0.00    0.00   18938         bool __gnu_cxx::__ops::_Iter_comp_val<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move&) [68]
                0.00    0.00   18938/374090      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [46]
                0.00    0.00   18938/94259       compareMove::operator()(Move, Move) [49]
-----------------------------------------------
                0.00    0.00       1/18765       std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [26]
                0.00    0.00    7977/18765       std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop() [11]
                0.00    0.00   10787/18765       std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [20]
[69]     0.0    0.00    0.00   18765         std::vector<Move, std::allocator<Move> >::begin() [69]
                0.00    0.00   18765/387689      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move* const&) [45]
-----------------------------------------------
                0.00    0.00    7977/18764       __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(__gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [103]
                0.00    0.00   10787/18764       __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(compareMove) [82]
[70]     0.0    0.00    0.00   18764         __gnu_cxx::__ops::_Iter_comp_val<compareMove>::_Iter_comp_val(compareMove) [70]
-----------------------------------------------
                0.00    0.00    7977/18764       void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [18]
                0.00    0.00   10787/18764       void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [87]
[71]     0.0    0.00    0.00   18764         void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>) [71]
                0.00    0.00   38056/339372      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator+(long) const [47]
                0.00    0.00   19118/374090      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [46]
                0.00    0.00   18941/169334      std::remove_reference<Move&>::type&& std::move<Move&>(Move&) [48]
                0.00    0.00   18938/18938       bool __gnu_cxx::__ops::_Iter_comp_val<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move&) [68]
-----------------------------------------------
                0.00    0.00   17280/17280       bool std::operator!=<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&) [73]
[72]     0.0    0.00    0.00   17280         bool std::operator==<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&) [72]
                0.00    0.00   34560/34560       std::move_iterator<Cell*>::base() const [58]
-----------------------------------------------
                0.00    0.00   17280/17280       Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [133]
[73]     0.0    0.00    0.00   17280         bool std::operator!=<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&) [73]
                0.00    0.00   17280/17280       bool std::operator==<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&) [72]
-----------------------------------------------
                0.00    0.00   16256/16256       Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [133]
[74]     0.0    0.00    0.00   16256         std::move_iterator<Cell*>::operator*() const [74]
-----------------------------------------------
                0.00    0.00   16256/16256       Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [133]
[75]     0.0    0.00    0.00   16256         std::move_iterator<Cell*>::operator++() [75]
-----------------------------------------------
                0.00    0.00   16256/16256       Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [133]
[76]     0.0    0.00    0.00   16256         void std::_Construct<Cell, Cell>(Cell*, Cell&&) [76]
                0.00    0.00   16256/16256       Cell&& std::forward<Cell>(std::remove_reference<Cell>::type&) [77]
                0.00    0.00   16256/62290       operator new(unsigned long, void*) [52]
-----------------------------------------------
                0.00    0.00   16256/16256       void std::_Construct<Cell, Cell>(Cell*, Cell&&) [76]
[77]     0.0    0.00    0.00   16256         Cell&& std::forward<Cell>(std::remove_reference<Cell>::type&) [77]
-----------------------------------------------
                0.00    0.00    2812/13052       Board::setCell(int, int, int, int) [21]
                0.00    0.00   10240/13052       Board::init() [22]
[78]     0.0    0.00    0.00   13052         Cell::init(int) [78]
-----------------------------------------------
                0.00    0.00    2812/10787       Board::setCell(int, int, int, int) [21]
                0.00    0.00    7975/10787       Board::step(int) [10]
[79]     0.0    0.00    0.00   10787         Move::Move(int, int, int, int) [79]
-----------------------------------------------
                0.00    0.00    2812/10787       Board::setCell(int, int, int, int) [21]
                0.00    0.00    7975/10787       Board::step(int) [10]
[80]     0.0    0.00    0.00   10787         Faction::getSpeed() [80]
-----------------------------------------------
                0.00    0.00   10787/10787       void std::allocator_traits<std::allocator<Move> >::construct<Move, Move>(std::allocator<Move>&, Move*, Move&&) [84]
[81]     0.0    0.00    0.00   10787         void __gnu_cxx::new_allocator<Move>::construct<Move, Move>(Move*, Move&&) [81]
                0.00    0.00   10787/36469       Move&& std::forward<Move>(std::remove_reference<Move>::type&) [57]
                0.00    0.00   10787/62290       operator new(unsigned long, void*) [52]
-----------------------------------------------
                0.00    0.00   10787/10787       void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [87]
[82]     0.0    0.00    0.00   10787         __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(compareMove) [82]
                0.00    0.00   10787/18764       __gnu_cxx::__ops::_Iter_comp_val<compareMove>::_Iter_comp_val(compareMove) [70]
-----------------------------------------------
                0.00    0.00   10787/10787       void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [87]
[83]     0.0    0.00    0.00   10787         __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator-(long) const [83]
                0.00    0.00   10787/387689      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move* const&) [45]
-----------------------------------------------
                0.00    0.00      13/10787       void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [265]
                0.00    0.00   10774/10787       void std::vector<Move, std::allocator<Move> >::emplace_back<Move>(Move&&) [85]
[84]     0.0    0.00    0.00   10787         void std::allocator_traits<std::allocator<Move> >::construct<Move, Move>(std::allocator<Move>&, Move*, Move&&) [84]
                0.00    0.00   10787/36469       Move&& std::forward<Move>(std::remove_reference<Move>::type&) [57]
                0.00    0.00   10787/10787       void __gnu_cxx::new_allocator<Move>::construct<Move, Move>(Move*, Move&&) [81]
-----------------------------------------------
                0.00    0.00   10787/10787       std::vector<Move, std::allocator<Move> >::push_back(Move&&) [86]
[85]     0.0    0.00    0.00   10787         void std::vector<Move, std::allocator<Move> >::emplace_back<Move>(Move&&) [85]
                0.00    0.00   10787/36469       Move&& std::forward<Move>(std::remove_reference<Move>::type&) [57]
                0.00    0.00   10774/10787       void std::allocator_traits<std::allocator<Move> >::construct<Move, Move>(std::allocator<Move>&, Move*, Move&&) [84]
                0.00    0.00      13/13          void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [265]
-----------------------------------------------
                0.00    0.00   10787/10787       std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [20]
[86]     0.0    0.00    0.00   10787         std::vector<Move, std::allocator<Move> >::push_back(Move&&) [86]
                0.00    0.00   10787/169334      std::remove_reference<Move&>::type&& std::move<Move&>(Move&) [48]
                0.00    0.00   10787/10787       void std::vector<Move, std::allocator<Move> >::emplace_back<Move>(Move&&) [85]
-----------------------------------------------
                0.00    0.00   10787/10787       std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [20]
[87]     0.0    0.00    0.00   10787         void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [87]
                0.00    0.00   21574/169334      std::remove_reference<Move&>::type&& std::move<Move&>(Move&) [48]
                0.00    0.00   10787/10787       __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator-(long) const [83]
                0.00    0.00   10787/374090      __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [46]
                0.00    0.00   10787/10787       __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(compareMove) [82]
                0.00    0.00   10787/26742       __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&) [59]
                0.00    0.00   10787/18764       void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>) [71]
-----------------------------------------------
                0.00    0.00   10240/10240       Board::Board(int, int, int, int, int, XColor*) [13]
[88]     0.0    0.00    0.00   10240         Cell::Cell(int, int) [88]
-----------------------------------------------
                0.00    0.00   10240/10240       void std::allocator_traits<std::allocator<Cell> >::construct<Cell, Cell const&>(std::allocator<Cell>&, Cell*, Cell const&) [90]
[89]     0.0    0.00    0.00   10240         void __gnu_cxx::new_allocator<Cell>::construct<Cell, Cell const&>(Cell*, Cell const&) [89]
                0.00    0.00   10240/41984       Cell const& std::forward<Cell const&>(std::remove_reference<Cell const&>::type&) [54]
                0.00    0.00   10240/62290       operator new(unsigned long, void*) [52]
-----------------------------------------------
                0.00    0.00    1024/10240       void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [24]
                0.00    0.00    9216/10240       std::vector<Cell, std::allocator<Cell> >::push_back(Cell const&) [23]
[90]     0.0    0.00    0.00   10240         void std::allocator_traits<std::allocator<Cell> >::construct<Cell, Cell const&>(std::allocator<Cell>&, Cell*, Cell const&) [90]
                0.00    0.00   10240/41984       Cell const& std::forward<Cell const&>(std::remove_reference<Cell const&>::type&) [54]
                0.00    0.00   10240/10240       void __gnu_cxx::new_allocator<Cell>::construct<Cell, Cell const&>(Cell*, Cell const&) [89]
-----------------------------------------------
                0.00    0.00    8216/8216        bool std::operator==<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&) [106]
[91]     0.0    0.00    0.00    8216         std::move_iterator<Move*>::base() const [91]
-----------------------------------------------
                0.00    0.00      13/8044        void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [265]
                0.00    0.00      52/8044        std::vector<Move, std::allocator<Move> >::_M_check_len(unsigned long, char const*) const [260]
                0.00    0.00    7979/8044        std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::size() const [98]
[92]     0.0    0.00    0.00    8044         std::vector<Move, std::allocator<Move> >::size() const [92]
-----------------------------------------------
                0.00    0.00    7981/7981        std::vector<Move, std::allocator<Move> >::begin() const [96]
[93]     0.0    0.00    0.00    7981         __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move const* const&) [93]
-----------------------------------------------
                0.00    0.00    7981/7981        std::vector<Move, std::allocator<Move> >::front() const [97]
[94]     0.0    0.00    0.00    7981         __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::operator*() const [94]
-----------------------------------------------
                0.00    0.00    7981/7981        Board::step(int) [10]
[95]     0.0    0.00    0.00    7981         std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::top() const [95]
                0.00    0.00    7981/7981        std::vector<Move, std::allocator<Move> >::front() const [97]
-----------------------------------------------
                0.00    0.00    7981/7981        std::vector<Move, std::allocator<Move> >::front() const [97]
[96]     0.0    0.00    0.00    7981         std::vector<Move, std::allocator<Move> >::begin() const [96]
                0.00    0.00    7981/7981        __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move const* const&) [93]
-----------------------------------------------
                0.00    0.00    7981/7981        std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::top() const [95]
[97]     0.0    0.00    0.00    7981         std::vector<Move, std::allocator<Move> >::front() const [97]
                0.00    0.00    7981/7981        std::vector<Move, std::allocator<Move> >::begin() const [96]
                0.00    0.00    7981/7981        __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::operator*() const [94]
-----------------------------------------------
                0.00    0.00    7979/7979        Board::step(int) [10]
[98]     0.0    0.00    0.00    7979         std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::size() const [98]
                0.00    0.00    7979/8044        std::vector<Move, std::allocator<Move> >::size() const [92]
-----------------------------------------------
                0.00    0.00    7978/7978        __gnu_cxx::__ops::_Iter_comp_iter<compareMove> __gnu_cxx::__ops::__iter_comp_iter<compareMove>(compareMove) [100]
[99]     0.0    0.00    0.00    7978         __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::_Iter_comp_iter(compareMove) [99]
-----------------------------------------------
                0.00    0.00       1/7978        void std::make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [383]
                0.00    0.00    7977/7978        void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [19]
[100]    0.0    0.00    0.00    7978         __gnu_cxx::__ops::_Iter_comp_iter<compareMove> __gnu_cxx::__ops::__iter_comp_iter<compareMove>(compareMove) [100]
                0.00    0.00    7978/7978        __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::_Iter_comp_iter(compareMove) [99]
-----------------------------------------------
                0.00    0.00    7977/7977        void std::allocator_traits<std::allocator<Move> >::destroy<Move>(std::allocator<Move>&, Move*) [104]
[101]    0.0    0.00    0.00    7977         void __gnu_cxx::new_allocator<Move>::destroy<Move>(Move*) [101]
-----------------------------------------------
                0.00    0.00    7977/7977        void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [19]
[102]    0.0    0.00    0.00    7977         __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator--() [102]
-----------------------------------------------
                0.00    0.00    7977/7977        void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [18]
[103]    0.0    0.00    0.00    7977         __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(__gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [103]
                0.00    0.00    7977/18764       __gnu_cxx::__ops::_Iter_comp_val<compareMove>::_Iter_comp_val(compareMove) [70]
-----------------------------------------------
                0.00    0.00    7977/7977        std::vector<Move, std::allocator<Move> >::pop_back() [105]
[104]    0.0    0.00    0.00    7977         void std::allocator_traits<std::allocator<Move> >::destroy<Move>(std::allocator<Move>&, Move*) [104]
                0.00    0.00    7977/7977        void __gnu_cxx::new_allocator<Move>::destroy<Move>(Move*) [101]
-----------------------------------------------
                0.00    0.00    7977/7977        std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop() [11]
[105]    0.0    0.00    0.00    7977         std::vector<Move, std::allocator<Move> >::pop_back() [105]
                0.00    0.00    7977/7977        void std::allocator_traits<std::allocator<Move> >::destroy<Move>(std::allocator<Move>&, Move*) [104]
-----------------------------------------------
                0.00    0.00    4108/4108        bool std::operator!=<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&) [107]
[106]    0.0    0.00    0.00    4108         bool std::operator==<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&) [106]
                0.00    0.00    8216/8216        std::move_iterator<Move*>::base() const [91]
-----------------------------------------------
                0.00    0.00    4108/4108        Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [264]
[107]    0.0    0.00    0.00    4108         bool std::operator!=<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&) [107]
                0.00    0.00    4108/4108        bool std::operator==<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&) [106]
-----------------------------------------------
                0.00    0.00    4095/4095        Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [264]
[108]    0.0    0.00    0.00    4095         std::move_iterator<Move*>::operator*() const [108]
-----------------------------------------------
                0.00    0.00    4095/4095        Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [264]
[109]    0.0    0.00    0.00    4095         std::move_iterator<Move*>::operator++() [109]
-----------------------------------------------
                0.00    0.00    4095/4095        Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [264]
[110]    0.0    0.00    0.00    4095         void std::_Construct<Move, Move>(Move*, Move&&) [110]
                0.00    0.00    4095/36469       Move&& std::forward<Move>(std::remove_reference<Move>::type&) [57]
                0.00    0.00    4095/62290       operator new(unsigned long, void*) [52]
-----------------------------------------------
                0.00    0.00    4095/4095        Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [264]
[111]    0.0    0.00    0.00    4095         Move* std::__addressof<Move>(Move&) [111]
-----------------------------------------------
                0.00    0.00    1280/3328        __gnu_cxx::new_allocator<Cell>::allocate(unsigned long, void const*) [127]
                0.00    0.00    2048/3328        std::allocator_traits<std::allocator<Cell> >::max_size(std::allocator<Cell> const&) [120]
[112]    0.0    0.00    0.00    3328         __gnu_cxx::new_allocator<Cell>::max_size() const [112]
-----------------------------------------------
                0.00    0.00    2979/2979        Board::step(int) [10]
[113]    0.0    0.00    0.00    2979         Faction::getAccuracy() [113]
-----------------------------------------------
                0.00    0.00    2979/2979        Board::step(int) [10]
[114]    0.0    0.00    0.00    2979         Faction::getStrength() [114]
-----------------------------------------------
                0.00    0.00     127/2942        std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&) [180]
                0.00    0.00     256/2942        std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [27]
                0.00    0.00     511/2942        std::vector<Cell, std::allocator<Cell> >::~vector() [145]
                0.00    0.00    2048/2942        void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [24]
[115]    0.0    0.00    0.00    2942         std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() [115]
-----------------------------------------------
                0.00    0.00    2812/2812        Board::setCell(int, int, int, int) [21]
[116]    0.0    0.00    0.00    2812         Faction::getHealth() [116]
-----------------------------------------------
                0.00    0.00     256/2304        std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [27]
                0.00    0.00    2048/2304        std::vector<Cell, std::allocator<Cell> >::max_size() const [118]
[117]    0.0    0.00    0.00    2304         std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() const [117]
-----------------------------------------------
                0.00    0.00    2048/2048        std::vector<Cell, std::allocator<Cell> >::_M_check_len(unsigned long, char const*) const [25]
[118]    0.0    0.00    0.00    2048         std::vector<Cell, std::allocator<Cell> >::max_size() const [118]
                0.00    0.00    2048/2304        std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() const [117]
                0.00    0.00    2048/2048        std::allocator_traits<std::allocator<Cell> >::max_size(std::allocator<Cell> const&) [120]
-----------------------------------------------
                0.00    0.00    2048/2048        std::move_iterator<Cell*> std::__make_move_if_noexcept_iterator<Cell, std::move_iterator<Cell*> >(Cell*) [121]
[119]    0.0    0.00    0.00    2048         std::move_iterator<Cell*>::move_iterator(Cell*) [119]
-----------------------------------------------
                0.00    0.00    2048/2048        std::vector<Cell, std::allocator<Cell> >::max_size() const [118]
[120]    0.0    0.00    0.00    2048         std::allocator_traits<std::allocator<Cell> >::max_size(std::allocator<Cell> const&) [120]
                0.00    0.00    2048/3328        __gnu_cxx::new_allocator<Cell>::max_size() const [112]
-----------------------------------------------
                0.00    0.00    2048/2048        Cell* std::__uninitialized_move_if_noexcept_a<Cell*, Cell*, std::allocator<Cell> >(Cell*, Cell*, Cell*, std::allocator<Cell>&) [136]
[121]    0.0    0.00    0.00    2048         std::move_iterator<Cell*> std::__make_move_if_noexcept_iterator<Cell, std::move_iterator<Cell*> >(Cell*) [121]
                0.00    0.00    2048/2048        std::move_iterator<Cell*>::move_iterator(Cell*) [119]
-----------------------------------------------
                0.00    0.00    1535/1535        void std::_Destroy<Cell*>(Cell*, Cell*) [124]
[122]    0.0    0.00    0.00    1535         void std::_Destroy_aux<true>::__destroy<Cell*>(Cell*, Cell*) [122]
-----------------------------------------------
                0.00    0.00     511/1535        std::_Vector_base<Cell, std::allocator<Cell> >::~_Vector_base() [144]
                0.00    0.00    1024/1535        void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [24]
[123]    0.0    0.00    0.00    1535         std::_Vector_base<Cell, std::allocator<Cell> >::_M_deallocate(Cell*, unsigned long) [123]
                0.00    0.00    1280/1280        std::allocator_traits<std::allocator<Cell> >::deallocate(std::allocator<Cell>&, Cell*, unsigned long) [129]
-----------------------------------------------
                0.00    0.00    1535/1535        void std::_Destroy<Cell*, Cell>(Cell*, Cell*, std::allocator<Cell>&) [125]
[124]    0.0    0.00    0.00    1535         void std::_Destroy<Cell*>(Cell*, Cell*) [124]
                0.00    0.00    1535/1535        void std::_Destroy_aux<true>::__destroy<Cell*>(Cell*, Cell*) [122]
-----------------------------------------------
                0.00    0.00     511/1535        std::vector<Cell, std::allocator<Cell> >::~vector() [145]
                0.00    0.00    1024/1535        void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [24]
[125]    0.0    0.00    0.00    1535         void std::_Destroy<Cell*, Cell>(Cell*, Cell*, std::allocator<Cell>&) [125]
                0.00    0.00    1535/1535        void std::_Destroy<Cell*>(Cell*, Cell*) [124]
-----------------------------------------------
                0.00    0.00    1280/1280        std::allocator_traits<std::allocator<Cell> >::deallocate(std::allocator<Cell>&, Cell*, unsigned long) [129]
[126]    0.0    0.00    0.00    1280         __gnu_cxx::new_allocator<Cell>::deallocate(Cell*, unsigned long) [126]
-----------------------------------------------
                0.00    0.00    1280/1280        std::allocator_traits<std::allocator<Cell> >::allocate(std::allocator<Cell>&, unsigned long) [130]
[127]    0.0    0.00    0.00    1280         __gnu_cxx::new_allocator<Cell>::allocate(unsigned long, void const*) [127]
                0.00    0.00    1280/3328        __gnu_cxx::new_allocator<Cell>::max_size() const [112]
-----------------------------------------------
                0.00    0.00     256/1280        std::_Vector_base<Cell, std::allocator<Cell> >::_M_create_storage(unsigned long) [155]
                0.00    0.00    1024/1280        void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [24]
[128]    0.0    0.00    0.00    1280         std::_Vector_base<Cell, std::allocator<Cell> >::_M_allocate(unsigned long) [128]
                0.00    0.00    1280/1280        std::allocator_traits<std::allocator<Cell> >::allocate(std::allocator<Cell>&, unsigned long) [130]
-----------------------------------------------
                0.00    0.00    1280/1280        std::_Vector_base<Cell, std::allocator<Cell> >::_M_deallocate(Cell*, unsigned long) [123]
[129]    0.0    0.00    0.00    1280         std::allocator_traits<std::allocator<Cell> >::deallocate(std::allocator<Cell>&, Cell*, unsigned long) [129]
                0.00    0.00    1280/1280        __gnu_cxx::new_allocator<Cell>::deallocate(Cell*, unsigned long) [126]
-----------------------------------------------
                0.00    0.00    1280/1280        std::_Vector_base<Cell, std::allocator<Cell> >::_M_allocate(unsigned long) [128]
[130]    0.0    0.00    0.00    1280         std::allocator_traits<std::allocator<Cell> >::allocate(std::allocator<Cell>&, unsigned long) [130]
                0.00    0.00    1280/1280        __gnu_cxx::new_allocator<Cell>::allocate(unsigned long, void const*) [127]
-----------------------------------------------
                0.00    0.00    1143/1143        std::enable_if<std::__and_<std::is_move_constructible<Cell*>, std::is_move_assignable<Cell*> >::value, void>::type std::swap<Cell*>(Cell*&, Cell*&) [148]
[131]    0.0    0.00    0.00    1143         std::remove_reference<Cell*&>::type&& std::move<Cell*&>(Cell*&) [131]
-----------------------------------------------
                0.00    0.00       4/1077        std::vector<Faction, std::allocator<Faction> >::_M_check_len(unsigned long, char const*) const [323]
                0.00    0.00       8/1077        std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_check_len(unsigned long, char const*) const [38]
                0.00    0.00      13/1077        std::vector<Move, std::allocator<Move> >::_M_check_len(unsigned long, char const*) const [260]
                0.00    0.00      28/1077        std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [221]
                0.00    0.00    1024/1077        std::vector<Cell, std::allocator<Cell> >::_M_check_len(unsigned long, char const*) const [25]
[132]    0.0    0.00    0.00    1077         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [132]
-----------------------------------------------
                0.00    0.00    1024/1024        Cell* std::uninitialized_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [134]
[133]    0.0    0.00    0.00    1024         Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [133]
                0.00    0.00   17280/17280       bool std::operator!=<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&) [73]
                0.00    0.00   16256/16256       std::move_iterator<Cell*>::operator*() const [74]
                0.00    0.00   16256/16256       void std::_Construct<Cell, Cell>(Cell*, Cell&&) [76]
                0.00    0.00   16256/36736       Cell* std::__addressof<Cell>(Cell&) [56]
                0.00    0.00   16256/16256       std::move_iterator<Cell*>::operator++() [75]
-----------------------------------------------
                0.00    0.00    1024/1024        Cell* std::__uninitialized_copy_a<std::move_iterator<Cell*>, Cell*, Cell>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*, std::allocator<Cell>&) [135]
[134]    0.0    0.00    0.00    1024         Cell* std::uninitialized_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [134]
                0.00    0.00    1024/1024        Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [133]
-----------------------------------------------
                0.00    0.00    1024/1024        Cell* std::__uninitialized_move_if_noexcept_a<Cell*, Cell*, std::allocator<Cell> >(Cell*, Cell*, Cell*, std::allocator<Cell>&) [136]
[135]    0.0    0.00    0.00    1024         Cell* std::__uninitialized_copy_a<std::move_iterator<Cell*>, Cell*, Cell>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*, std::allocator<Cell>&) [135]
                0.00    0.00    1024/1024        Cell* std::uninitialized_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [134]
-----------------------------------------------
                0.00    0.00    1024/1024        void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [24]
[136]    0.0    0.00    0.00    1024         Cell* std::__uninitialized_move_if_noexcept_a<Cell*, Cell*, std::allocator<Cell> >(Cell*, Cell*, Cell*, std::allocator<Cell>&) [136]
                0.00    0.00    2048/2048        std::move_iterator<Cell*> std::__make_move_if_noexcept_iterator<Cell, std::move_iterator<Cell*> >(Cell*) [121]
                0.00    0.00    1024/1024        Cell* std::__uninitialized_copy_a<std::move_iterator<Cell*>, Cell*, Cell>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*, std::allocator<Cell>&) [135]
-----------------------------------------------
                0.00    0.00     767/767         std::allocator<Cell>::~allocator() [138]
[137]    0.0    0.00    0.00     767         __gnu_cxx::new_allocator<Cell>::~new_allocator() [137]
-----------------------------------------------
                0.00    0.00     256/767         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [27]
                0.00    0.00     511/767         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::~_Vector_impl() [143]
[138]    0.0    0.00    0.00     767         std::allocator<Cell>::~allocator() [138]
                0.00    0.00     767/767         __gnu_cxx::new_allocator<Cell>::~new_allocator() [137]
-----------------------------------------------
                0.00    0.00     639/639         std::allocator<Cell>::allocator(std::allocator<Cell> const&) [140]
[139]    0.0    0.00    0.00     639         __gnu_cxx::new_allocator<Cell>::new_allocator(__gnu_cxx::new_allocator<Cell> const&) [139]
-----------------------------------------------
                0.00    0.00     127/639         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell>&&) [179]
                0.00    0.00     256/639         std::allocator_traits<std::allocator<Cell> >::select_on_container_copy_construction(std::allocator<Cell> const&) [157]
                0.00    0.00     256/639         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell> const&) [154]
[140]    0.0    0.00    0.00     639         std::allocator<Cell>::allocator(std::allocator<Cell> const&) [140]
                0.00    0.00     639/639         __gnu_cxx::new_allocator<Cell>::new_allocator(__gnu_cxx::new_allocator<Cell> const&) [139]
-----------------------------------------------
                0.00    0.00     127/638         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [287]
                0.00    0.00     128/638         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [33]
                0.00    0.00     383/638         void std::_Destroy_aux<false>::__destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [271]
[141]    0.0    0.00    0.00     638         std::vector<Cell, std::allocator<Cell> >* std::__addressof<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >&) [141]
-----------------------------------------------
                0.00    0.00     256/512         std::vector<Cell, std::allocator<Cell> >::begin() const [153]
                0.00    0.00     256/512         std::vector<Cell, std::allocator<Cell> >::end() const [152]
[142]    0.0    0.00    0.00     512         __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::__normal_iterator(Cell const* const&) [142]
-----------------------------------------------
                0.00    0.00     511/511         std::_Vector_base<Cell, std::allocator<Cell> >::~_Vector_base() [144]
[143]    0.0    0.00    0.00     511         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::~_Vector_impl() [143]
                0.00    0.00     511/767         std::allocator<Cell>::~allocator() [138]
-----------------------------------------------
                0.00    0.00     511/511         std::vector<Cell, std::allocator<Cell> >::~vector() [145]
[144]    0.0    0.00    0.00     511         std::_Vector_base<Cell, std::allocator<Cell> >::~_Vector_base() [144]
                0.00    0.00     511/1535        std::_Vector_base<Cell, std::allocator<Cell> >::_M_deallocate(Cell*, unsigned long) [123]
                0.00    0.00     511/511         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::~_Vector_impl() [143]
-----------------------------------------------
                0.00    0.00     128/511         Board::Board(int, int, int, int, int, XColor*) [13]
                0.00    0.00     383/511         void std::_Destroy<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*) [147]
[145]    0.0    0.00    0.00     511         std::vector<Cell, std::allocator<Cell> >::~vector() [145]
                0.00    0.00     511/2942        std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() [115]
                0.00    0.00     511/1535        void std::_Destroy<Cell*, Cell>(Cell*, Cell*, std::allocator<Cell>&) [125]
                0.00    0.00     511/511         std::_Vector_base<Cell, std::allocator<Cell> >::~_Vector_base() [144]
-----------------------------------------------
                0.00    0.00       8/392         void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [37]
                0.00    0.00     128/392         void std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [31]
                0.00    0.00     128/392         void __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [30]
                0.00    0.00     128/392         void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [32]
[146]    0.0    0.00    0.00     392         std::vector<Cell, std::allocator<Cell> > const& std::forward<std::vector<Cell, std::allocator<Cell> > const&>(std::remove_reference<std::vector<Cell, std::allocator<Cell> > const&>::type&) [146]
-----------------------------------------------
                0.00    0.00     383/383         void std::_Destroy_aux<false>::__destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [271]
[147]    0.0    0.00    0.00     383         void std::_Destroy<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*) [147]
                0.00    0.00     383/511         std::vector<Cell, std::allocator<Cell> >::~vector() [145]
-----------------------------------------------
                0.00    0.00     381/381         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_M_swap_data(std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl&) [178]
[148]    0.0    0.00    0.00     381         std::enable_if<std::__and_<std::is_move_constructible<Cell*>, std::is_move_assignable<Cell*> >::value, void>::type std::swap<Cell*>(Cell*&, Cell*&) [148]
                0.00    0.00    1143/1143        std::remove_reference<Cell*&>::type&& std::move<Cell*&>(Cell*&) [131]
-----------------------------------------------
                0.00    0.00     270/270         bool std::operator==<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&) [167]
[149]    0.0    0.00    0.00     270         std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::base() const [149]
-----------------------------------------------
                0.00    0.00     258/258         bool __gnu_cxx::operator!=<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&) [169]
[150]    0.0    0.00    0.00     258         __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::base() const [150]
-----------------------------------------------
                0.00    0.00     256/256         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [27]
[151]    0.0    0.00    0.00     256         __gnu_cxx::__alloc_traits<std::allocator<Cell> >::_S_select_on_copy(std::allocator<Cell> const&) [151]
                0.00    0.00     256/256         std::allocator_traits<std::allocator<Cell> >::select_on_container_copy_construction(std::allocator<Cell> const&) [157]
-----------------------------------------------
                0.00    0.00     256/256         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [27]
[152]    0.0    0.00    0.00     256         std::vector<Cell, std::allocator<Cell> >::end() const [152]
                0.00    0.00     256/512         __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::__normal_iterator(Cell const* const&) [142]
-----------------------------------------------
                0.00    0.00     256/256         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [27]
[153]    0.0    0.00    0.00     256         std::vector<Cell, std::allocator<Cell> >::begin() const [153]
                0.00    0.00     256/512         __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::__normal_iterator(Cell const* const&) [142]
-----------------------------------------------
                0.00    0.00     256/256         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(unsigned long, std::allocator<Cell> const&) [156]
[154]    0.0    0.00    0.00     256         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell> const&) [154]
                0.00    0.00     256/639         std::allocator<Cell>::allocator(std::allocator<Cell> const&) [140]
-----------------------------------------------
                0.00    0.00     256/256         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(unsigned long, std::allocator<Cell> const&) [156]
[155]    0.0    0.00    0.00     256         std::_Vector_base<Cell, std::allocator<Cell> >::_M_create_storage(unsigned long) [155]
                0.00    0.00     256/1280        std::_Vector_base<Cell, std::allocator<Cell> >::_M_allocate(unsigned long) [128]
-----------------------------------------------
                0.00    0.00     256/256         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [27]
[156]    0.0    0.00    0.00     256         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(unsigned long, std::allocator<Cell> const&) [156]
                0.00    0.00     256/256         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell> const&) [154]
                0.00    0.00     256/256         std::_Vector_base<Cell, std::allocator<Cell> >::_M_create_storage(unsigned long) [155]
-----------------------------------------------
                0.00    0.00     256/256         __gnu_cxx::__alloc_traits<std::allocator<Cell> >::_S_select_on_copy(std::allocator<Cell> const&) [151]
[157]    0.0    0.00    0.00     256         std::allocator_traits<std::allocator<Cell> >::select_on_container_copy_construction(std::allocator<Cell> const&) [157]
                0.00    0.00     256/639         std::allocator<Cell>::allocator(std::allocator<Cell> const&) [140]
-----------------------------------------------
                0.00    0.00     256/256         Cell* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [159]
[158]    0.0    0.00    0.00     256         Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [158]
                0.00    0.00   20736/20736       bool __gnu_cxx::operator!=<Cell const*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&) [61]
                0.00    0.00   20480/20480       __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator*() const [63]
                0.00    0.00   20480/36736       Cell* std::__addressof<Cell>(Cell&) [56]
                0.00    0.00   20480/20480       __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator++() [62]
                0.00    0.00   20480/20480       void std::_Construct<Cell, Cell const&>(Cell*, Cell const&) [64]
-----------------------------------------------
                0.00    0.00     256/256         Cell* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, Cell>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, std::allocator<Cell>&) [160]
[159]    0.0    0.00    0.00     256         Cell* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [159]
                0.00    0.00     256/256         Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [158]
-----------------------------------------------
                0.00    0.00     256/256         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [27]
[160]    0.0    0.00    0.00     256         Cell* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, Cell>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, std::allocator<Cell>&) [160]
                0.00    0.00     256/256         Cell* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [159]
-----------------------------------------------
                0.00    0.00     127/254         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&) [180]
                0.00    0.00     127/254         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell>&&) [179]
[161]    0.0    0.00    0.00     254         std::remove_reference<std::allocator<Cell>&>::type&& std::move<std::allocator<Cell>&>(std::allocator<Cell>&) [161]
-----------------------------------------------
                0.00    0.00      28/252         void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [227]
                0.00    0.00      42/252         Faction::init(int) [294]
                0.00    0.00      70/252         std::vector<int, std::allocator<int> >::_M_range_check(unsigned long) const [189]
                0.00    0.00     112/252         std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [221]
[162]    0.0    0.00    0.00     252         std::vector<int, std::allocator<int> >::size() const [162]
-----------------------------------------------
                0.00    0.00      14/199         bool __gnu_cxx::operator==<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [299]
                0.00    0.00      42/199         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [241]
                0.00    0.00      45/199         int* std::__niter_base<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [203]
                0.00    0.00      98/199         bool __gnu_cxx::operator!=<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [202]
[163]    0.0    0.00    0.00     199         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [163]
-----------------------------------------------
                0.00    0.00     191/191         Board::step(int) [10]
[164]    0.0    0.00    0.00     191         Faction::getArmor() [164]
-----------------------------------------------
                0.00    0.00      28/184         bool __gnu_cxx::__ops::_Val_less_iter::operator()<int, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(int&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [220]
                0.00    0.00      30/184         void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [311]
                0.00    0.00      56/184         void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter) [244]
                0.00    0.00      70/184         bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [210]
[165]    0.0    0.00    0.00     184         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [165]
-----------------------------------------------
                0.00    0.00      28/154         void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [227]
                0.00    0.00      42/154         void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [206]
                0.00    0.00      42/154         void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [205]
                0.00    0.00      42/154         void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [204]
[166]    0.0    0.00    0.00     154         int&& std::forward<int>(std::remove_reference<int>::type&) [166]
-----------------------------------------------
                0.00    0.00     135/135         bool std::operator!=<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&) [168]
[167]    0.0    0.00    0.00     135         bool std::operator==<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&) [167]
                0.00    0.00     270/270         std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::base() const [149]
-----------------------------------------------
                0.00    0.00     135/135         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [287]
[168]    0.0    0.00    0.00     135         bool std::operator!=<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&) [168]
                0.00    0.00     135/135         bool std::operator==<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&) [167]
-----------------------------------------------
                0.00    0.00     129/129         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [33]
[169]    0.0    0.00    0.00     129         bool __gnu_cxx::operator!=<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&) [169]
                0.00    0.00     258/258         __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::base() const [150]
-----------------------------------------------
                0.00    0.00     128/128         std::allocator<Cell>::allocator() [173]
[170]    0.0    0.00    0.00     128         __gnu_cxx::new_allocator<Cell>::new_allocator() [170]
-----------------------------------------------
                0.00    0.00     128/128         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [33]
[171]    0.0    0.00    0.00     128         __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator++() [171]
-----------------------------------------------
                0.00    0.00     128/128         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [33]
[172]    0.0    0.00    0.00     128         __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator*() const [172]
-----------------------------------------------
                0.00    0.00     128/128         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl() [174]
[173]    0.0    0.00    0.00     128         std::allocator<Cell>::allocator() [173]
                0.00    0.00     128/128         __gnu_cxx::new_allocator<Cell>::new_allocator() [170]
-----------------------------------------------
                0.00    0.00     128/128         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base() [175]
[174]    0.0    0.00    0.00     128         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl() [174]
                0.00    0.00     128/128         std::allocator<Cell>::allocator() [173]
-----------------------------------------------
                0.00    0.00     128/128         std::vector<Cell, std::allocator<Cell> >::vector() [176]
[175]    0.0    0.00    0.00     128         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base() [175]
                0.00    0.00     128/128         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl() [174]
-----------------------------------------------
                0.00    0.00     128/128         Board::Board(int, int, int, int, int, XColor*) [13]
[176]    0.0    0.00    0.00     128         std::vector<Cell, std::allocator<Cell> >::vector() [176]
                0.00    0.00     128/128         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base() [175]
-----------------------------------------------
                0.00    0.00     127/127         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [287]
[177]    0.0    0.00    0.00     127         std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator*() const [177]
-----------------------------------------------
                0.00    0.00     127/127         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&) [180]
[178]    0.0    0.00    0.00     127         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_M_swap_data(std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl&) [178]
                0.00    0.00     381/381         std::enable_if<std::__and_<std::is_move_constructible<Cell*>, std::is_move_assignable<Cell*> >::value, void>::type std::swap<Cell*>(Cell*&, Cell*&) [148]
-----------------------------------------------
                0.00    0.00     127/127         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&) [180]
[179]    0.0    0.00    0.00     127         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell>&&) [179]
                0.00    0.00     127/254         std::remove_reference<std::allocator<Cell>&>::type&& std::move<std::allocator<Cell>&>(std::allocator<Cell>&) [161]
                0.00    0.00     127/639         std::allocator<Cell>::allocator(std::allocator<Cell> const&) [140]
-----------------------------------------------
                0.00    0.00     127/127         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> >&&) [182]
[180]    0.0    0.00    0.00     127         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&) [180]
                0.00    0.00     127/254         std::remove_reference<std::allocator<Cell>&>::type&& std::move<std::allocator<Cell>&>(std::allocator<Cell>&) [161]
                0.00    0.00     127/2942        std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() [115]
                0.00    0.00     127/127         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell>&&) [179]
                0.00    0.00     127/127         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_M_swap_data(std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl&) [178]
-----------------------------------------------
                0.00    0.00     127/127         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [287]
[181]    0.0    0.00    0.00     127         std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator++() [181]
-----------------------------------------------
                0.00    0.00     127/127         void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >&&) [183]
[182]    0.0    0.00    0.00     127         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> >&&) [182]
                0.00    0.00     127/127         std::remove_reference<std::vector<Cell, std::allocator<Cell> >&>::type&& std::move<std::vector<Cell, std::allocator<Cell> >&>(std::vector<Cell, std::allocator<Cell> >&) [184]
                0.00    0.00     127/127         std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&) [180]
-----------------------------------------------
                0.00    0.00     127/127         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [287]
[183]    0.0    0.00    0.00     127         void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >&&) [183]
                0.00    0.00     127/127         std::vector<Cell, std::allocator<Cell> >&& std::forward<std::vector<Cell, std::allocator<Cell> > >(std::remove_reference<std::vector<Cell, std::allocator<Cell> > >::type&) [185]
                0.00    0.00     127/62290       operator new(unsigned long, void*) [52]
                0.00    0.00     127/127         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> >&&) [182]
-----------------------------------------------
                0.00    0.00     127/127         std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> >&&) [182]
[184]    0.0    0.00    0.00     127         std::remove_reference<std::vector<Cell, std::allocator<Cell> >&>::type&& std::move<std::vector<Cell, std::allocator<Cell> >&>(std::vector<Cell, std::allocator<Cell> >&) [184]
-----------------------------------------------
                0.00    0.00     127/127         void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >&&) [183]
[185]    0.0    0.00    0.00     127         std::vector<Cell, std::allocator<Cell> >&& std::forward<std::vector<Cell, std::allocator<Cell> > >(std::remove_reference<std::vector<Cell, std::allocator<Cell> > >::type&) [185]
-----------------------------------------------
                0.00    0.00      30/120         void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [311]
                0.00    0.00      42/120         std::vector<int, std::allocator<int> >::push_back(int&&) [207]
                0.00    0.00      48/120         void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter) [244]
[186]    0.0    0.00    0.00     120         std::remove_reference<int&>::type&& std::move<int&>(int&) [186]
-----------------------------------------------
                0.00    0.00      28/84          __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [218]
                0.00    0.00      56/84          std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [197]
[187]    0.0    0.00    0.00      84         __gnu_cxx::new_allocator<int>::max_size() const [187]
-----------------------------------------------
                0.00    0.00      84/84          int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*) [229]
[188]    0.0    0.00    0.00      84         int* std::__niter_base<int*>(int*) [188]
-----------------------------------------------
                0.00    0.00      70/70          std::vector<int, std::allocator<int> >::at(unsigned long) [190]
[189]    0.0    0.00    0.00      70         std::vector<int, std::allocator<int> >::_M_range_check(unsigned long) const [189]
                0.00    0.00      70/252         std::vector<int, std::allocator<int> >::size() const [162]
-----------------------------------------------
                0.00    0.00      70/70          Faction::init(int) [294]
[190]    0.0    0.00    0.00      70         std::vector<int, std::allocator<int> >::at(unsigned long) [190]
                0.00    0.00      70/70          std::vector<int, std::allocator<int> >::_M_range_check(unsigned long) const [189]
                0.00    0.00      70/70          std::vector<int, std::allocator<int> >::operator[](unsigned long) [191]
-----------------------------------------------
                0.00    0.00      70/70          std::vector<int, std::allocator<int> >::at(unsigned long) [190]
[191]    0.0    0.00    0.00      70         std::vector<int, std::allocator<int> >::operator[](unsigned long) [191]
-----------------------------------------------
                0.00    0.00       7/63          std::vector<int, std::allocator<int> >::~vector() [310]
                0.00    0.00      56/63          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [227]
[192]    0.0    0.00    0.00      63         std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [192]
-----------------------------------------------
                0.00    0.00      56/56          std::vector<int, std::allocator<int> >::max_size() const [195]
[193]    0.0    0.00    0.00      56         std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [193]
-----------------------------------------------
                0.00    0.00      56/56          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>) [198]
[194]    0.0    0.00    0.00      56         std::move_iterator<int*>::base() const [194]
-----------------------------------------------
                0.00    0.00      56/56          std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [221]
[195]    0.0    0.00    0.00      56         std::vector<int, std::allocator<int> >::max_size() const [195]
                0.00    0.00      56/56          std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [197]
                0.00    0.00      56/56          std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [193]
-----------------------------------------------
                0.00    0.00      56/56          std::move_iterator<int*> std::__make_move_if_noexcept_iterator<int, std::move_iterator<int*> >(int*) [200]
[196]    0.0    0.00    0.00      56         std::move_iterator<int*>::move_iterator(int*) [196]
-----------------------------------------------
                0.00    0.00      56/56          std::vector<int, std::allocator<int> >::max_size() const [195]
[197]    0.0    0.00    0.00      56         std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [197]
                0.00    0.00      56/84          __gnu_cxx::new_allocator<int>::max_size() const [187]
-----------------------------------------------
                0.00    0.00      56/56          int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [233]
[198]    0.0    0.00    0.00      56         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>) [198]
                0.00    0.00      56/56          int* std::__miter_base<int*>(int*) [199]
                0.00    0.00      56/56          std::move_iterator<int*>::base() const [194]
-----------------------------------------------
                0.00    0.00      56/56          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>) [198]
[199]    0.0    0.00    0.00      56         int* std::__miter_base<int*>(int*) [199]
-----------------------------------------------
                0.00    0.00      56/56          int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [232]
[200]    0.0    0.00    0.00      56         std::move_iterator<int*> std::__make_move_if_noexcept_iterator<int, std::move_iterator<int*> >(int*) [200]
                0.00    0.00      56/56          std::move_iterator<int*>::move_iterator(int*) [196]
-----------------------------------------------
                0.00    0.00       7/51          std::vector<int, std::allocator<int> >::begin() [308]
                0.00    0.00       7/51          std::vector<int, std::allocator<int> >::end() [307]
                0.00    0.00      15/51          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [255]
                0.00    0.00      22/51          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator+(long) const [240]
[201]    0.0    0.00    0.00      51         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [201]
-----------------------------------------------
                0.00    0.00       7/49          void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [316]
                0.00    0.00      42/49          void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [311]
[202]    0.0    0.00    0.00      49         bool __gnu_cxx::operator!=<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [202]
                0.00    0.00      98/199         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [163]
-----------------------------------------------
                0.00    0.00      45/45          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [255]
[203]    0.0    0.00    0.00      45         int* std::__niter_base<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [203]
                0.00    0.00      45/199         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [163]
-----------------------------------------------
                0.00    0.00      42/42          void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [205]
[204]    0.0    0.00    0.00      42         void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [204]
                0.00    0.00      42/154         int&& std::forward<int>(std::remove_reference<int>::type&) [166]
                0.00    0.00      42/62290       operator new(unsigned long, void*) [52]
-----------------------------------------------
                0.00    0.00      14/42          void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [206]
                0.00    0.00      28/42          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [227]
[205]    0.0    0.00    0.00      42         void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [205]
                0.00    0.00      42/154         int&& std::forward<int>(std::remove_reference<int>::type&) [166]
                0.00    0.00      42/42          void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [204]
-----------------------------------------------
                0.00    0.00      42/42          std::vector<int, std::allocator<int> >::push_back(int&&) [207]
[206]    0.0    0.00    0.00      42         void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [206]
                0.00    0.00      42/154         int&& std::forward<int>(std::remove_reference<int>::type&) [166]
                0.00    0.00      28/28          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [227]
                0.00    0.00      14/42          void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [205]
-----------------------------------------------
                0.00    0.00      42/42          Faction::init(int) [294]
[207]    0.0    0.00    0.00      42         std::vector<int, std::allocator<int> >::push_back(int&&) [207]
                0.00    0.00      42/120         std::remove_reference<int&>::type&& std::move<int&>(int&) [186]
                0.00    0.00      42/42          void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [206]
-----------------------------------------------
                0.00    0.00      13/39          __gnu_cxx::new_allocator<Move>::allocate(unsigned long, void const*) [259]
                0.00    0.00      26/39          std::allocator_traits<std::allocator<Move> >::max_size(std::allocator<Move> const&) [237]
[208]    0.0    0.00    0.00      39         __gnu_cxx::new_allocator<Move>::max_size() const [208]
-----------------------------------------------
                0.00    0.00      35/35          void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [311]
[209]    0.0    0.00    0.00      35         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator++() [209]
-----------------------------------------------
                0.00    0.00      35/35          void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [311]
[210]    0.0    0.00    0.00      35         bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [210]
                0.00    0.00      70/184         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [165]
-----------------------------------------------
                0.00    0.00      35/35          void std::_Destroy<int*>(int*, int*) [213]
[211]    0.0    0.00    0.00      35         void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [211]
-----------------------------------------------
                0.00    0.00       7/35          std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [305]
                0.00    0.00      28/35          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [227]
[212]    0.0    0.00    0.00      35         std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [212]
                0.00    0.00      28/28          std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [224]
-----------------------------------------------
                0.00    0.00      35/35          void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [214]
[213]    0.0    0.00    0.00      35         void std::_Destroy<int*>(int*, int*) [213]
                0.00    0.00      35/35          void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [211]
-----------------------------------------------
                0.00    0.00       7/35          std::vector<int, std::allocator<int> >::~vector() [310]
                0.00    0.00      28/35          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [227]
[214]    0.0    0.00    0.00      35         void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [214]
                0.00    0.00      35/35          void std::_Destroy<int*>(int*, int*) [213]
-----------------------------------------------
                0.00    0.00      30/30          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::move_backward<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [253]
[215]    0.0    0.00    0.00      30         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__miter_base<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [215]
-----------------------------------------------
                0.00    0.00       1/29          std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&) [371]
                0.00    0.00       2/29          std::vector<Move, std::allocator<Move> >::~vector() [349]
                0.00    0.00      26/29          void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [265]
[216]    0.0    0.00    0.00      29         std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() [216]
-----------------------------------------------
                0.00    0.00      28/28          std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [224]
[217]    0.0    0.00    0.00      28         __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [217]
-----------------------------------------------
                0.00    0.00      28/28          std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [225]
[218]    0.0    0.00    0.00      28         __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [218]
                0.00    0.00      28/84          __gnu_cxx::new_allocator<int>::max_size() const [187]
-----------------------------------------------
                0.00    0.00      28/28          void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter) [244]
[219]    0.0    0.00    0.00      28         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator--() [219]
-----------------------------------------------
                0.00    0.00      28/28          void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter) [244]
[220]    0.0    0.00    0.00      28         bool __gnu_cxx::__ops::_Val_less_iter::operator()<int, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(int&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [220]
                0.00    0.00      28/184         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [165]
-----------------------------------------------
                0.00    0.00      28/28          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [227]
[221]    0.0    0.00    0.00      28         std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [221]
                0.00    0.00     112/252         std::vector<int, std::allocator<int> >::size() const [162]
                0.00    0.00      56/56          std::vector<int, std::allocator<int> >::max_size() const [195]
                0.00    0.00      28/1077        unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [132]
-----------------------------------------------
                0.00    0.00      28/28          int* std::__copy_move_a<true, int*, int*>(int*, int*, int*) [228]
[222]    0.0    0.00    0.00      28         int* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) [222]
-----------------------------------------------
                0.00    0.00      28/28          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [227]
[223]    0.0    0.00    0.00      28         std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [223]
                0.00    0.00      28/28          std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [225]
-----------------------------------------------
                0.00    0.00      28/28          std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [212]
[224]    0.0    0.00    0.00      28         std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [224]
                0.00    0.00      28/28          __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [217]
-----------------------------------------------
                0.00    0.00      28/28          std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [223]
[225]    0.0    0.00    0.00      28         std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [225]
                0.00    0.00      28/28          __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [218]
-----------------------------------------------
                0.00    0.00      28/28          int* std::uninitialized_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [230]
[226]    0.0    0.00    0.00      28         int* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [226]
                0.00    0.00      28/28          int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [233]
-----------------------------------------------
                0.00    0.00      28/28          void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [206]
[227]    0.0    0.00    0.00      28         void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [227]
                0.00    0.00      56/63          std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [192]
                0.00    0.00      28/28          std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [221]
                0.00    0.00      28/28          std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [223]
                0.00    0.00      28/154         int&& std::forward<int>(std::remove_reference<int>::type&) [166]
                0.00    0.00      28/252         std::vector<int, std::allocator<int> >::size() const [162]
                0.00    0.00      28/42          void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [205]
                0.00    0.00      28/28          int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [232]
                0.00    0.00      28/35          void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [214]
                0.00    0.00      28/35          std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [212]
-----------------------------------------------
                0.00    0.00      28/28          int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*) [229]
[228]    0.0    0.00    0.00      28         int* std::__copy_move_a<true, int*, int*>(int*, int*, int*) [228]
                0.00    0.00      28/28          int* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) [222]
-----------------------------------------------
                0.00    0.00      28/28          int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [233]
[229]    0.0    0.00    0.00      28         int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*) [229]
                0.00    0.00      84/84          int* std::__niter_base<int*>(int*) [188]
                0.00    0.00      28/28          int* std::__copy_move_a<true, int*, int*>(int*, int*, int*) [228]
-----------------------------------------------
                0.00    0.00      28/28          int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&) [231]
[230]    0.0    0.00    0.00      28         int* std::uninitialized_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [230]
                0.00    0.00      28/28          int* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [226]
-----------------------------------------------
                0.00    0.00      28/28          int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [232]
[231]    0.0    0.00    0.00      28         int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&) [231]
                0.00    0.00      28/28          int* std::uninitialized_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [230]
-----------------------------------------------
                0.00    0.00      28/28          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [227]
[232]    0.0    0.00    0.00      28         int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [232]
                0.00    0.00      56/56          std::move_iterator<int*> std::__make_move_if_noexcept_iterator<int, std::move_iterator<int*> >(int*) [200]
                0.00    0.00      28/28          int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&) [231]
-----------------------------------------------
                0.00    0.00      28/28          int* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [226]
[233]    0.0    0.00    0.00      28         int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [233]
                0.00    0.00      56/56          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>) [198]
                0.00    0.00      28/28          int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*) [229]
-----------------------------------------------
                0.00    0.00      26/26          std::vector<Move, std::allocator<Move> >::max_size() const [235]
[234]    0.0    0.00    0.00      26         std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() const [234]
-----------------------------------------------
                0.00    0.00      26/26          std::vector<Move, std::allocator<Move> >::_M_check_len(unsigned long, char const*) const [260]
[235]    0.0    0.00    0.00      26         std::vector<Move, std::allocator<Move> >::max_size() const [235]
                0.00    0.00      26/26          std::allocator_traits<std::allocator<Move> >::max_size(std::allocator<Move> const&) [237]
                0.00    0.00      26/26          std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() const [234]
-----------------------------------------------
                0.00    0.00      26/26          std::move_iterator<Move*> std::__make_move_if_noexcept_iterator<Move, std::move_iterator<Move*> >(Move*) [238]
[236]    0.0    0.00    0.00      26         std::move_iterator<Move*>::move_iterator(Move*) [236]
-----------------------------------------------
                0.00    0.00      26/26          std::vector<Move, std::allocator<Move> >::max_size() const [235]
[237]    0.0    0.00    0.00      26         std::allocator_traits<std::allocator<Move> >::max_size(std::allocator<Move> const&) [237]
                0.00    0.00      26/39          __gnu_cxx::new_allocator<Move>::max_size() const [208]
-----------------------------------------------
                0.00    0.00      26/26          Move* std::__uninitialized_move_if_noexcept_a<Move*, Move*, std::allocator<Move> >(Move*, Move*, Move*, std::allocator<Move>&) [268]
[238]    0.0    0.00    0.00      26         std::move_iterator<Move*> std::__make_move_if_noexcept_iterator<Move, std::move_iterator<Move*> >(Move*) [238]
                0.00    0.00      26/26          std::move_iterator<Move*>::move_iterator(Move*) [236]
-----------------------------------------------
                0.00    0.00       9/25          __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::allocate(unsigned long, void const*) [276]
                0.00    0.00      16/25          std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size(std::allocator<std::vector<Cell, std::allocator<Cell> > > const&) [248]
[239]    0.0    0.00    0.00      25         __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::max_size() const [239]
-----------------------------------------------
                0.00    0.00      22/22          void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [311]
[240]    0.0    0.00    0.00      22         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator+(long) const [240]
                0.00    0.00      22/51          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [201]
-----------------------------------------------
                0.00    0.00       7/21          void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [316]
                0.00    0.00       7/21          void std::__introsort_loop<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter) [312]
                0.00    0.00       7/21          void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [313]
[241]    0.0    0.00    0.00      21         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [241]
                0.00    0.00      42/199         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [163]
-----------------------------------------------
                0.00    0.00      20/20          void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [311]
[242]    0.0    0.00    0.00      20         __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter) [242]
-----------------------------------------------
                0.00    0.00       1/20          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [29]
                0.00    0.00       1/20          std::vector<Cell, std::allocator<Cell> >* std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > >(unsigned long, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >) [34]
                0.00    0.00       2/20          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector() [351]
                0.00    0.00      16/20          void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [37]
[243]    0.0    0.00    0.00      20         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() [243]
-----------------------------------------------
                0.00    0.00      20/20          void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [311]
[244]    0.0    0.00    0.00      20         void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter) [244]
                0.00    0.00      56/184         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [165]
                0.00    0.00      48/120         std::remove_reference<int&>::type&& std::move<int&>(int&) [186]
                0.00    0.00      28/28          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator--() [219]
                0.00    0.00      28/28          bool __gnu_cxx::__ops::_Val_less_iter::operator()<int, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(int&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [220]
-----------------------------------------------
                0.00    0.00      16/16          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size() const [246]
[245]    0.0    0.00    0.00      16         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() const [245]
-----------------------------------------------
                0.00    0.00      16/16          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_check_len(unsigned long, char const*) const [38]
[246]    0.0    0.00    0.00      16         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size() const [246]
                0.00    0.00      16/16          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() const [245]
                0.00    0.00      16/16          std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size(std::allocator<std::vector<Cell, std::allocator<Cell> > > const&) [248]
-----------------------------------------------
                0.00    0.00      16/16          std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> std::__make_move_if_noexcept_iterator<std::vector<Cell, std::allocator<Cell> >, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> >(std::vector<Cell, std::allocator<Cell> >*) [249]
[247]    0.0    0.00    0.00      16         std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::move_iterator(std::vector<Cell, std::allocator<Cell> >*) [247]
-----------------------------------------------
                0.00    0.00      16/16          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size() const [246]
[248]    0.0    0.00    0.00      16         std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size(std::allocator<std::vector<Cell, std::allocator<Cell> > > const&) [248]
                0.00    0.00      16/25          __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::max_size() const [239]
-----------------------------------------------
                0.00    0.00      16/16          std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_move_if_noexcept_a<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [293]
[249]    0.0    0.00    0.00      16         std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> std::__make_move_if_noexcept_iterator<std::vector<Cell, std::allocator<Cell> >, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> >(std::vector<Cell, std::allocator<Cell> >*) [249]
                0.00    0.00      16/16          std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::move_iterator(std::vector<Cell, std::allocator<Cell> >*) [247]
-----------------------------------------------
                0.00    0.00      15/15          void std::_Destroy<Move*>(Move*, Move*) [256]
[250]    0.0    0.00    0.00      15         void std::_Destroy_aux<true>::__destroy<Move*>(Move*, Move*) [250]
-----------------------------------------------
                0.00    0.00       2/15          std::_Vector_base<Move, std::allocator<Move> >::~_Vector_base() [344]
                0.00    0.00      13/15          void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [265]
[251]    0.0    0.00    0.00      15         std::_Vector_base<Move, std::allocator<Move> >::_M_deallocate(Move*, unsigned long) [251]
                0.00    0.00      13/13          std::allocator_traits<std::allocator<Move> >::deallocate(std::allocator<Move>&, Move*, unsigned long) [262]
-----------------------------------------------
                0.00    0.00      15/15          int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*) [254]
[252]    0.0    0.00    0.00      15         int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*) [252]
-----------------------------------------------
                0.00    0.00      15/15          void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [311]
[253]    0.0    0.00    0.00      15         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::move_backward<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [253]
                0.00    0.00      30/30          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__miter_base<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [215]
                0.00    0.00      15/15          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [255]
-----------------------------------------------
                0.00    0.00      15/15          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [255]
[254]    0.0    0.00    0.00      15         int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*) [254]
                0.00    0.00      15/15          int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*) [252]
-----------------------------------------------
                0.00    0.00      15/15          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::move_backward<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [253]
[255]    0.0    0.00    0.00      15         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [255]
                0.00    0.00      45/45          int* std::__niter_base<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [203]
                0.00    0.00      15/15          int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*) [254]
                0.00    0.00      15/51          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [201]
-----------------------------------------------
                0.00    0.00      15/15          void std::_Destroy<Move*, Move>(Move*, Move*, std::allocator<Move>&) [257]
[256]    0.0    0.00    0.00      15         void std::_Destroy<Move*>(Move*, Move*) [256]
                0.00    0.00      15/15          void std::_Destroy_aux<true>::__destroy<Move*>(Move*, Move*) [250]
-----------------------------------------------
                0.00    0.00       2/15          std::vector<Move, std::allocator<Move> >::~vector() [349]
                0.00    0.00      13/15          void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [265]
[257]    0.0    0.00    0.00      15         void std::_Destroy<Move*, Move>(Move*, Move*, std::allocator<Move>&) [257]
                0.00    0.00      15/15          void std::_Destroy<Move*>(Move*, Move*) [256]
-----------------------------------------------
                0.00    0.00      13/13          std::allocator_traits<std::allocator<Move> >::deallocate(std::allocator<Move>&, Move*, unsigned long) [262]
[258]    0.0    0.00    0.00      13         __gnu_cxx::new_allocator<Move>::deallocate(Move*, unsigned long) [258]
-----------------------------------------------
                0.00    0.00      13/13          std::allocator_traits<std::allocator<Move> >::allocate(std::allocator<Move>&, unsigned long) [263]
[259]    0.0    0.00    0.00      13         __gnu_cxx::new_allocator<Move>::allocate(unsigned long, void const*) [259]
                0.00    0.00      13/39          __gnu_cxx::new_allocator<Move>::max_size() const [208]
-----------------------------------------------
                0.00    0.00      13/13          void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [265]
[260]    0.0    0.00    0.00      13         std::vector<Move, std::allocator<Move> >::_M_check_len(unsigned long, char const*) const [260]
                0.00    0.00      52/8044        std::vector<Move, std::allocator<Move> >::size() const [92]
                0.00    0.00      26/26          std::vector<Move, std::allocator<Move> >::max_size() const [235]
                0.00    0.00      13/1077        unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [132]
-----------------------------------------------
                0.00    0.00      13/13          void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [265]
[261]    0.0    0.00    0.00      13         std::_Vector_base<Move, std::allocator<Move> >::_M_allocate(unsigned long) [261]
                0.00    0.00      13/13          std::allocator_traits<std::allocator<Move> >::allocate(std::allocator<Move>&, unsigned long) [263]
-----------------------------------------------
                0.00    0.00      13/13          std::_Vector_base<Move, std::allocator<Move> >::_M_deallocate(Move*, unsigned long) [251]
[262]    0.0    0.00    0.00      13         std::allocator_traits<std::allocator<Move> >::deallocate(std::allocator<Move>&, Move*, unsigned long) [262]
                0.00    0.00      13/13          __gnu_cxx::new_allocator<Move>::deallocate(Move*, unsigned long) [258]
-----------------------------------------------
                0.00    0.00      13/13          std::_Vector_base<Move, std::allocator<Move> >::_M_allocate(unsigned long) [261]
[263]    0.0    0.00    0.00      13         std::allocator_traits<std::allocator<Move> >::allocate(std::allocator<Move>&, unsigned long) [263]
                0.00    0.00      13/13          __gnu_cxx::new_allocator<Move>::allocate(unsigned long, void const*) [259]
-----------------------------------------------
                0.00    0.00      13/13          Move* std::uninitialized_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [266]
[264]    0.0    0.00    0.00      13         Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [264]
                0.00    0.00    4108/4108        bool std::operator!=<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&) [107]
                0.00    0.00    4095/4095        std::move_iterator<Move*>::operator*() const [108]
                0.00    0.00    4095/4095        Move* std::__addressof<Move>(Move&) [111]
                0.00    0.00    4095/4095        std::move_iterator<Move*>::operator++() [109]
                0.00    0.00    4095/4095        void std::_Construct<Move, Move>(Move*, Move&&) [110]
-----------------------------------------------
                0.00    0.00      13/13          void std::vector<Move, std::allocator<Move> >::emplace_back<Move>(Move&&) [85]
[265]    0.0    0.00    0.00      13         void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [265]
                0.00    0.00      26/29          std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() [216]
                0.00    0.00      13/13          std::vector<Move, std::allocator<Move> >::_M_check_len(unsigned long, char const*) const [260]
                0.00    0.00      13/13          std::_Vector_base<Move, std::allocator<Move> >::_M_allocate(unsigned long) [261]
                0.00    0.00      13/36469       Move&& std::forward<Move>(std::remove_reference<Move>::type&) [57]
                0.00    0.00      13/8044        std::vector<Move, std::allocator<Move> >::size() const [92]
                0.00    0.00      13/10787       void std::allocator_traits<std::allocator<Move> >::construct<Move, Move>(std::allocator<Move>&, Move*, Move&&) [84]
                0.00    0.00      13/13          Move* std::__uninitialized_move_if_noexcept_a<Move*, Move*, std::allocator<Move> >(Move*, Move*, Move*, std::allocator<Move>&) [268]
                0.00    0.00      13/15          void std::_Destroy<Move*, Move>(Move*, Move*, std::allocator<Move>&) [257]
                0.00    0.00      13/15          std::_Vector_base<Move, std::allocator<Move> >::_M_deallocate(Move*, unsigned long) [251]
-----------------------------------------------
                0.00    0.00      13/13          Move* std::__uninitialized_copy_a<std::move_iterator<Move*>, Move*, Move>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*, std::allocator<Move>&) [267]
[266]    0.0    0.00    0.00      13         Move* std::uninitialized_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [266]
                0.00    0.00      13/13          Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [264]
-----------------------------------------------
                0.00    0.00      13/13          Move* std::__uninitialized_move_if_noexcept_a<Move*, Move*, std::allocator<Move> >(Move*, Move*, Move*, std::allocator<Move>&) [268]
[267]    0.0    0.00    0.00      13         Move* std::__uninitialized_copy_a<std::move_iterator<Move*>, Move*, Move>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*, std::allocator<Move>&) [267]
                0.00    0.00      13/13          Move* std::uninitialized_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [266]
-----------------------------------------------
                0.00    0.00      13/13          void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [265]
[268]    0.0    0.00    0.00      13         Move* std::__uninitialized_move_if_noexcept_a<Move*, Move*, std::allocator<Move> >(Move*, Move*, Move*, std::allocator<Move>&) [268]
                0.00    0.00      26/26          std::move_iterator<Move*> std::__make_move_if_noexcept_iterator<Move, std::move_iterator<Move*> >(Move*) [238]
                0.00    0.00      13/13          Move* std::__uninitialized_copy_a<std::move_iterator<Move*>, Move*, Move>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*, std::allocator<Move>&) [267]
-----------------------------------------------
                0.00    0.00       4/12          __gnu_cxx::new_allocator<Faction>::allocate(unsigned long, void const*) [322]
                0.00    0.00       8/12          std::allocator_traits<std::allocator<Faction> >::max_size(std::allocator<Faction> const&) [286]
[269]    0.0    0.00    0.00      12         __gnu_cxx::new_allocator<Faction>::max_size() const [269]
-----------------------------------------------
                0.00    0.00      12/12          Faction* std::__copy_move_a2<true, Faction*, Faction*>(Faction*, Faction*, Faction*) [330]
[270]    0.0    0.00    0.00      12         Faction* std::__niter_base<Faction*>(Faction*) [270]
-----------------------------------------------
                0.00    0.00      11/11          void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [273]
[271]    0.0    0.00    0.00      11         void std::_Destroy_aux<false>::__destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [271]
                0.00    0.00     383/638         std::vector<Cell, std::allocator<Cell> >* std::__addressof<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >&) [141]
                0.00    0.00     383/383         void std::_Destroy<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*) [147]
-----------------------------------------------
                0.00    0.00       1/11          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [29]
                0.00    0.00       2/11          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~_Vector_base() [348]
                0.00    0.00       8/11          void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [37]
[272]    0.0    0.00    0.00      11         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [272]
                0.00    0.00       9/9           std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::deallocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, unsigned long) [279]
-----------------------------------------------
                0.00    0.00      11/11          void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [274]
[273]    0.0    0.00    0.00      11         void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [273]
                0.00    0.00      11/11          void std::_Destroy_aux<false>::__destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [271]
-----------------------------------------------
                0.00    0.00       1/11          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [29]
                0.00    0.00       2/11          std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector() [351]
                0.00    0.00       8/11          void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [37]
[274]    0.0    0.00    0.00      11         void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [274]
                0.00    0.00      11/11          void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [273]
-----------------------------------------------
                0.00    0.00       9/9           std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::deallocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, unsigned long) [279]
[275]    0.0    0.00    0.00       9         __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [275]
-----------------------------------------------
                0.00    0.00       9/9           std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::allocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, unsigned long) [280]
[276]    0.0    0.00    0.00       9         __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::allocate(unsigned long, void const*) [276]
                0.00    0.00       9/25          __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::max_size() const [239]
-----------------------------------------------
                0.00    0.00       1/9           std::vector<Faction, std::allocator<Faction> >::~vector() [381]
                0.00    0.00       8/9           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [15]
[277]    0.0    0.00    0.00       9         std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() [277]
-----------------------------------------------
                0.00    0.00       1/9           std::vector<Cell, std::allocator<Cell> >* std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > >(unsigned long, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >) [34]
                0.00    0.00       8/9           void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [37]
[278]    0.0    0.00    0.00       9         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate(unsigned long) [278]
                0.00    0.00       9/9           std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::allocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, unsigned long) [280]
-----------------------------------------------
                0.00    0.00       9/9           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [272]
[279]    0.0    0.00    0.00       9         std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::deallocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, unsigned long) [279]
                0.00    0.00       9/9           __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [275]
-----------------------------------------------
                0.00    0.00       9/9           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate(unsigned long) [278]
[280]    0.0    0.00    0.00       9         std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::allocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, unsigned long) [280]
                0.00    0.00       9/9           __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::allocate(unsigned long, void const*) [276]
-----------------------------------------------
                0.00    0.00       9/9           std::enable_if<std::__and_<std::is_move_constructible<Move*>, std::is_move_assignable<Move*> >::value, void>::type std::swap<Move*>(Move*&, Move*&) [335]
[281]    0.0    0.00    0.00       9         std::remove_reference<Move*&>::type&& std::move<Move*&>(Move*&) [281]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Faction, std::allocator<Faction> >::max_size() const [284]
[282]    0.0    0.00    0.00       8         std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() const [282]
-----------------------------------------------
                0.00    0.00       8/8           decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Faction*>(std::move_iterator<Faction*>) [288]
[283]    0.0    0.00    0.00       8         std::move_iterator<Faction*>::base() const [283]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Faction, std::allocator<Faction> >::_M_check_len(unsigned long, char const*) const [323]
[284]    0.0    0.00    0.00       8         std::vector<Faction, std::allocator<Faction> >::max_size() const [284]
                0.00    0.00       8/8           std::allocator_traits<std::allocator<Faction> >::max_size(std::allocator<Faction> const&) [286]
                0.00    0.00       8/8           std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() const [282]
-----------------------------------------------
                0.00    0.00       8/8           std::move_iterator<Faction*> std::__make_move_if_noexcept_iterator<Faction, std::move_iterator<Faction*> >(Faction*) [292]
[285]    0.0    0.00    0.00       8         std::move_iterator<Faction*>::move_iterator(Faction*) [285]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Faction, std::allocator<Faction> >::max_size() const [284]
[286]    0.0    0.00    0.00       8         std::allocator_traits<std::allocator<Faction> >::max_size(std::allocator<Faction> const&) [286]
                0.00    0.00       8/12          __gnu_cxx::new_allocator<Faction>::max_size() const [269]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [290]
[287]    0.0    0.00    0.00       8         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [287]
                0.00    0.00     135/135         bool std::operator!=<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&) [168]
                0.00    0.00     127/127         std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator*() const [177]
                0.00    0.00     127/638         std::vector<Cell, std::allocator<Cell> >* std::__addressof<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >&) [141]
                0.00    0.00     127/127         std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator++() [181]
                0.00    0.00     127/127         void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >&&) [183]
-----------------------------------------------
                0.00    0.00       8/8           Faction* std::copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [334]
[288]    0.0    0.00    0.00       8         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Faction*>(std::move_iterator<Faction*>) [288]
                0.00    0.00       8/8           std::move_iterator<Faction*>::base() const [283]
                0.00    0.00       8/8           Faction* std::__miter_base<Faction*>(Faction*) [289]
-----------------------------------------------
                0.00    0.00       8/8           decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Faction*>(std::move_iterator<Faction*>) [288]
[289]    0.0    0.00    0.00       8         Faction* std::__miter_base<Faction*>(Faction*) [289]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [291]
[290]    0.0    0.00    0.00       8         std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [290]
                0.00    0.00       8/8           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [287]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_move_if_noexcept_a<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [293]
[291]    0.0    0.00    0.00       8         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [291]
                0.00    0.00       8/8           std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [290]
-----------------------------------------------
                0.00    0.00       8/8           Faction* std::__uninitialized_move_if_noexcept_a<Faction*, Faction*, std::allocator<Faction> >(Faction*, Faction*, Faction*, std::allocator<Faction>&) [333]
[292]    0.0    0.00    0.00       8         std::move_iterator<Faction*> std::__make_move_if_noexcept_iterator<Faction, std::move_iterator<Faction*> >(Faction*) [292]
                0.00    0.00       8/8           std::move_iterator<Faction*>::move_iterator(Faction*) [285]
-----------------------------------------------
                0.00    0.00       8/8           void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&) [37]
[293]    0.0    0.00    0.00       8         std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_move_if_noexcept_a<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [293]
                0.00    0.00      16/16          std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> std::__make_move_if_noexcept_iterator<std::vector<Cell, std::allocator<Cell> >, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> >(std::vector<Cell, std::allocator<Cell> >*) [249]
                0.00    0.00       8/8           std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [291]
-----------------------------------------------
                0.00    0.00       7/7           Board::init() [22]
[294]    0.0    0.00    0.00       7         Faction::init(int) [294]
                0.00    0.00      70/70          std::vector<int, std::allocator<int> >::at(unsigned long) [190]
                0.00    0.00      42/42          std::vector<int, std::allocator<int> >::push_back(int&&) [207]
                0.00    0.00      42/252         std::vector<int, std::allocator<int> >::size() const [162]
                0.00    0.00       7/7           std::vector<int, std::allocator<int> >::vector() [309]
                0.00    0.00       7/7           std::vector<int, std::allocator<int> >::end() [307]
                0.00    0.00       7/7           std::vector<int, std::allocator<int> >::begin() [308]
                0.00    0.00       7/7           void std::sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [315]
                0.00    0.00       7/7           std::vector<int, std::allocator<int> >::~vector() [310]
-----------------------------------------------
                0.00    0.00       7/7           void std::allocator_traits<std::allocator<Faction> >::construct<Faction>(std::allocator<Faction>&, Faction*) [306]
[295]    0.0    0.00    0.00       7         void __gnu_cxx::new_allocator<Faction>::construct<Faction>(Faction*) [295]
                0.00    0.00       7/62290       operator new(unsigned long, void*) [52]
-----------------------------------------------
                0.00    0.00       7/7           std::allocator<int>::allocator() [300]
[296]    0.0    0.00    0.00       7         __gnu_cxx::new_allocator<int>::new_allocator() [296]
-----------------------------------------------
                0.00    0.00       7/7           std::allocator<int>::~allocator() [301]
[297]    0.0    0.00    0.00       7         __gnu_cxx::new_allocator<int>::~new_allocator() [297]
-----------------------------------------------
                0.00    0.00       7/7           void std::sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [315]
[298]    0.0    0.00    0.00       7         __gnu_cxx::__ops::__iter_less_iter() [298]
-----------------------------------------------
                0.00    0.00       7/7           void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [311]
[299]    0.0    0.00    0.00       7         bool __gnu_cxx::operator==<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [299]
                0.00    0.00      14/199         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [163]
-----------------------------------------------
                0.00    0.00       7/7           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [302]
[300]    0.0    0.00    0.00       7         std::allocator<int>::allocator() [300]
                0.00    0.00       7/7           __gnu_cxx::new_allocator<int>::new_allocator() [296]
-----------------------------------------------
                0.00    0.00       7/7           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [303]
[301]    0.0    0.00    0.00       7         std::allocator<int>::~allocator() [301]
                0.00    0.00       7/7           __gnu_cxx::new_allocator<int>::~new_allocator() [297]
-----------------------------------------------
                0.00    0.00       7/7           std::_Vector_base<int, std::allocator<int> >::_Vector_base() [304]
[302]    0.0    0.00    0.00       7         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [302]
                0.00    0.00       7/7           std::allocator<int>::allocator() [300]
-----------------------------------------------
                0.00    0.00       7/7           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [305]
[303]    0.0    0.00    0.00       7         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [303]
                0.00    0.00       7/7           std::allocator<int>::~allocator() [301]
-----------------------------------------------
                0.00    0.00       7/7           std::vector<int, std::allocator<int> >::vector() [309]
[304]    0.0    0.00    0.00       7         std::_Vector_base<int, std::allocator<int> >::_Vector_base() [304]
                0.00    0.00       7/7           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [302]
-----------------------------------------------
                0.00    0.00       7/7           std::vector<int, std::allocator<int> >::~vector() [310]
[305]    0.0    0.00    0.00       7         std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [305]
                0.00    0.00       7/35          std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [212]
                0.00    0.00       7/7           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [303]
-----------------------------------------------
                0.00    0.00       3/7           void std::vector<Faction, std::allocator<Faction> >::emplace_back<>() [14]
                0.00    0.00       4/7           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [15]
[306]    0.0    0.00    0.00       7         void std::allocator_traits<std::allocator<Faction> >::construct<Faction>(std::allocator<Faction>&, Faction*) [306]
                0.00    0.00       7/7           void __gnu_cxx::new_allocator<Faction>::construct<Faction>(Faction*) [295]
-----------------------------------------------
                0.00    0.00       7/7           Faction::init(int) [294]
[307]    0.0    0.00    0.00       7         std::vector<int, std::allocator<int> >::end() [307]
                0.00    0.00       7/51          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [201]
-----------------------------------------------
                0.00    0.00       7/7           Faction::init(int) [294]
[308]    0.0    0.00    0.00       7         std::vector<int, std::allocator<int> >::begin() [308]
                0.00    0.00       7/51          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [201]
-----------------------------------------------
                0.00    0.00       7/7           Faction::init(int) [294]
[309]    0.0    0.00    0.00       7         std::vector<int, std::allocator<int> >::vector() [309]
                0.00    0.00       7/7           std::_Vector_base<int, std::allocator<int> >::_Vector_base() [304]
-----------------------------------------------
                0.00    0.00       7/7           Faction::init(int) [294]
[310]    0.0    0.00    0.00       7         std::vector<int, std::allocator<int> >::~vector() [310]
                0.00    0.00       7/63          std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [192]
                0.00    0.00       7/35          void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [214]
                0.00    0.00       7/7           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [305]
-----------------------------------------------
                0.00    0.00       7/7           void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [313]
[311]    0.0    0.00    0.00       7         void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [311]
                0.00    0.00      42/49          bool __gnu_cxx::operator!=<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [202]
                0.00    0.00      35/35          bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [210]
                0.00    0.00      35/35          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator++() [209]
                0.00    0.00      30/120         std::remove_reference<int&>::type&& std::move<int&>(int&) [186]
                0.00    0.00      30/184         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [165]
                0.00    0.00      22/22          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator+(long) const [240]
                0.00    0.00      20/20          __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter) [242]
                0.00    0.00      20/20          void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter) [244]
                0.00    0.00      15/15          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::move_backward<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [253]
                0.00    0.00       7/7           bool __gnu_cxx::operator==<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [299]
-----------------------------------------------
                0.00    0.00       7/7           void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [316]
[312]    0.0    0.00    0.00       7         void std::__introsort_loop<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter) [312]
                0.00    0.00       7/21          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [241]
-----------------------------------------------
                0.00    0.00       7/7           void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [316]
[313]    0.0    0.00    0.00       7         void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [313]
                0.00    0.00       7/21          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [241]
                0.00    0.00       7/7           void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [311]
-----------------------------------------------
                0.00    0.00       7/7           void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [316]
[314]    0.0    0.00    0.00       7         std::__lg(long) [314]
-----------------------------------------------
                0.00    0.00       7/7           Faction::init(int) [294]
[315]    0.0    0.00    0.00       7         void std::sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [315]
                0.00    0.00       7/7           __gnu_cxx::__ops::__iter_less_iter() [298]
                0.00    0.00       7/7           void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [316]
-----------------------------------------------
                0.00    0.00       7/7           void std::sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [315]
[316]    0.0    0.00    0.00       7         void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [316]
                0.00    0.00       7/49          bool __gnu_cxx::operator!=<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [202]
                0.00    0.00       7/21          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [241]
                0.00    0.00       7/7           std::__lg(long) [314]
                0.00    0.00       7/7           void std::__introsort_loop<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter) [312]
                0.00    0.00       7/7           void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter) [313]
-----------------------------------------------
                0.00    0.00       5/5           void std::_Destroy<Faction*>(Faction*, Faction*) [319]
[317]    0.0    0.00    0.00       5         void std::_Destroy_aux<true>::__destroy<Faction*>(Faction*, Faction*) [317]
-----------------------------------------------
                0.00    0.00       1/5           std::_Vector_base<Faction, std::allocator<Faction> >::~_Vector_base() [376]
                0.00    0.00       4/5           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [15]
[318]    0.0    0.00    0.00       5         std::_Vector_base<Faction, std::allocator<Faction> >::_M_deallocate(Faction*, unsigned long) [318]
                0.00    0.00       4/4           std::allocator_traits<std::allocator<Faction> >::deallocate(std::allocator<Faction>&, Faction*, unsigned long) [326]
-----------------------------------------------
                0.00    0.00       5/5           void std::_Destroy<Faction*, Faction>(Faction*, Faction*, std::allocator<Faction>&) [320]
[319]    0.0    0.00    0.00       5         void std::_Destroy<Faction*>(Faction*, Faction*) [319]
                0.00    0.00       5/5           void std::_Destroy_aux<true>::__destroy<Faction*>(Faction*, Faction*) [317]
-----------------------------------------------
                0.00    0.00       1/5           std::vector<Faction, std::allocator<Faction> >::~vector() [381]
                0.00    0.00       4/5           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [15]
[320]    0.0    0.00    0.00       5         void std::_Destroy<Faction*, Faction>(Faction*, Faction*, std::allocator<Faction>&) [320]
                0.00    0.00       5/5           void std::_Destroy<Faction*>(Faction*, Faction*) [319]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator_traits<std::allocator<Faction> >::deallocate(std::allocator<Faction>&, Faction*, unsigned long) [326]
[321]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<Faction>::deallocate(Faction*, unsigned long) [321]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator_traits<std::allocator<Faction> >::allocate(std::allocator<Faction>&, unsigned long) [327]
[322]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<Faction>::allocate(unsigned long, void const*) [322]
                0.00    0.00       4/12          __gnu_cxx::new_allocator<Faction>::max_size() const [269]
-----------------------------------------------
                0.00    0.00       4/4           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [15]
[323]    0.0    0.00    0.00       4         std::vector<Faction, std::allocator<Faction> >::_M_check_len(unsigned long, char const*) const [323]
                0.00    0.00      16/22596       std::vector<Faction, std::allocator<Faction> >::size() const [60]
                0.00    0.00       8/8           std::vector<Faction, std::allocator<Faction> >::max_size() const [284]
                0.00    0.00       4/1077        unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [132]
-----------------------------------------------
                0.00    0.00       4/4           Faction* std::__copy_move_a<true, Faction*, Faction*>(Faction*, Faction*, Faction*) [329]
[324]    0.0    0.00    0.00       4         Faction* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Faction>(Faction const*, Faction const*, Faction*) [324]
-----------------------------------------------
                0.00    0.00       4/4           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [15]
[325]    0.0    0.00    0.00       4         std::_Vector_base<Faction, std::allocator<Faction> >::_M_allocate(unsigned long) [325]
                0.00    0.00       4/4           std::allocator_traits<std::allocator<Faction> >::allocate(std::allocator<Faction>&, unsigned long) [327]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<Faction, std::allocator<Faction> >::_M_deallocate(Faction*, unsigned long) [318]
[326]    0.0    0.00    0.00       4         std::allocator_traits<std::allocator<Faction> >::deallocate(std::allocator<Faction>&, Faction*, unsigned long) [326]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<Faction>::deallocate(Faction*, unsigned long) [321]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<Faction, std::allocator<Faction> >::_M_allocate(unsigned long) [325]
[327]    0.0    0.00    0.00       4         std::allocator_traits<std::allocator<Faction> >::allocate(std::allocator<Faction>&, unsigned long) [327]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<Faction>::allocate(unsigned long, void const*) [322]
-----------------------------------------------
                0.00    0.00       4/4           Faction* std::uninitialized_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [331]
[328]    0.0    0.00    0.00       4         Faction* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [328]
                0.00    0.00       4/4           Faction* std::copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [334]
-----------------------------------------------
                0.00    0.00       4/4           Faction* std::__copy_move_a2<true, Faction*, Faction*>(Faction*, Faction*, Faction*) [330]
[329]    0.0    0.00    0.00       4         Faction* std::__copy_move_a<true, Faction*, Faction*>(Faction*, Faction*, Faction*) [329]
                0.00    0.00       4/4           Faction* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Faction>(Faction const*, Faction const*, Faction*) [324]
-----------------------------------------------
                0.00    0.00       4/4           Faction* std::copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [334]
[330]    0.0    0.00    0.00       4         Faction* std::__copy_move_a2<true, Faction*, Faction*>(Faction*, Faction*, Faction*) [330]
                0.00    0.00      12/12          Faction* std::__niter_base<Faction*>(Faction*) [270]
                0.00    0.00       4/4           Faction* std::__copy_move_a<true, Faction*, Faction*>(Faction*, Faction*, Faction*) [329]
-----------------------------------------------
                0.00    0.00       4/4           Faction* std::__uninitialized_copy_a<std::move_iterator<Faction*>, Faction*, Faction>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*, std::allocator<Faction>&) [332]
[331]    0.0    0.00    0.00       4         Faction* std::uninitialized_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [331]
                0.00    0.00       4/4           Faction* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [328]
-----------------------------------------------
                0.00    0.00       4/4           Faction* std::__uninitialized_move_if_noexcept_a<Faction*, Faction*, std::allocator<Faction> >(Faction*, Faction*, Faction*, std::allocator<Faction>&) [333]
[332]    0.0    0.00    0.00       4         Faction* std::__uninitialized_copy_a<std::move_iterator<Faction*>, Faction*, Faction>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*, std::allocator<Faction>&) [332]
                0.00    0.00       4/4           Faction* std::uninitialized_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [331]
-----------------------------------------------
                0.00    0.00       4/4           void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>() [15]
[333]    0.0    0.00    0.00       4         Faction* std::__uninitialized_move_if_noexcept_a<Faction*, Faction*, std::allocator<Faction> >(Faction*, Faction*, Faction*, std::allocator<Faction>&) [333]
                0.00    0.00       8/8           std::move_iterator<Faction*> std::__make_move_if_noexcept_iterator<Faction, std::move_iterator<Faction*> >(Faction*) [292]
                0.00    0.00       4/4           Faction* std::__uninitialized_copy_a<std::move_iterator<Faction*>, Faction*, Faction>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*, std::allocator<Faction>&) [332]
-----------------------------------------------
                0.00    0.00       4/4           Faction* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [328]
[334]    0.0    0.00    0.00       4         Faction* std::copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [334]
                0.00    0.00       8/8           decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Faction*>(std::move_iterator<Faction*>) [288]
                0.00    0.00       4/4           Faction* std::__copy_move_a2<true, Faction*, Faction*>(Faction*, Faction*, Faction*) [330]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_M_swap_data(std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl&) [368]
[335]    0.0    0.00    0.00       3         std::enable_if<std::__and_<std::is_move_constructible<Move*>, std::is_move_assignable<Move*> >::value, void>::type std::swap<Move*>(Move*&, Move*&) [335]
                0.00    0.00       9/9           std::remove_reference<Move*&>::type&& std::move<Move*&>(Move*&) [281]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<Move>::~allocator() [340]
[336]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<Move>::~new_allocator() [336]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::vector<Cell, std::allocator<Cell> > >::allocator() [341]
[337]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::new_allocator() [337]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::vector<Cell, std::allocator<Cell> > >::~allocator() [342]
[338]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::~new_allocator() [338]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::begin() const [362]
                0.00    0.00       1/2           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::end() const [361]
[339]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::__normal_iterator(std::vector<Cell, std::allocator<Cell> > const* const&) [339]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::~_Vector_impl() [343]
[340]    0.0    0.00    0.00       2         std::allocator<Move>::~allocator() [340]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<Move>::~new_allocator() [336]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::_Vector_impl() [345]
[341]    0.0    0.00    0.00       2         std::allocator<std::vector<Cell, std::allocator<Cell> > >::allocator() [341]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::new_allocator() [337]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::~_Vector_impl() [346]
[342]    0.0    0.00    0.00       2         std::allocator<std::vector<Cell, std::allocator<Cell> > >::~allocator() [342]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::~new_allocator() [338]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Move, std::allocator<Move> >::~_Vector_base() [344]
[343]    0.0    0.00    0.00       2         std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::~_Vector_impl() [343]
                0.00    0.00       2/2           std::allocator<Move>::~allocator() [340]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Move, std::allocator<Move> >::~vector() [349]
[344]    0.0    0.00    0.00       2         std::_Vector_base<Move, std::allocator<Move> >::~_Vector_base() [344]
                0.00    0.00       2/15          std::_Vector_base<Move, std::allocator<Move> >::_M_deallocate(Move*, unsigned long) [251]
                0.00    0.00       2/2           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::~_Vector_impl() [343]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_base() [347]
[345]    0.0    0.00    0.00       2         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::_Vector_impl() [345]
                0.00    0.00       2/2           std::allocator<std::vector<Cell, std::allocator<Cell> > >::allocator() [341]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~_Vector_base() [348]
[346]    0.0    0.00    0.00       2         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::~_Vector_impl() [346]
                0.00    0.00       2/2           std::allocator<std::vector<Cell, std::allocator<Cell> > >::~allocator() [342]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::vector() [350]
[347]    0.0    0.00    0.00       2         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_base() [347]
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::_Vector_impl() [345]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector() [351]
[348]    0.0    0.00    0.00       2         std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~_Vector_base() [348]
                0.00    0.00       2/11          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [272]
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::~_Vector_impl() [346]
-----------------------------------------------
                0.00    0.00       1/2           Board::Board(int, int, int, int, int, XColor*) [13]
                0.00    0.00       1/2           std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::~priority_queue() [377]
[349]    0.0    0.00    0.00       2         std::vector<Move, std::allocator<Move> >::~vector() [349]
                0.00    0.00       2/29          std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() [216]
                0.00    0.00       2/15          void std::_Destroy<Move*, Move>(Move*, Move*, std::allocator<Move>&) [257]
                0.00    0.00       2/2           std::_Vector_base<Move, std::allocator<Move> >::~_Vector_base() [344]
-----------------------------------------------
                0.00    0.00       2/2           Board::Board(int, int, int, int, int, XColor*) [13]
[350]    0.0    0.00    0.00       2         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::vector() [350]
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_base() [347]
-----------------------------------------------
                0.00    0.00       1/2           Board::Board(int, int, int, int, int, XColor*) [13]
                0.00    0.00       1/2           Board::~Board() [355]
[351]    0.0    0.00    0.00       2         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector() [351]
                0.00    0.00       2/20          std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() [243]
                0.00    0.00       2/11          void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&) [274]
                0.00    0.00       2/2           std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~_Vector_base() [348]
-----------------------------------------------
                0.00    0.00       1/2           std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&) [371]
                0.00    0.00       1/2           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl(std::allocator<Move>&&) [370]
[352]    0.0    0.00    0.00       2         std::remove_reference<std::allocator<Move>&>::type&& std::move<std::allocator<Move>&>(std::allocator<Move>&) [352]
-----------------------------------------------
                0.00    0.00       1/2           std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [26]
                0.00    0.00       1/2           std::vector<Move, std::allocator<Move> >::vector(std::vector<Move, std::allocator<Move> >&&) [379]
[353]    0.0    0.00    0.00       2         std::remove_reference<std::vector<Move, std::allocator<Move> >&>::type&& std::move<std::vector<Move, std::allocator<Move> >&>(std::vector<Move, std::allocator<Move> >&) [353]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[354]    0.0    0.00    0.00       1         VirtualRootWindowOfScreen(Screen*) [354]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[355]    0.0    0.00    0.00       1         Board::~Board() [355]
                0.00    0.00       1/1           std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::~priority_queue() [377]
                0.00    0.00       1/2           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector() [351]
                0.00    0.00       1/1           std::vector<Faction, std::allocator<Faction> >::~vector() [381]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Move>::allocator() [365]
[356]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Move>::new_allocator() [356]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Move>::allocator(std::allocator<Move> const&) [364]
[357]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Move>::new_allocator(__gnu_cxx::new_allocator<Move> const&) [357]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Faction>::allocator() [366]
[358]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Faction>::new_allocator() [358]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Faction>::~allocator() [367]
[359]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Faction>::~new_allocator() [359]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [29]
[360]    0.0    0.00    0.00       1         __gnu_cxx::__alloc_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_S_propagate_on_copy_assign() [360]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [29]
[361]    0.0    0.00    0.00       1         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::end() const [361]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::__normal_iterator(std::vector<Cell, std::allocator<Cell> > const* const&) [339]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [29]
[362]    0.0    0.00    0.00       1         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::begin() const [362]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::__normal_iterator(std::vector<Cell, std::allocator<Cell> > const* const&) [339]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&) [29]
[363]    0.0    0.00    0.00       1         std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::capacity() const [363]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl(std::allocator<Move>&&) [370]
[364]    0.0    0.00    0.00       1         std::allocator<Move>::allocator(std::allocator<Move> const&) [364]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Move>::new_allocator(__gnu_cxx::new_allocator<Move> const&) [357]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl() [369]
[365]    0.0    0.00    0.00       1         std::allocator<Move>::allocator() [365]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Move>::new_allocator() [356]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::_Vector_impl() [373]
[366]    0.0    0.00    0.00       1         std::allocator<Faction>::allocator() [366]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Faction>::new_allocator() [358]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::~_Vector_impl() [374]
[367]    0.0    0.00    0.00       1         std::allocator<Faction>::~allocator() [367]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Faction>::~new_allocator() [359]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&) [371]
[368]    0.0    0.00    0.00       1         std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_M_swap_data(std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl&) [368]
                0.00    0.00       3/3           std::enable_if<std::__and_<std::is_move_constructible<Move*>, std::is_move_assignable<Move*> >::value, void>::type std::swap<Move*>(Move*&, Move*&) [335]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_base() [372]
[369]    0.0    0.00    0.00       1         std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl() [369]
                0.00    0.00       1/1           std::allocator<Move>::allocator() [365]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&) [371]
[370]    0.0    0.00    0.00       1         std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl(std::allocator<Move>&&) [370]
                0.00    0.00       1/2           std::remove_reference<std::allocator<Move>&>::type&& std::move<std::allocator<Move>&>(std::allocator<Move>&) [352]
                0.00    0.00       1/1           std::allocator<Move>::allocator(std::allocator<Move> const&) [364]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Move, std::allocator<Move> >::vector(std::vector<Move, std::allocator<Move> >&&) [379]
[371]    0.0    0.00    0.00       1         std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&) [371]
                0.00    0.00       1/2           std::remove_reference<std::allocator<Move>&>::type&& std::move<std::allocator<Move>&>(std::allocator<Move>&) [352]
                0.00    0.00       1/29          std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() [216]
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl(std::allocator<Move>&&) [370]
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_M_swap_data(std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl&) [368]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Move, std::allocator<Move> >::vector() [378]
[372]    0.0    0.00    0.00       1         std::_Vector_base<Move, std::allocator<Move> >::_Vector_base() [372]
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl() [369]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_base() [375]
[373]    0.0    0.00    0.00       1         std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::_Vector_impl() [373]
                0.00    0.00       1/1           std::allocator<Faction>::allocator() [366]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::~_Vector_base() [376]
[374]    0.0    0.00    0.00       1         std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::~_Vector_impl() [374]
                0.00    0.00       1/1           std::allocator<Faction>::~allocator() [367]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Faction, std::allocator<Faction> >::vector() [380]
[375]    0.0    0.00    0.00       1         std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_base() [375]
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::_Vector_impl() [373]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Faction, std::allocator<Faction> >::~vector() [381]
[376]    0.0    0.00    0.00       1         std::_Vector_base<Faction, std::allocator<Faction> >::~_Vector_base() [376]
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::~_Vector_impl() [374]
                0.00    0.00       1/5           std::_Vector_base<Faction, std::allocator<Faction> >::_M_deallocate(Faction*, unsigned long) [318]
-----------------------------------------------
                0.00    0.00       1/1           Board::~Board() [355]
[377]    0.0    0.00    0.00       1         std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::~priority_queue() [377]
                0.00    0.00       1/2           std::vector<Move, std::allocator<Move> >::~vector() [349]
-----------------------------------------------
                0.00    0.00       1/1           Board::Board(int, int, int, int, int, XColor*) [13]
[378]    0.0    0.00    0.00       1         std::vector<Move, std::allocator<Move> >::vector() [378]
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_base() [372]
-----------------------------------------------
                0.00    0.00       1/1           std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [26]
[379]    0.0    0.00    0.00       1         std::vector<Move, std::allocator<Move> >::vector(std::vector<Move, std::allocator<Move> >&&) [379]
                0.00    0.00       1/2           std::remove_reference<std::vector<Move, std::allocator<Move> >&>::type&& std::move<std::vector<Move, std::allocator<Move> >&>(std::vector<Move, std::allocator<Move> >&) [353]
                0.00    0.00       1/1           std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&) [371]
-----------------------------------------------
                0.00    0.00       1/1           Board::Board(int, int, int, int, int, XColor*) [13]
[380]    0.0    0.00    0.00       1         std::vector<Faction, std::allocator<Faction> >::vector() [380]
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_base() [375]
-----------------------------------------------
                0.00    0.00       1/1           Board::~Board() [355]
[381]    0.0    0.00    0.00       1         std::vector<Faction, std::allocator<Faction> >::~vector() [381]
                0.00    0.00       1/9           std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() [277]
                0.00    0.00       1/5           void std::_Destroy<Faction*, Faction>(Faction*, Faction*, std::allocator<Faction>&) [320]
                0.00    0.00       1/1           std::_Vector_base<Faction, std::allocator<Faction> >::~_Vector_base() [376]
-----------------------------------------------
                0.00    0.00       1/1           void std::make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [383]
[382]    0.0    0.00    0.00       1         void std::__make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [382]
                0.00    0.00       1/26742       __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&) [59]
-----------------------------------------------
                0.00    0.00       1/1           std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [26]
[383]    0.0    0.00    0.00       1         void std::make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove) [383]
                0.00    0.00       1/7978        __gnu_cxx::__ops::_Iter_comp_iter<compareMove> __gnu_cxx::__ops::__iter_comp_iter<compareMove>(compareMove) [100]
                0.00    0.00       1/1           void std::__make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [382]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2017 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [354] VirtualRootWindowOfScreen(Screen*) [362] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::begin() const [378] std::vector<Move, std::allocator<Move> >::vector()
  [49] compareMove::operator()(Move, Move) [363] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::capacity() const [379] std::vector<Move, std::allocator<Move> >::vector(std::vector<Move, std::allocator<Move> >&&)
  [78] Cell::init(int)       [246] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size() const [349] std::vector<Move, std::allocator<Move> >::~vector()
  [51] Cell::Cell()          [221] std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [14] void std::vector<Faction, std::allocator<Faction> >::emplace_back<>()
  [88] Cell::Cell(int, int)  [189] std::vector<int, std::allocator<int> >::_M_range_check(unsigned long) const [15] void std::vector<Faction, std::allocator<Faction> >::_M_emplace_back_aux<>()
  [79] Move::Move(int, int, int, int) [162] std::vector<int, std::allocator<int> >::size() const [66] std::vector<Faction, std::allocator<Faction> >::at(unsigned long)
  [22] Board::init()         [195] std::vector<int, std::allocator<int> >::max_size() const [380] std::vector<Faction, std::allocator<Faction> >::vector()
  [10] Board::step(int)      [173] std::allocator<Cell>::allocator() [381] std::vector<Faction, std::allocator<Faction> >::~vector()
  [21] Board::setCell(int, int, int, int) [140] std::allocator<Cell>::allocator(std::allocator<Cell> const&) [67] std::vector<Faction, std::allocator<Faction> >::operator[](unsigned long)
   [2] Board::drawBoard(_XDisplay*, unsigned long&, _XGC*&) [138] std::allocator<Cell>::~allocator() [37] void std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_emplace_back_aux<std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> > const&)
  [13] Board::Board(int, int, int, int, int, XColor*) [364] std::allocator<Move>::allocator(std::allocator<Move> const&) [34] std::vector<Cell, std::allocator<Cell> >* std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > >(unsigned long, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >)
 [355] Board::~Board()       [365] std::allocator<Move>::allocator() [4] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::at(unsigned long)
 [113] Faction::getAccuracy() [340] std::allocator<Move>::~allocator() [28] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::push_back(std::vector<Cell, std::allocator<Cell> > const&)
 [114] Faction::getStrength() [366] std::allocator<Faction>::allocator() [350] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::vector()
 [294] Faction::init(int)    [367] std::allocator<Faction>::~allocator() [351] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~vector()
 [164] Faction::getArmor()   [341] std::allocator<std::vector<Cell, std::allocator<Cell> > >::allocator() [29] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator=(std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > const&)
  [80] Faction::getSpeed()   [342] std::allocator<std::vector<Cell, std::allocator<Cell> > >::~allocator() [7] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::operator[](unsigned long)
 [116] Faction::getHealth()  [300] std::allocator<int>::allocator() [206] void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&)
 [126] __gnu_cxx::new_allocator<Cell>::deallocate(Cell*, unsigned long) [301] std::allocator<int>::~allocator() [227] void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&)
 [127] __gnu_cxx::new_allocator<Cell>::allocate(unsigned long, void const*) [324] Faction* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Faction>(Faction const*, Faction const*, Faction*) [190] std::vector<int, std::allocator<int> >::at(unsigned long)
  [89] void __gnu_cxx::new_allocator<Cell>::construct<Cell, Cell const&>(Cell*, Cell const&) [222] int* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) [307] std::vector<int, std::allocator<int> >::end()
 [139] __gnu_cxx::new_allocator<Cell>::new_allocator(__gnu_cxx::new_allocator<Cell> const&) [271] void std::_Destroy_aux<false>::__destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*) [308] std::vector<int, std::allocator<int> >::begin()
 [170] __gnu_cxx::new_allocator<Cell>::new_allocator() [122] void std::_Destroy_aux<true>::__destroy<Cell*>(Cell*, Cell*) [207] std::vector<int, std::allocator<int> >::push_back(int&&)
 [137] __gnu_cxx::new_allocator<Cell>::~new_allocator() [250] void std::_Destroy_aux<true>::__destroy<Move*>(Move*, Move*) [309] std::vector<int, std::allocator<int> >::vector()
 [258] __gnu_cxx::new_allocator<Move>::deallocate(Move*, unsigned long) [317] void std::_Destroy_aux<true>::__destroy<Faction*>(Faction*, Faction*) [310] std::vector<int, std::allocator<int> >::~vector()
 [101] void __gnu_cxx::new_allocator<Move>::destroy<Move>(Move*) [211] void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [191] std::vector<int, std::allocator<int> >::operator[](unsigned long)
 [259] __gnu_cxx::new_allocator<Move>::allocate(unsigned long, void const*) [128] std::_Vector_base<Cell, std::allocator<Cell> >::_M_allocate(unsigned long) [64] void std::_Construct<Cell, Cell const&>(Cell*, Cell const&)
  [81] void __gnu_cxx::new_allocator<Move>::construct<Move, Move>(Move*, Move&&) [178] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_M_swap_data(std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl&) [76] void std::_Construct<Cell, Cell>(Cell*, Cell&&)
 [356] __gnu_cxx::new_allocator<Move>::new_allocator() [154] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell> const&) [110] void std::_Construct<Move, Move>(Move*, Move&&)
 [357] __gnu_cxx::new_allocator<Move>::new_allocator(__gnu_cxx::new_allocator<Move> const&) [174] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl() [32] void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&)
 [336] __gnu_cxx::new_allocator<Move>::~new_allocator() [179] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::_Vector_impl(std::allocator<Cell>&&) [183] void std::_Construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >&&)
 [321] __gnu_cxx::new_allocator<Faction>::deallocate(Faction*, unsigned long) [143] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_impl::~_Vector_impl() [17] void std::__pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>)
 [322] __gnu_cxx::new_allocator<Faction>::allocate(unsigned long, void const*) [123] std::_Vector_base<Cell, std::allocator<Cell> >::_M_deallocate(Cell*, unsigned long) [56] Cell* std::__addressof<Cell>(Cell&)
 [295] void __gnu_cxx::new_allocator<Faction>::construct<Faction>(Faction*) [155] std::_Vector_base<Cell, std::allocator<Cell> >::_M_create_storage(unsigned long) [111] Move* std::__addressof<Move>(Move&)
 [358] __gnu_cxx::new_allocator<Faction>::new_allocator() [115] std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() [141] std::vector<Cell, std::allocator<Cell> >* std::__addressof<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >&)
 [359] __gnu_cxx::new_allocator<Faction>::~new_allocator() [180] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(std::_Vector_base<Cell, std::allocator<Cell> >&&) [382] void std::__make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>)
 [275] __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [156] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base(unsigned long, std::allocator<Cell> const&) [71] void std::__push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_val<compareMove>)
 [276] __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::allocate(unsigned long, void const*) [175] std::_Vector_base<Cell, std::allocator<Cell> >::_Vector_base() [215] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__miter_base<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  [30] void __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [144] std::_Vector_base<Cell, std::allocator<Cell> >::~_Vector_base() [288] decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Faction*>(std::move_iterator<Faction*>)
 [337] __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::new_allocator() [261] std::_Vector_base<Move, std::allocator<Move> >::_M_allocate(unsigned long) [289] Faction* std::__miter_base<Faction*>(Faction*)
 [338] __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::~new_allocator() [368] std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_M_swap_data(std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl&) [198] decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>)
 [217] __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [369] std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl() [199] int* std::__miter_base<int*>(int*)
 [218] __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [370] std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::_Vector_impl(std::allocator<Move>&&) [270] Faction* std::__niter_base<Faction*>(Faction*)
 [204] void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [343] std::_Vector_base<Move, std::allocator<Move> >::_Vector_impl::~_Vector_impl() [188] int* std::__niter_base<int*>(int*)
 [296] __gnu_cxx::new_allocator<int>::new_allocator() [251] std::_Vector_base<Move, std::allocator<Move> >::_M_deallocate(Move*, unsigned long) [203] int* std::__niter_base<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
 [297] __gnu_cxx::new_allocator<int>::~new_allocator() [216] std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() [18] void std::__adjust_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove> >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, long, long, Move, __gnu_cxx::__ops::_Iter_comp_iter<compareMove>)
 [151] __gnu_cxx::__alloc_traits<std::allocator<Cell> >::_S_select_on_copy(std::allocator<Cell> const&) [371] std::_Vector_base<Move, std::allocator<Move> >::_Vector_base(std::_Vector_base<Move, std::allocator<Move> >&&) [329] Faction* std::__copy_move_a<true, Faction*, Faction*>(Faction*, Faction*, Faction*)
 [360] __gnu_cxx::__alloc_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_S_propagate_on_copy_assign() [372] std::_Vector_base<Move, std::allocator<Move> >::_Vector_base() [228] int* std::__copy_move_a<true, int*, int*>(int*, int*, int*)
  [45] __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move* const&) [344] std::_Vector_base<Move, std::allocator<Move> >::~_Vector_base() [253] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::move_backward<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
 [102] __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator--() [325] std::_Vector_base<Faction, std::allocator<Faction> >::_M_allocate(unsigned long) [330] Faction* std::__copy_move_a2<true, Faction*, Faction*>(Faction*, Faction*, Faction*)
 [142] __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::__normal_iterator(Cell const* const&) [373] std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::_Vector_impl() [229] int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*)
  [62] __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator++() [374] std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_impl::~_Vector_impl() [311] void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter)
  [93] __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::__normal_iterator(Move const* const&) [318] std::_Vector_base<Faction, std::allocator<Faction> >::_M_deallocate(Faction*, unsigned long) [312] void std::__introsort_loop<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter)
 [339] __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::__normal_iterator(std::vector<Cell, std::allocator<Cell> > const* const&) [277] std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() [159] Cell* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*)
 [171] __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator++() [375] std::_Vector_base<Faction, std::allocator<Faction> >::_Vector_base() [35] std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*)
 [201] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [376] std::_Vector_base<Faction, std::allocator<Faction> >::~_Vector_base() [134] Cell* std::uninitialized_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*)
 [219] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator--() [278] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_allocate(unsigned long) [266] Move* std::uninitialized_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*)
 [209] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator++() [345] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::_Vector_impl() [331] Faction* std::uninitialized_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*)
  [70] __gnu_cxx::__ops::_Iter_comp_val<compareMove>::_Iter_comp_val(compareMove) [346] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_impl::~_Vector_impl() [290] std::vector<Cell, std::allocator<Cell> >* std::uninitialized_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*)
  [68] bool __gnu_cxx::__ops::_Iter_comp_val<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, Move&) [272] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_deallocate(std::vector<Cell, std::allocator<Cell> >*, unsigned long) [230] int* std::uninitialized_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)
  [99] __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::_Iter_comp_iter(compareMove) [243] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() [254] int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*)
  [50] bool __gnu_cxx::__ops::_Iter_comp_iter<compareMove>::operator()<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >) [347] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_Vector_base() [313] void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter)
 [103] __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(__gnu_cxx::__ops::_Iter_comp_iter<compareMove>) [348] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::~_Vector_base() [160] Cell* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, Cell>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*, std::allocator<Cell>&)
  [82] __gnu_cxx::__ops::_Iter_comp_val<compareMove> __gnu_cxx::__ops::__iter_comp_val<compareMove>(compareMove) [223] std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [36] std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
 [242] __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter) [302] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [135] Cell* std::__uninitialized_copy_a<std::move_iterator<Cell*>, Cell*, Cell>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*, std::allocator<Cell>&)
 [100] __gnu_cxx::__ops::_Iter_comp_iter<compareMove> __gnu_cxx::__ops::__iter_comp_iter<compareMove>(compareMove) [303] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [267] Move* std::__uninitialized_copy_a<std::move_iterator<Move*>, Move*, Move>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*, std::allocator<Move>&)
 [298] __gnu_cxx::__ops::__iter_less_iter() [212] std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [332] Faction* std::__uninitialized_copy_a<std::move_iterator<Faction*>, Faction*, Faction>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*, std::allocator<Faction>&)
 [299] bool __gnu_cxx::operator==<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [192] std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [291] std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy_a<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
  [59] __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::difference_type __gnu_cxx::operator-<Move*, std::vector<Move, std::allocator<Move> > >(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > > const&) [304] std::_Vector_base<int, std::allocator<int> >::_Vector_base() [231] int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&)
 [241] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [305] std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [255] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  [61] bool __gnu_cxx::operator!=<Cell const*, std::vector<Cell, std::allocator<Cell> > >(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > > const&) [119] std::move_iterator<Cell*>::move_iterator(Cell*) [244] void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Val_less_iter)
 [169] bool __gnu_cxx::operator!=<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > > const&) [75] std::move_iterator<Cell*>::operator++() [121] std::move_iterator<Cell*> std::__make_move_if_noexcept_iterator<Cell, std::move_iterator<Cell*> >(Cell*)
 [202] bool __gnu_cxx::operator!=<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [236] std::move_iterator<Move*>::move_iterator(Move*) [238] std::move_iterator<Move*> std::__make_move_if_noexcept_iterator<Move, std::move_iterator<Move*> >(Move*)
 [112] __gnu_cxx::new_allocator<Cell>::max_size() const [109] std::move_iterator<Move*>::operator++() [292] std::move_iterator<Faction*> std::__make_move_if_noexcept_iterator<Faction, std::move_iterator<Faction*> >(Faction*)
 [208] __gnu_cxx::new_allocator<Move>::max_size() const [285] std::move_iterator<Faction*>::move_iterator(Faction*) [249] std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> std::__make_move_if_noexcept_iterator<std::vector<Cell, std::allocator<Cell> >, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> >(std::vector<Cell, std::allocator<Cell> >*)
 [269] __gnu_cxx::new_allocator<Faction>::max_size() const [247] std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::move_iterator(std::vector<Cell, std::allocator<Cell> >*) [200] std::move_iterator<int*> std::__make_move_if_noexcept_iterator<int, std::move_iterator<int*> >(int*)
 [239] __gnu_cxx::new_allocator<std::vector<Cell, std::allocator<Cell> > >::max_size() const [181] std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator++() [136] Cell* std::__uninitialized_move_if_noexcept_a<Cell*, Cell*, std::allocator<Cell> >(Cell*, Cell*, Cell*, std::allocator<Cell>&)
 [187] __gnu_cxx::new_allocator<int>::max_size() const [196] std::move_iterator<int*>::move_iterator(int*) [268] Move* std::__uninitialized_move_if_noexcept_a<Move*, Move*, std::allocator<Move> >(Move*, Move*, Move*, std::allocator<Move>&)
  [53] __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::base() const [11] std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::pop() [333] Faction* std::__uninitialized_move_if_noexcept_a<Faction*, Faction*, std::allocator<Faction> >(Faction*, Faction*, Faction*, std::allocator<Faction>&)
  [46] __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator*() const [20] std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::push(Move&&) [293] std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_move_if_noexcept_a<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
  [83] __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator-(long) const [26] std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::priority_queue(compareMove const&, std::vector<Move, std::allocator<Move> >&&) [232] int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
  [47] __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >::operator+(long) const [377] std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::~priority_queue() [132] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  [55] __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::base() const [129] std::allocator_traits<std::allocator<Cell> >::deallocate(std::allocator<Cell>&, Cell*, unsigned long) [314] std::__lg(long)
  [63] __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >::operator*() const [157] std::allocator_traits<std::allocator<Cell> >::select_on_container_copy_construction(std::allocator<Cell> const&) [334] Faction* std::copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*)
  [94] __gnu_cxx::__normal_iterator<Move const*, std::vector<Move, std::allocator<Move> > >::operator*() const [130] std::allocator_traits<std::allocator<Cell> >::allocate(std::allocator<Cell>&, unsigned long) [233] int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)
 [150] __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::base() const [120] std::allocator_traits<std::allocator<Cell> >::max_size(std::allocator<Cell> const&) [48] std::remove_reference<Move&>::type&& std::move<Move&>(Move&)
 [172] __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >::operator*() const [90] void std::allocator_traits<std::allocator<Cell> >::construct<Cell, Cell const&>(std::allocator<Cell>&, Cell*, Cell const&) [131] std::remove_reference<Cell*&>::type&& std::move<Cell*&>(Cell*&)
 [163] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [262] std::allocator_traits<std::allocator<Move> >::deallocate(std::allocator<Move>&, Move*, unsigned long) [281] std::remove_reference<Move*&>::type&& std::move<Move*&>(Move*&)
 [165] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [104] void std::allocator_traits<std::allocator<Move> >::destroy<Move>(std::allocator<Move>&, Move*) [161] std::remove_reference<std::allocator<Cell>&>::type&& std::move<std::allocator<Cell>&>(std::allocator<Cell>&)
 [240] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator+(long) const [263] std::allocator_traits<std::allocator<Move> >::allocate(std::allocator<Move>&, unsigned long) [352] std::remove_reference<std::allocator<Move>&>::type&& std::move<std::allocator<Move>&>(std::allocator<Move>&)
 [220] bool __gnu_cxx::__ops::_Val_less_iter::operator()<int, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(int&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [237] std::allocator_traits<std::allocator<Move> >::max_size(std::allocator<Move> const&) [184] std::remove_reference<std::vector<Cell, std::allocator<Cell> >&>::type&& std::move<std::vector<Cell, std::allocator<Cell> >&>(std::vector<Cell, std::allocator<Cell> >&)
 [210] bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) const [84] void std::allocator_traits<std::allocator<Move> >::construct<Move, Move>(std::allocator<Move>&, Move*, Move&&) [353] std::remove_reference<std::vector<Move, std::allocator<Move> >&>::type&& std::move<std::vector<Move, std::allocator<Move> >&>(std::vector<Move, std::allocator<Move> >&)
 [117] std::_Vector_base<Cell, std::allocator<Cell> >::_M_get_Tp_allocator() const [326] std::allocator_traits<std::allocator<Faction> >::deallocate(std::allocator<Faction>&, Faction*, unsigned long) [186] std::remove_reference<int&>::type&& std::move<int&>(int&)
 [234] std::_Vector_base<Move, std::allocator<Move> >::_M_get_Tp_allocator() const [327] std::allocator_traits<std::allocator<Faction> >::allocate(std::allocator<Faction>&, unsigned long) [315] void std::sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
 [282] std::_Vector_base<Faction, std::allocator<Faction> >::_M_get_Tp_allocator() const [286] std::allocator_traits<std::allocator<Faction> >::max_size(std::allocator<Faction> const&) [148] std::enable_if<std::__and_<std::is_move_constructible<Cell*>, std::is_move_assignable<Cell*> >::value, void>::type std::swap<Cell*>(Cell*&, Cell*&)
 [245] std::_Vector_base<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_get_Tp_allocator() const [306] void std::allocator_traits<std::allocator<Faction> >::construct<Faction>(std::allocator<Faction>&, Faction*) [335] std::enable_if<std::__and_<std::is_move_constructible<Move*>, std::is_move_assignable<Move*> >::value, void>::type std::swap<Move*>(Move*&, Move*&)
 [193] std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [279] std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::deallocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, unsigned long) [316] void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter)
  [58] std::move_iterator<Cell*>::base() const [280] std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::allocate(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, unsigned long) [77] Cell&& std::forward<Cell>(std::remove_reference<Cell>::type&)
  [74] std::move_iterator<Cell*>::operator*() const [248] std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::max_size(std::allocator<std::vector<Cell, std::allocator<Cell> > > const&) [57] Move&& std::forward<Move>(std::remove_reference<Move>::type&)
  [91] std::move_iterator<Move*>::base() const [31] void std::allocator_traits<std::allocator<std::vector<Cell, std::allocator<Cell> > > >::construct<std::vector<Cell, std::allocator<Cell> >, std::vector<Cell, std::allocator<Cell> > const&>(std::allocator<std::vector<Cell, std::allocator<Cell> > >&, std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > const&) [54] Cell const& std::forward<Cell const&>(std::remove_reference<Cell const&>::type&)
 [108] std::move_iterator<Move*>::operator*() const [224] std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [146] std::vector<Cell, std::allocator<Cell> > const& std::forward<std::vector<Cell, std::allocator<Cell> > const&>(std::remove_reference<std::vector<Cell, std::allocator<Cell> > const&>::type&)
 [283] std::move_iterator<Faction*>::base() const [225] std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [185] std::vector<Cell, std::allocator<Cell> >&& std::forward<std::vector<Cell, std::allocator<Cell> > >(std::remove_reference<std::vector<Cell, std::allocator<Cell> > >::type&)
 [149] std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::base() const [197] std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [166] int&& std::forward<int>(std::remove_reference<int>::type&)
 [177] std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>::operator*() const [205] void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [124] void std::_Destroy<Cell*>(Cell*, Cell*)
 [194] std::move_iterator<int*>::base() const [252] int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*) [125] void std::_Destroy<Cell*, Cell>(Cell*, Cell*, std::allocator<Cell>&)
  [95] std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::top() const [158] Cell* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*>(__gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, __gnu_cxx::__normal_iterator<Cell const*, std::vector<Cell, std::allocator<Cell> > >, Cell*) [256] void std::_Destroy<Move*>(Move*, Move*)
  [98] std::priority_queue<Move, std::vector<Move, std::allocator<Move> >, compareMove>::size() const [33] std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*>(__gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, __gnu_cxx::__normal_iterator<std::vector<Cell, std::allocator<Cell> > const*, std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > > >, std::vector<Cell, std::allocator<Cell> >*) [257] void std::_Destroy<Move*, Move>(Move*, Move*, std::allocator<Move>&)
  [25] std::vector<Cell, std::allocator<Cell> >::_M_check_len(unsigned long, char const*) const [133] Cell* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Cell*>, Cell*>(std::move_iterator<Cell*>, std::move_iterator<Cell*>, Cell*) [319] void std::_Destroy<Faction*>(Faction*, Faction*)
   [5] std::vector<Cell, std::allocator<Cell> >::_M_range_check(unsigned long) const [264] Move* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move*>, Move*>(std::move_iterator<Move*>, std::move_iterator<Move*>, Move*) [320] void std::_Destroy<Faction*, Faction>(Faction*, Faction*, std::allocator<Faction>&)
 [152] std::vector<Cell, std::allocator<Cell> >::end() const [287] std::vector<Cell, std::allocator<Cell> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*>, std::vector<Cell, std::allocator<Cell> >*) [273] void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*>(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*)
   [9] std::vector<Cell, std::allocator<Cell> >::size() const [328] Faction* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Faction*>, Faction*>(std::move_iterator<Faction*>, std::move_iterator<Faction*>, Faction*) [274] void std::_Destroy<std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*, std::vector<Cell, std::allocator<Cell> >*, std::allocator<std::vector<Cell, std::allocator<Cell> > >&)
 [153] std::vector<Cell, std::allocator<Cell> >::begin() const [226] int* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [213] void std::_Destroy<int*>(int*, int*)
 [118] std::vector<Cell, std::allocator<Cell> >::max_size() const [24] void std::vector<Cell, std::allocator<Cell> >::_M_emplace_back_aux<Cell const&>(Cell const&) [214] void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
 [260] std::vector<Move, std::allocator<Move> >::_M_check_len(unsigned long, char const*) const [3] std::vector<Cell, std::allocator<Cell> >::at(unsigned long) [147] void std::_Destroy<std::vector<Cell, std::allocator<Cell> > >(std::vector<Cell, std::allocator<Cell> >*)
  [92] std::vector<Move, std::allocator<Move> >::size() const [23] std::vector<Cell, std::allocator<Cell> >::push_back(Cell const&) [19] void std::pop_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove)
  [96] std::vector<Move, std::allocator<Move> >::begin() const [27] std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> > const&) [383] void std::make_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove)
  [97] std::vector<Move, std::allocator<Move> >::front() const [176] std::vector<Cell, std::allocator<Cell> >::vector() [87] void std::push_heap<__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove>(__gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, __gnu_cxx::__normal_iterator<Move*, std::vector<Move, std::allocator<Move> > >, compareMove)
 [235] std::vector<Move, std::allocator<Move> >::max_size() const [182] std::vector<Cell, std::allocator<Cell> >::vector(std::vector<Cell, std::allocator<Cell> >&&) [72] bool std::operator==<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&)
 [323] std::vector<Faction, std::allocator<Faction> >::_M_check_len(unsigned long, char const*) const [145] std::vector<Cell, std::allocator<Cell> >::~vector() [106] bool std::operator==<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&)
  [65] std::vector<Faction, std::allocator<Faction> >::_M_range_check(unsigned long) const [6] std::vector<Cell, std::allocator<Cell> >::operator[](unsigned long) [167] bool std::operator==<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&)
  [60] std::vector<Faction, std::allocator<Faction> >::size() const [85] void std::vector<Move, std::allocator<Move> >::emplace_back<Move>(Move&&) [73] bool std::operator!=<Cell*>(std::move_iterator<Cell*> const&, std::move_iterator<Cell*> const&)
 [284] std::vector<Faction, std::allocator<Faction> >::max_size() const [265] void std::vector<Move, std::allocator<Move> >::_M_emplace_back_aux<Move>(Move&&) [107] bool std::operator!=<Move*>(std::move_iterator<Move*> const&, std::move_iterator<Move*> const&)
  [38] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_check_len(unsigned long, char const*) const [16] std::vector<Move, std::allocator<Move> >::end() [168] bool std::operator!=<std::vector<Cell, std::allocator<Cell> >*>(std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&, std::move_iterator<std::vector<Cell, std::allocator<Cell> >*> const&)
   [8] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::_M_range_check(unsigned long) const [69] std::vector<Move, std::allocator<Move> >::begin() [52] operator new(unsigned long, void*)
 [361] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::end() const [105] std::vector<Move, std::allocator<Move> >::pop_back()
  [12] std::vector<std::vector<Cell, std::allocator<Cell> >, std::allocator<std::vector<Cell, std::allocator<Cell> > > >::size() const [86] std::vector<Move, std::allocator<Move> >::push_back(Move&&)
